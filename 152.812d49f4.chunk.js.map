{"version":3,"file":"152.812d49f4.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./lib/hooks/use-render-order.tsx","webpack://react-xr-ui/./lib/components/layer.tsx","webpack://react-xr-ui/./lib/services/layout.ts","webpack://react-xr-ui/./src/components/button.tsx","webpack://react-xr-ui/./src/components/example.tsx","webpack://react-xr-ui/./src/examples/typography.tsx"],"sourcesContent":["import * as React from \"react\";\n\nlet lastRenderOrder = -1;\n\nexport default function useRenderOrder() {\n  return React.useMemo(() => {\n    return ++lastRenderOrder;\n  }, []);\n}\n","import * as React from \"react\";\nimport * as THREE from \"three\";\nimport canvasTxt from \"canvas-txt\";\nimport useRenderOrder from \"../hooks/use-render-order\";\nimport layout from \"../services/layout\";\nimport { BorderArray, LayerContextType, LayerProps } from \"../types\";\n\nconst LayerContext = React.createContext<LayerContextType>({\n  parentUuid: null,\n  currentChildren: [],\n  addChild() {},\n  removeChild() {},\n});\n\nconst DEFAULT_BACKGROUND_POSITION: LayerProps[\"backgroundPosition\"] = [0, 0];\n\nfunction Layer(\n  {\n    zIndex = 0,\n    resolution = 2048,\n    visible = true,\n    autoLayout = true,\n    width = 1,\n    height = 1,\n    opacity = 1,\n    backgroundColor = \"transparent\",\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition = DEFAULT_BACKGROUND_POSITION,\n    borderRadius = 0,\n    borderWidth = 0,\n    borderColor = \"transparent\",\n    flexDirection = \"row\",\n    alignItems = \"center\",\n    justifyContent = \"center\",\n    gap = 0,\n    textContent,\n    textAlign = \"left\",\n    justifyText = false,\n    verticalAlign = \"top\",\n    color = \"white\",\n    fontFamily = \"system-ui, sans-serif\",\n    fontSize = 0.1,\n    fontWeight = \"normal\",\n    childIndex,\n    children,\n    ...props\n  }: LayerProps,\n  ref: React.ForwardedRef<THREE.Group>\n) {\n  const renderOrder = useRenderOrder();\n\n  const materialRef = React.useRef<THREE.MeshBasicMaterial>(null);\n  const childrenGroupRef = React.useRef<THREE.Group>(null);\n\n  const layerContext = React.useContext(LayerContext);\n\n  const uuid = React.useMemo(() => {\n    return THREE.MathUtils.generateUUID();\n  }, []);\n\n  React.useEffect(() => {\n    if (layerContext.parentUuid === null || childIndex === undefined) return;\n    layerContext.addChild({ width, height, index: childIndex, uuid });\n    return () => {\n      layerContext.removeChild(uuid);\n    };\n  }, [width, height, childIndex, layerContext.parentUuid]);\n\n  // Create 2d canvas context\n  const ctx = React.useMemo<CanvasRenderingContext2D>(() => {\n    const canvas = document.createElement(\"canvas\");\n    return canvas.getContext(\"2d\")!;\n  }, []);\n\n  // Set canvas size\n  React.useMemo(() => {\n    ctx.canvas.width = Math.max(1, Math.floor(width * resolution));\n    ctx.canvas.height = Math.max(1, Math.floor(height * resolution));\n  }, [ctx.canvas, width, height, resolution]);\n\n  // Create canvas texture with the newly created canvas;\n  // this will be used as the texture for the plane\n  const canvasTexture = React.useMemo(() => {\n    const canvasTexture = new THREE.CanvasTexture(ctx.canvas);\n    canvasTexture.anisotropy = 16;\n    return canvasTexture;\n  }, [ctx.canvas, width, height]);\n\n  const images = React.useMemo(() => {\n    const backgroundImage = new Image();\n    return { backgroundImage };\n  }, []);\n\n  // Set source for background image\n  React.useMemo(() => {\n    if (backgroundImage === undefined) return;\n    images.backgroundImage.src = backgroundImage;\n  }, [images.backgroundImage, backgroundImage]);\n\n  React.useEffect(() => {\n    let nextFrame: number;\n    (function render() {\n      nextFrame = requestAnimationFrame(render);\n      // Useful vars\n      const w = ctx.canvas.width;\n      const h = ctx.canvas.height;\n      const d2r = Math.PI / 180; // degrees to radians\n      const res = (w + h) / 2;\n      const { mapLinear } = THREE.MathUtils;\n\n      ctx.globalCompositeOperation = \"source-over\";\n\n      ctx.clearRect(0, 0, w, h);\n\n      // Border radius\n      {\n        const isArray = Array.isArray(borderRadius);\n        const array = borderRadius as BorderArray;\n        const number = borderRadius as number;\n        let [tl = 0, tr = 0, br = 0, bl = 0] = isArray\n          ? array\n          : [number, number, number, number];\n        tl *= res;\n        tr *= res;\n        br *= res;\n        bl *= res;\n        ctx.beginPath();\n        ctx.moveTo(tl, 0);\n        ctx.lineTo(w - tr, 0);\n        ctx.arc(w - tr, tr, tr, d2r * 270, d2r * 360);\n        ctx.lineTo(w, h - br);\n        ctx.arc(w - br, h - br, br, 0, d2r * 90);\n        ctx.lineTo(bl, h);\n        ctx.arc(bl, h - bl, bl, d2r * 90, d2r * 180);\n        ctx.lineTo(0, tl);\n        ctx.arc(tl, tl, tl, d2r * 180, d2r * 270);\n        ctx.closePath();\n      }\n\n      ctx.globalAlpha = opacity;\n\n      // Background color\n      ctx.fillStyle = backgroundColor;\n      ctx.lineWidth = borderWidth * res * 2;\n      ctx.fill();\n\n      const ox = borderWidth * res;\n      const oy = borderWidth * res;\n\n      // Background image\n      if (backgroundImage !== undefined) {\n        const x = backgroundPosition?.[0] ?? 0.5;\n        const y = backgroundPosition?.[1] ?? 0.5;\n        const sx = 0;\n        const sy = 0;\n        const sw = images.backgroundImage.width;\n        const sh = images.backgroundImage.height;\n        const ir = sw / sh;\n        const cr = w / h;\n        let dw = sw;\n        let dh = sh;\n        switch (backgroundSize) {\n          case \"stretch\":\n            dw = w;\n            dh = h;\n            break;\n          case \"contain\":\n            dw = w - ox * 2;\n            dh = h - oy * 2;\n            if (ir > cr) {\n              dh = dw / ir;\n            } else {\n              dw = dh * ir;\n            }\n            break;\n          case \"cover\":\n            dw = w - ox * 2;\n            dh = h - oy * 2;\n            if (ir < cr) {\n              dh = dw / ir;\n            } else {\n              dw = dh * ir;\n            }\n            break;\n        }\n        const dx = ox + mapLinear(x, 0, 1, 0, w - ox * 2 - dw);\n        const dy = oy + mapLinear(y, 0, 1, 0, h - oy * 2 - dh);\n        ctx.save();\n        ctx.clip();\n        ctx.drawImage(images.backgroundImage, sx, sy, sw, sh, dx, dy, dw, dh);\n        ctx.restore();\n      }\n\n      // Typography\n      if (textContent !== undefined) {\n        // @ts-ignore\n        canvasTxt.font = fontFamily;\n        // @ts-ignore\n        canvasTxt.fontSize = fontSize * Math.min(w, h);\n        // @ts-ignore\n        canvasTxt.align = textAlign;\n        // @ts-ignore\n        canvasTxt.vAlign = verticalAlign;\n        // @ts-ignore\n        canvasTxt.justify = justifyText;\n        // @ts-ignore\n        canvasTxt.fontWeight = fontWeight;\n        ctx.textBaseline = \"bottom\";\n        ctx.fillStyle = color;\n        canvasTxt.drawText(ctx, textContent, ox, oy, w - ox * 2, h - oy * 2);\n      }\n\n      // Fixes antialiasing issue\n      ctx.globalCompositeOperation = \"destination-out\";\n      ctx.stroke();\n      ctx.globalCompositeOperation = \"source-over\";\n      ctx.save();\n      ctx.clip();\n\n      ctx.strokeStyle = borderColor;\n      // Border\n      ctx.stroke();\n      ctx.restore();\n\n      // Make sure canvas texture gets updated\n      canvasTexture.needsUpdate = true;\n    })();\n    return () => cancelAnimationFrame(nextFrame);\n  }, []);\n\n  const [currentChildren, setCurrentChildren] = React.useState<\n    LayerContextType[\"currentChildren\"]\n  >([]);\n\n  const childGroupRefs = React.useMemo(() => {\n    return currentChildren.map(() => React.createRef<THREE.Group>());\n  }, [currentChildren]);\n\n  // Layout calculations\n  React.useEffect(() => {\n    const size = { width, height };\n    size.width -= borderWidth * 2;\n    size.height -= borderWidth * 2;\n    let refs = [...childGroupRefs];\n    if ([\"column\", \"row-reverse\"].includes(flexDirection)) {\n      refs.reverse();\n    }\n    refs.forEach((ref, index) => {\n      if (ref.current === null) return;\n      const [x, y] = layout({\n        currentChildren,\n        index,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        gap,\n        size,\n      });\n      ref.current.position.x = x;\n      ref.current.position.y = y;\n    });\n  }, [\n    childGroupRefs,\n    currentChildren,\n    width,\n    height,\n    flexDirection,\n    alignItems,\n    justifyContent,\n    borderWidth,\n    gap,\n  ]);\n\n  const layerProviderValue = React.useMemo<LayerContextType>(() => {\n    return {\n      currentChildren,\n      parentUuid: uuid,\n      addChild(child) {\n        setCurrentChildren((currentChildren) => {\n          const nextCurrentChildren = [...currentChildren];\n          const index = currentChildren.findIndex((value) => {\n            return value.uuid === child.uuid;\n          });\n          if (index === -1) {\n            nextCurrentChildren.push({ ...child });\n          } else {\n            nextCurrentChildren[index] = { ...child };\n          }\n          return nextCurrentChildren.sort((a, b) => {\n            return a.index - b.index;\n          });\n        });\n      },\n      removeChild(uuid) {\n        setCurrentChildren((currentChildren) => {\n          return currentChildren.filter((value) => value.uuid !== uuid);\n        });\n      },\n    };\n  }, [currentChildren, uuid]);\n\n  React.useEffect(() => {\n    const childrenGroup = childrenGroupRef.current;\n    if (childrenGroup === null) return;\n    childrenGroup.traverse((object) => {\n      if (\n        object instanceof THREE.Mesh &&\n        object.material instanceof THREE.Material\n      ) {\n        object.material.transparent = true;\n        object.material.opacity = opacity;\n        object.material.needsUpdate = true;\n      }\n    });\n  }, [opacity]);\n\n  return (\n    <LayerContext.Provider value={layerProviderValue}>\n      <group ref={ref} {...props} visible={visible}>\n        <mesh renderOrder={renderOrder + zIndex}>\n          <planeBufferGeometry args={[width, height]} />\n          <meshBasicMaterial\n            ref={materialRef}\n            side={THREE.FrontSide}\n            opacity={opacity}\n            transparent={true}\n            depthWrite={false}\n            map={canvasTexture}\n          />\n        </mesh>\n        <group renderOrder={renderOrder + zIndex + 1} ref={childrenGroupRef}>\n          {React.Children.map(children, (child, childIndex) => {\n            if (React.isValidElement(child)) {\n              return (\n                <group key={childIndex} ref={childGroupRefs[childIndex]}>\n                  {React.cloneElement(child, { ...child.props, childIndex })}\n                </group>\n              );\n            }\n            return child;\n          })}\n        </group>\n      </group>\n    </LayerContext.Provider>\n  );\n}\n\nconst ForwardedLayer = React.forwardRef(Layer);\nForwardedLayer.displayName = \"layer\";\nexport default ForwardedLayer;\n","import { Child, LayerProps, Size } from \"../types\";\n\ntype Axis = \"width\" | \"height\";\n\ntype Args = {\n  currentChildren: Child[];\n  index: number;\n  flexDirection: \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\";\n  alignItems: \"start\" | \"center\" | \"end\";\n  justifyContent: \"start\" | \"center\" | \"end\" | \"space-between\" | \"space-around\";\n  gap: number;\n  size: Size;\n};\n\nexport default function layout({\n  currentChildren,\n  index,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  gap,\n  size,\n}: Args): [x: number, y: number] {\n  const childrenWidth = currentChildren.reduce((width, child) => {\n    return width + child.width;\n  }, 0);\n  const childrenHeight = currentChildren.reduce((height, child) => {\n    return height + child.height;\n  }, 0);\n  let x = 0;\n  let y = 0;\n  let contentSize = childrenWidth;\n  let axis: Axis = \"width\";\n  let axisInverted: Axis = \"height\";\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    axis = \"height\";\n    axisInverted = \"width\";\n    contentSize = childrenHeight;\n  }\n  if (\n    currentChildren.length > 0 &&\n    ![\"space-between\", \"space-around\"].includes(justifyContent)\n  ) {\n    contentSize += gap * (currentChildren.length - 1);\n  }\n  /**\n   * justifyContent\n   */\n  if (justifyContent === \"start\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"center\") {\n    x = currentChildren[0][axis] * 0.5 - contentSize * 0.5;\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"end\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"space-between\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length - 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  if (justifyContent === \"space-around\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length + 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      x += spacing;\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  /**\n   * alignItems\n   */\n  if (alignItems === \"start\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if (alignItems === \"center\") {\n    // No calculation needed\n  }\n  if (alignItems === \"end\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    return [y, x];\n  }\n\n  return [x, y];\n}\n","import { GroupProps } from \"@react-three/fiber\";\nimport React from \"react\";\nimport { Layer } from \"../../lib\";\n\ntype Props = {\n  textContent: string;\n  selected: boolean;\n  onClick: GroupProps[\"onClick\"];\n  fontSize: number;\n  width: number;\n  height: number;\n  fontFamily?: string;\n};\n\nexport default function Button({\n  textContent,\n  selected,\n  onClick,\n  fontSize,\n  width,\n  height,\n  fontFamily = \"system-ui, sans-serif\",\n}: Props) {\n  const [pointerOver, setPointerOver] = React.useState(false);\n\n  return (\n    <Layer\n      width={width}\n      height={height}\n      backgroundColor={pointerOver || selected ? \"white\" : \"#111111\"}\n      color={pointerOver || selected ? \"#111111\" : \"white\"}\n      textContent={textContent}\n      fontFamily={fontFamily}\n      fontSize={fontSize}\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      onPointerOver={() => setPointerOver(true)}\n      onPointerOut={() => setPointerOver(false)}\n      onClick={(event) => {\n        onClick(event);\n        setPointerOver(false);\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { BoxLineGeometry } from \"three/examples/jsm/geometries/BoxLineGeometry\";\nimport { DefaultXRControllers, VRCanvas as Canvas } from \"@react-three/xr\";\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport default function Example({ children }: Props) {\n  const room = React.useMemo(() => {\n    return new BoxLineGeometry(6, 6, 6, 10, 10, 10).translate(0, 3, 0);\n  }, []);\n\n  return (\n    <Canvas legacy flat linear gl={{ alpha: false }}>\n      {/** Background, cameras, controls and lights */}\n      <color args={[\"#333333\"]} attach=\"background\" />\n      <lineSegments geometry={room}>\n        <lineBasicMaterial color=\"#c0c0c0\" />\n      </lineSegments>\n      <PerspectiveCamera makeDefault position={[0, 1.6, 0]} />\n      <OrbitControls makeDefault target={[0, 1, -1.8]} />\n      <ambientLight />\n      <DefaultXRControllers />\n\n      <group position={[0, 1, -1.88]}>{children}</group>\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport Example from \"@/components/example\";\nimport { Layer } from \"../../lib\";\nimport Button from \"@/components/button\";\n\n// Arial (sans-serif)\n// Verdana (sans-serif)\n// Helvetica (sans-serif)\n// Tahoma (sans-serif)\n// Trebuchet MS (sans-serif)\n// Times New Roman (serif)\n// Georgia (serif)\n// Garamond (serif)\n// Courier New (monospace)\n// Brush Script MT (cursive)\n\nexport default function Typography() {\n  const [fontFamily, setFontFamily] = React.useState(\"system-ui\");\n\n  return (\n    <Example>\n      <Layer\n        width={1.3}\n        height={0.1}\n        justifyContent=\"space-around\"\n        position-y={0.6}\n      >\n        <Button\n          textContent=\"system-ui\"\n          fontFamily=\"system-ui\"\n          selected={fontFamily === \"system-ui\"}\n          onClick={() => setFontFamily(\"system-ui\")}\n          fontSize={0.3}\n          width={0.2}\n          height={0.1}\n        />\n        <Button\n          textContent=\"Arial\"\n          fontFamily=\"Arial, sans-serif\"\n          selected={fontFamily === \"Arial\"}\n          onClick={() => setFontFamily(\"Arial, sans-serif\")}\n          fontSize={0.3}\n          width={0.2}\n          height={0.1}\n        />\n        <Button\n          textContent=\"Times New Roman\"\n          fontFamily=\"Times New Roman, serif\"\n          selected={fontFamily === \"Times New Roman, serif\"}\n          onClick={() => setFontFamily(\"Times New Roman, serif\")}\n          fontSize={0.3}\n          width={0.3}\n          height={0.1}\n        />\n        <Button\n          textContent=\"Courier New\"\n          fontFamily=\"Courier New, monospace\"\n          selected={fontFamily === \"Courier New, monospace\"}\n          onClick={() => setFontFamily(\"Courier New, monospace\")}\n          fontSize={0.3}\n          width={0.25}\n          height={0.1}\n        />\n        <Button\n          textContent=\"Brush Script MT\"\n          fontFamily=\"Brush Script MT, cursive\"\n          selected={fontFamily === \"Brush Script MT, cursive\"}\n          onClick={() => setFontFamily(\"Brush Script MT, cursive\")}\n          fontSize={0.3}\n          width={0.25}\n          height={0.1}\n        />\n      </Layer>\n      <Layer\n        width={1}\n        height={1}\n        borderWidth={0.025}\n        borderColor=\"#222222\"\n        borderRadius={0.05}\n        backgroundColor=\"#444444\"\n        fontFamily={fontFamily}\n        textContent={`This is a test with some long text...`}\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        color=\"crimson\"\n      />\n    </Example>\n  );\n}\n"],"names":["lastRenderOrder","LayerContext","React","parentUuid","currentChildren","addChild","removeChild","DEFAULT_BACKGROUND_POSITION","Layer","ref","zIndex","resolution","visible","autoLayout","width","height","opacity","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","borderRadius","borderWidth","borderColor","flexDirection","alignItems","justifyContent","gap","textContent","textAlign","justifyText","verticalAlign","color","fontFamily","fontSize","fontWeight","childIndex","children","props","renderOrder","materialRef","childrenGroupRef","layerContext","uuid","THREE","undefined","index","ctx","document","createElement","getContext","canvas","Math","max","floor","canvasTexture","anisotropy","images","Image","src","nextFrame","render","requestAnimationFrame","w","h","d2r","PI","res","mapLinear","globalCompositeOperation","clearRect","isArray","Array","array","number","tl","tr","br","bl","beginPath","moveTo","lineTo","arc","closePath","globalAlpha","fillStyle","lineWidth","fill","ox","oy","x","y","sx","sy","sw","sh","ir","cr","dw","dh","dx","dy","save","clip","drawImage","restore","canvasTxt","min","textBaseline","stroke","strokeStyle","needsUpdate","cancelAnimationFrame","setCurrentChildren","childGroupRefs","map","size","refs","includes","reverse","forEach","current","childrenWidth","reduce","child","childrenHeight","contentSize","axis","axisInverted","length","i","spacing","layout","position","layerProviderValue","nextCurrentChildren","findIndex","value","push","sort","a","b","filter","childrenGroup","traverse","object","material","transparent","Provider","args","side","depthWrite","key","ForwardedLayer","displayName","Button","selected","onClick","pointerOver","setPointerOver","onPointerOver","onPointerOut","event","Example","room","BoxLineGeometry","translate","legacy","flat","linear","gl","alpha","attach","geometry","makeDefault","target","Typography","setFontFamily"],"sourceRoot":""}