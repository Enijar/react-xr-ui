{"version":3,"file":"258.7f1ad260.chunk.js","mappings":"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","sources":["webpack://@app/client/./src/components/example.tsx","webpack://@app/client/./src/examples/layout.tsx","webpack://@app/client/./src/lib/hooks/use-render-order.tsx","webpack://@app/client/./src/lib/components/layer.tsx","webpack://@app/client/./src/lib/services/layout.ts"],"sourcesContent":["import React from \"react\";\nimport { BoxLineGeometry } from \"three/examples/jsm/geometries/BoxLineGeometry\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport default function Example({ children }: Props) {\n  const room = React.useMemo(() => {\n    return new BoxLineGeometry(6, 6, 6, 10, 10, 10).translate(0, 3, 0);\n  }, []);\n\n  return (\n    <Canvas legacy flat linear>\n      {/** Cameras, controls and lights */}\n      <PerspectiveCamera makeDefault position={[0, 1.6, 0]} />\n      <OrbitControls makeDefault target={[0, 1, -1.8]} />\n      <ambientLight />\n\n      <lineSegments geometry={room}>\n        <lineBasicMaterial color=\"#c0c0c0\" />\n      </lineSegments>\n\n      <group position={[0, 1, -1.88]}>{children}</group>\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport Example from \"@/components/example\";\nimport Layer from \"@/lib/components/layer\";\nimport { LayerProps } from \"@/lib/types\";\n\nexport default function Layout() {\n  const [flexDirection, setFlexDirection] =\n    React.useState<LayerProps[\"flexDirection\"]>(\"row\");\n\n  return (\n    <Example>\n      <Layer\n        width={0.25}\n        height={0.1}\n        position-y={0.6}\n        justifyContent=\"space-between\"\n      >\n        <Layer\n          width={0.1}\n          height={0.1}\n          onClick={() => setFlexDirection(\"row\")}\n          backgroundColor=\"white\"\n        />\n        <Layer\n          width={0.1}\n          height={0.1}\n          onClick={() => setFlexDirection(\"column\")}\n          backgroundColor=\"black\"\n        />\n      </Layer>\n      <Layer\n        width={1}\n        height={1}\n        borderWidth={0.025}\n        borderColor=\"#222222\"\n        borderRadius={0.05}\n        backgroundColor=\"#444444\"\n        flexDirection={flexDirection}\n        alignItems=\"center\"\n        justifyContent=\"space-around\"\n      >\n        <Layer width={0.25} height={0.25} backgroundColor=\"red\" />\n        <Layer width={0.25} height={0.25} backgroundColor=\"green\" />\n        <Layer width={0.25} height={0.25} backgroundColor=\"lightblue\" />\n      </Layer>\n    </Example>\n  );\n}\n","import React from \"react\";\n\nlet lastRenderOrder = -1;\n\nexport default function useRenderOrder() {\n  return React.useMemo(() => {\n    return ++lastRenderOrder;\n  }, []);\n}\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport canvasTxt from \"canvas-txt\";\nimport useRenderOrder from \"@/lib/hooks/use-render-order\";\nimport layout from \"@/lib/services/layout\";\nimport { BorderArray, LayerContextType, LayerProps } from \"@/lib/types\";\n\nconst LayerContext = React.createContext<LayerContextType>({\n  parentUuid: null,\n  currentChildren: [],\n  addChild() {},\n  removeChild() {},\n});\n\nconst DEFAULT_BACKGROUND_POSITION: LayerProps[\"backgroundPosition\"] = [0, 0];\n\nfunction Layer(\n  {\n    zIndex = 0,\n    resolution = 2048,\n    visible = true,\n    autoLayout = true,\n    width = 1,\n    height = 1,\n    opacity = 1,\n    backgroundColor = \"transparent\",\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition = DEFAULT_BACKGROUND_POSITION,\n    borderRadius = 0,\n    borderWidth = 0,\n    borderColor = \"transparent\",\n    flexDirection = \"row\",\n    alignItems = \"center\",\n    justifyContent = \"center\",\n    gap = 0,\n    textContent,\n    textAlign = \"left\",\n    justifyText = false,\n    verticalAlign = \"top\",\n    color = \"white\",\n    fontFamily = \"system-ui, sans-serif\",\n    fontSize = 0.1,\n    fontWeight = \"normal\",\n    childIndex,\n    children,\n    ...props\n  }: LayerProps,\n  ref: React.ForwardedRef<THREE.Group>\n) {\n  const renderOrder = useRenderOrder();\n\n  const gl = useThree((state) => state.gl);\n\n  const materialRef = React.useRef<THREE.MeshBasicMaterial>(null);\n  const childrenGroupRef = React.useRef<THREE.Group>(null);\n\n  const layerContext = React.useContext(LayerContext);\n\n  const uuid = React.useMemo(() => {\n    return THREE.MathUtils.generateUUID();\n  }, []);\n\n  React.useEffect(() => {\n    if (layerContext.parentUuid === null) return;\n    layerContext.addChild({ width, height, index: childIndex, uuid });\n    return () => {\n      layerContext.removeChild(uuid);\n    };\n  }, [width, height, childIndex, layerContext.parentUuid]);\n\n  // Create 2d canvas context\n  const ctx = React.useMemo<CanvasRenderingContext2D>(() => {\n    const canvas = document.createElement(\"canvas\");\n    return canvas.getContext(\"2d\");\n  }, []);\n\n  // Set canvas size\n  React.useMemo(() => {\n    ctx.canvas.width = Math.max(1, Math.floor(width * resolution));\n    ctx.canvas.height = Math.max(1, Math.floor(height * resolution));\n  }, [ctx.canvas, width, height, resolution]);\n\n  // Create canvas texture with the newly created canvas;\n  // this will be used as the texture for the plane\n  const canvasTexture = React.useMemo(() => {\n    const canvasTexture = new THREE.CanvasTexture(ctx.canvas);\n    canvasTexture.anisotropy = gl.capabilities.getMaxAnisotropy();\n    return canvasTexture;\n  }, [ctx.canvas, gl.capabilities, width, height]);\n\n  const images = React.useMemo(() => {\n    const backgroundImage = new Image();\n    return { backgroundImage };\n  }, []);\n\n  // Set source for background image\n  React.useMemo(() => {\n    images.backgroundImage.src = backgroundImage;\n  }, [images.backgroundImage, backgroundImage]);\n\n  useFrame(() => {\n    // Useful vars\n    const w = ctx.canvas.width;\n    const h = ctx.canvas.height;\n    const d2r = Math.PI / 180; // degrees to radians\n    const res = (w + h) / 2;\n    const { mapLinear } = THREE.MathUtils;\n\n    ctx.globalCompositeOperation = \"source-over\";\n\n    ctx.clearRect(0, 0, w, h);\n\n    // Border radius\n    {\n      const isArray = Array.isArray(borderRadius);\n      const array = borderRadius as BorderArray;\n      const number = borderRadius as number;\n      let [tl = 0, tr = 0, br = 0, bl = 0] = isArray\n        ? array\n        : [number, number, number, number];\n      tl *= res;\n      tr *= res;\n      br *= res;\n      bl *= res;\n      ctx.beginPath();\n      ctx.moveTo(tl, 0);\n      ctx.lineTo(w - tr, 0);\n      ctx.arc(w - tr, tr, tr, d2r * 270, d2r * 360);\n      ctx.lineTo(w, h - br);\n      ctx.arc(w - br, h - br, br, 0, d2r * 90);\n      ctx.lineTo(bl, h);\n      ctx.arc(bl, h - bl, bl, d2r * 90, d2r * 180);\n      ctx.lineTo(0, tl);\n      ctx.arc(tl, tl, tl, d2r * 180, d2r * 270);\n      ctx.closePath();\n    }\n\n    ctx.globalAlpha = opacity;\n\n    // Background color\n    ctx.fillStyle = backgroundColor;\n    ctx.lineWidth = borderWidth * res * 2;\n    ctx.fill();\n\n    const ox = borderWidth * res;\n    const oy = borderWidth * res;\n\n    // Background image\n    if (backgroundImage !== undefined) {\n      const x = backgroundPosition[0];\n      const y = backgroundPosition[1];\n      const sx = 0;\n      const sy = 0;\n      const sw = images.backgroundImage.width;\n      const sh = images.backgroundImage.height;\n      const ir = sw / sh;\n      const cr = w / h;\n      let dw = sw;\n      let dh = sh;\n      switch (backgroundSize) {\n        case \"stretch\":\n          dw = w;\n          dh = h;\n          break;\n        case \"contain\":\n          dw = w - ox * 2;\n          dh = h - oy * 2;\n          if (ir > cr) {\n            dh = dw / ir;\n          } else {\n            dw = dh * ir;\n          }\n          break;\n        case \"cover\":\n          dw = w - ox * 2;\n          dh = h - oy * 2;\n          if (ir < cr) {\n            dh = dw / ir;\n          } else {\n            dw = dh * ir;\n          }\n          break;\n      }\n      const dx = ox + mapLinear(x, 0, 1, 0, w - ox * 2 - dw);\n      const dy = oy + mapLinear(y, 0, 1, 0, h - oy * 2 - dh);\n      ctx.save();\n      ctx.clip();\n      ctx.drawImage(images.backgroundImage, sx, sy, sw, sh, dx, dy, dw, dh);\n      ctx.restore();\n    }\n\n    // Typography\n    if (textContent !== undefined) {\n      canvasTxt.font = fontFamily;\n      canvasTxt.fontSize = fontSize * w;\n      canvasTxt.lineHeight = null;\n      canvasTxt.align = textAlign;\n      canvasTxt.vAlign = verticalAlign;\n      canvasTxt.justify = justifyText;\n      canvasTxt.fontWeight = fontWeight;\n      ctx.fillStyle = color;\n      canvasTxt.drawText(ctx, textContent, ox, oy, w - ox * 2, h - oy * 2);\n    }\n\n    // Fixes antialiasing issue\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.stroke();\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.save();\n    ctx.clip();\n\n    ctx.strokeStyle = borderColor;\n    // Border\n    ctx.stroke();\n    ctx.restore();\n\n    // Make sure canvas texture gets updated\n    canvasTexture.needsUpdate = true;\n  });\n\n  const [currentChildren, setCurrentChildren] = React.useState<\n    LayerContextType[\"currentChildren\"]\n  >([]);\n\n  const childGroupRefs = React.useMemo(() => {\n    return currentChildren.map(() => React.createRef<THREE.Group>());\n  }, [currentChildren]);\n\n  // Layout calculations\n  React.useEffect(() => {\n    const size = { width, height };\n    size.width -= borderWidth * 2;\n    size.height -= borderWidth * 2;\n    let refs = [...childGroupRefs];\n    if ([\"column\", \"row-reverse\"].includes(flexDirection)) {\n      refs.reverse();\n    }\n    refs.forEach((ref, index) => {\n      const [x, y] = layout({\n        currentChildren,\n        index,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        gap,\n        size,\n      });\n      ref.current.position.x = x;\n      ref.current.position.y = y;\n    });\n  }, [\n    childGroupRefs,\n    currentChildren,\n    width,\n    height,\n    flexDirection,\n    alignItems,\n    justifyContent,\n    borderWidth,\n    gap,\n  ]);\n\n  const layerProviderValue = React.useMemo<LayerContextType>(() => {\n    return {\n      currentChildren,\n      parentUuid: uuid,\n      addChild(child) {\n        setCurrentChildren((currentChildren) => {\n          const nextCurrentChildren = [...currentChildren];\n          const index = currentChildren.findIndex((value) => {\n            return value.uuid === child.uuid;\n          });\n          if (index === -1) {\n            nextCurrentChildren.push({ ...child });\n          } else {\n            nextCurrentChildren[index] = { ...child };\n          }\n          return nextCurrentChildren.sort((a, b) => {\n            return a.index - b.index;\n          });\n        });\n      },\n      removeChild(uuid) {\n        setCurrentChildren((currentChildren) => {\n          return currentChildren.filter((value) => value.uuid !== uuid);\n        });\n      },\n    };\n  }, [currentChildren, uuid]);\n\n  React.useEffect(() => {\n    const childrenGroup = childrenGroupRef.current;\n    if (childrenGroup === null) return;\n    childrenGroup.traverse((object) => {\n      if (\n        object instanceof THREE.Mesh &&\n        object.material instanceof THREE.Material\n      ) {\n        object.material.transparent = true;\n        object.material.opacity = opacity;\n        object.material.needsUpdate = true;\n      }\n    });\n  }, [opacity]);\n\n  return (\n    <LayerContext.Provider value={layerProviderValue}>\n      <group ref={ref} {...props} visible={visible}>\n        <mesh renderOrder={renderOrder + zIndex}>\n          <planeBufferGeometry args={[width, height]} />\n          <meshBasicMaterial\n            ref={materialRef}\n            side={THREE.FrontSide}\n            opacity={opacity}\n            transparent={true}\n            depthWrite={false}\n            map={canvasTexture}\n          />\n        </mesh>\n        <group renderOrder={renderOrder + zIndex + 1} ref={childrenGroupRef}>\n          {React.Children.map(children, (child, childIndex) => {\n            if (React.isValidElement(child)) {\n              return (\n                <group key={childIndex} ref={childGroupRefs[childIndex]}>\n                  {React.cloneElement(child, { ...child.props, childIndex })}\n                </group>\n              );\n            }\n            return child;\n          })}\n        </group>\n      </group>\n    </LayerContext.Provider>\n  );\n}\n\nconst ForwardedLayer = React.forwardRef(Layer);\nForwardedLayer.displayName = \"layer\";\nexport default ForwardedLayer;\n","import { Child, LayerProps, Size } from \"@/lib/types\";\n\ntype Axis = \"width\" | \"height\";\n\ntype Args = {\n  currentChildren: Child[];\n  index: number;\n  flexDirection: LayerProps[\"flexDirection\"];\n  alignItems: LayerProps[\"alignItems\"];\n  justifyContent: LayerProps[\"justifyContent\"];\n  gap: LayerProps[\"gap\"];\n  size: Size;\n};\n\nexport default function layout({\n  currentChildren,\n  index,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  gap,\n  size,\n}: Args): [x: number, y: number] {\n  const childrenWidth = currentChildren.reduce((width, child) => {\n    return width + child.width;\n  }, 0);\n  const childrenHeight = currentChildren.reduce((height, child) => {\n    return height + child.height;\n  }, 0);\n  let x = 0;\n  let y = 0;\n  let contentSize = childrenWidth;\n  let axis: Axis = \"width\";\n  let axisInverted: Axis = \"height\";\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    axis = \"height\";\n    axisInverted = \"width\";\n    contentSize = childrenHeight;\n  }\n  if (\n    currentChildren.length > 0 &&\n    ![\"space-between\", \"space-around\"].includes(justifyContent)\n  ) {\n    contentSize += gap * (currentChildren.length - 1);\n  }\n  /**\n   * justifyContent\n   */\n  if (justifyContent === \"start\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"center\") {\n    x = currentChildren[0][axis] * 0.5 - contentSize * 0.5;\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"end\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"space-between\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length - 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  if (justifyContent === \"space-around\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length + 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      x += spacing;\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  /**\n   * alignItems\n   */\n  if (alignItems === \"start\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if (alignItems === \"center\") {\n    // No calculation needed\n  }\n  if (alignItems === \"end\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    return [y, x];\n  }\n\n  return [x, y];\n}\n"],"names":["Example","children","room","React","BoxLineGeometry","translate","legacy","flat","linear","makeDefault","position","target","geometry","color","Layout","flexDirection","setFlexDirection","width","height","justifyContent","onClick","backgroundColor","borderWidth","borderColor","borderRadius","alignItems","lastRenderOrder","LayerContext","parentUuid","currentChildren","addChild","removeChild","DEFAULT_BACKGROUND_POSITION","Layer","ref","zIndex","resolution","visible","autoLayout","opacity","backgroundImage","backgroundSize","backgroundPosition","gap","textContent","textAlign","justifyText","verticalAlign","fontFamily","fontSize","fontWeight","childIndex","props","renderOrder","gl","useThree","state","materialRef","childrenGroupRef","layerContext","uuid","THREE","index","ctx","document","createElement","getContext","canvas","Math","max","floor","canvasTexture","anisotropy","capabilities","getMaxAnisotropy","images","Image","src","useFrame","w","h","d2r","PI","res","mapLinear","globalCompositeOperation","clearRect","isArray","Array","array","number","tl","tr","br","bl","beginPath","moveTo","lineTo","arc","closePath","globalAlpha","fillStyle","lineWidth","fill","ox","oy","undefined","x","y","sx","sy","sw","sh","ir","cr","dw","dh","dx","dy","save","clip","drawImage","restore","canvasTxt","stroke","strokeStyle","needsUpdate","setCurrentChildren","childGroupRefs","map","size","refs","includes","reverse","forEach","childrenWidth","reduce","child","childrenHeight","contentSize","axis","axisInverted","length","i","spacing","layout","current","layerProviderValue","nextCurrentChildren","findIndex","value","push","sort","a","b","filter","childrenGroup","traverse","object","material","transparent","Provider","args","side","depthWrite","key","ForwardedLayer","displayName"],"sourceRoot":""}