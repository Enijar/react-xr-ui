{"version":3,"file":"359.5fabbd0b.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./examples/components/button.tsx","webpack://react-xr-ui/./examples/examples/typography.tsx","webpack://react-xr-ui/./src/components/interaction.tsx"],"sourcesContent":["import React from \"react\";\nimport { Interaction, Layer } from \"react-xr-ui\";\n\ntype Props = {\n  textContent: string;\n  selected: boolean;\n  onClick: () => void;\n  fontSize: number;\n  width: number;\n  height: number;\n  fontFamily?: string;\n  optimizedRendering?: boolean;\n};\n\nexport default function Button({\n  textContent,\n  selected,\n  onClick,\n  fontSize,\n  width,\n  height,\n  fontFamily = \"system-ui, sans-serif\",\n  optimizedRendering = false,\n}: Props) {\n  const [pointerOver, setPointerOver] = React.useState(false);\n\n  return (\n    <Interaction\n      onOver={() => {\n        setPointerOver(true);\n        document.body.style.cursor = \"pointer\";\n      }}\n      onOut={() => {\n        setPointerOver(false);\n        document.body.style.cursor = \"auto\";\n      }}\n      onDown={() => {\n        onClick();\n        setPointerOver(false);\n      }}\n    >\n      <Layer\n        width={width}\n        height={height}\n        backgroundColor={pointerOver || selected ? \"white\" : \"#111111\"}\n        color={pointerOver || selected ? \"#111111\" : \"white\"}\n        textContent={textContent}\n        fontFamily={fontFamily}\n        fontSize={fontSize}\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        optimizedRendering={optimizedRendering}\n      />\n    </Interaction>\n  );\n}\n","import React from \"react\";\nimport Example from \"@/components/example\";\nimport { Layer } from \"react-xr-ui\";\nimport Button from \"@/components/button\";\nimport ViewCode from \"@/components/view-code\";\n\nexport default function Typography() {\n  const [fontFamily, setFontFamily] = React.useState(\"system-ui\");\n\n  return (\n    <>\n      <Example>\n        <Layer\n          width={1.3}\n          height={0.1}\n          justifyContent=\"space-around\"\n          position-y={0.6}\n        >\n          <Button\n            textContent=\"system-ui\"\n            fontFamily=\"system-ui\"\n            selected={fontFamily === \"system-ui\"}\n            onClick={() => setFontFamily(\"system-ui\")}\n            fontSize={0.3}\n            width={0.2}\n            height={0.1}\n          />\n          <Button\n            textContent=\"Arial\"\n            fontFamily=\"Arial, sans-serif\"\n            selected={fontFamily === \"Arial\"}\n            onClick={() => setFontFamily(\"Arial, sans-serif\")}\n            fontSize={0.3}\n            width={0.2}\n            height={0.1}\n          />\n          <Button\n            textContent=\"Times New Roman\"\n            fontFamily=\"Times New Roman, serif\"\n            selected={fontFamily === \"Times New Roman, serif\"}\n            onClick={() => setFontFamily(\"Times New Roman, serif\")}\n            fontSize={0.3}\n            width={0.3}\n            height={0.1}\n          />\n          <Button\n            textContent=\"Courier New\"\n            fontFamily=\"Courier New, monospace\"\n            selected={fontFamily === \"Courier New, monospace\"}\n            onClick={() => setFontFamily(\"Courier New, monospace\")}\n            fontSize={0.3}\n            width={0.25}\n            height={0.1}\n          />\n          <Button\n            textContent=\"Brush Script MT\"\n            fontFamily=\"Brush Script MT, cursive\"\n            selected={fontFamily === \"Brush Script MT, cursive\"}\n            onClick={() => setFontFamily(\"Brush Script MT, cursive\")}\n            fontSize={0.3}\n            width={0.25}\n            height={0.1}\n          />\n        </Layer>\n        <Layer\n          width={1}\n          height={1}\n          borderWidth={0.025}\n          borderColor=\"#222222\"\n          borderRadius={0.05}\n          backgroundColor=\"#444444\"\n          fontFamily={fontFamily}\n          textContent={`This is a test with some long text...`}\n          textAlign=\"center\"\n          verticalAlign=\"middle\"\n          color=\"crimson\"\n        />\n      </Example>\n      <ViewCode pathname=\"typography\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport type { Intersection } from \"three\";\nimport { Interactive, useXR, XRInteractionEvent } from \"@react-three/xr\";\nimport { ThreeEvent } from \"@react-three/fiber\";\n\ntype Fn = (intersection: Intersection, intersections: Intersection[]) => void;\n\ntype Props = {\n  children: React.ReactNode;\n  onMove?: Fn;\n  onOver?: Fn;\n  onOut?: Fn;\n  onDown?: Fn;\n  onUp?: Fn;\n  enabled?: boolean;\n};\n\nexport default function Interaction({\n  children,\n  onMove,\n  onOver,\n  onOut,\n  onDown,\n  onUp,\n  enabled = true,\n}: Props) {\n  const isPresenting = useXR((state) => state.isPresenting);\n\n  const handleVrInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: XRInteractionEvent) => {\n        if (!isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        fn(event.intersection, event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  const handleWebInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: ThreeEvent<PointerEvent>) => {\n        if (isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        event.stopPropagation();\n        fn(event.intersections[0], event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  return (\n    <Interactive\n      onSelectStart={handleVrInteraction(onDown)}\n      onSelectEnd={handleVrInteraction(onUp)}\n      onMove={handleVrInteraction(onMove)}\n      onHover={handleVrInteraction(onOver)}\n      onBlur={handleVrInteraction(onOut)}\n    >\n      <group\n        onPointerDown={handleWebInteraction(onDown)}\n        onPointerUp={handleWebInteraction(onUp)}\n        onPointerMove={handleWebInteraction(onMove)}\n        onPointerOver={handleWebInteraction(onOver)}\n        onPointerOut={handleWebInteraction(onOut)}\n      >\n        {children}\n      </group>\n    </Interactive>\n  );\n}\n"],"names":["Button","textContent","selected","onClick","fontSize","width","height","fontFamily","optimizedRendering","pointerOver","setPointerOver","React","onOver","document","body","style","cursor","onOut","onDown","backgroundColor","color","textAlign","verticalAlign","Typography","setFontFamily","justifyContent","borderWidth","borderColor","borderRadius","pathname","Interaction","children","onMove","onUp","enabled","isPresenting","useXR","state","handleVrInteraction","fn","event","intersection","intersections","handleWebInteraction","stopPropagation","onSelectStart","onSelectEnd","onHover","onBlur","onPointerDown","onPointerUp","onPointerMove","onPointerOver","onPointerOut"],"sourceRoot":""}