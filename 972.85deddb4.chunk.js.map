{"version":3,"file":"972.85deddb4.chunk.js","mappings":"6NAOA,SAASA,IACP,MAAOC,EAAOC,GAAYC,EAAAA,SAAe,GAEnCC,EAAYD,EAAAA,OAAuB,MAyBzC,OAvBAE,EAAAA,EAAAA,IAAS,KACP,MAAMC,EAASF,EAAUG,QACzB,GAAe,OAAXD,EAAiB,OACrB,MAEME,EAASC,KAAKC,IAFL,KAESC,KAAKC,OACvBC,EAASJ,KAAKC,IAFL,MAESC,KAAKC,OAC7BN,EAAOQ,MAAMC,SAASC,EAAIC,EAAAA,UAAgBC,UACxCV,GACC,EACD,GACC,KACD,MAEFF,EAAOQ,MAAMC,SAASI,EAAIF,EAAAA,UAAgBC,UACxCL,GACC,EACD,GACC,KACD,KACD,IAIDV,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACiB,EAAAA,EAAK,CACJ,aAAY,GACZC,MAAO,IACPC,OAAQ,GACRC,aAAc,IACdC,gBAAgB,UAChBC,YAAY,yCACZC,UAAU,SACVC,cAAc,SACdC,SAAU,KAEZzB,EAAAA,cAACiB,EAAAA,EAAK,CACJC,MAAO,IACPC,OAAQ,EACRO,YAAa,KACbC,YAAY,UACZP,aAAc,IACdC,gBAAgB,UAChBO,gBAAgB,6BAChBC,eAAe,QACfC,WAAW,QACXC,eAAe,QACfC,mBAAoB,CAAC,GAAK,KAE1BhC,EAAAA,cAACiB,EAAAA,EAAK,CACJ,aAAY,IACZ,cAAa,IACbC,MAAO,KACPC,OAAQ,KACRE,gBAAgB,UAChBY,MAAM,UACNX,YAAc,UAASxB,IACvByB,UAAU,SACVC,cAAc,SACdC,SAAU,MAEZzB,EAAAA,cAACkC,EAAAA,EAAW,CAACC,OAAQA,IAAMpC,GAAUD,GAAUA,EAAQ,KACrDE,EAAAA,cAACiB,EAAAA,EAAK,CACJmB,IAAKnC,EACLoC,YAAY,EACZnB,MAAO,GACPC,OAAQ,GACRE,gBAAgB,qBAChBD,aAAc,GACdE,YAAc,KACdC,UAAU,SACVC,cAAc,SACdS,MAAM,UACNK,WAAW,OACXb,SAAU,GACVc,WAAY,QAMxB,CAEe,SAASC,IACtB,OACExC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACyC,EAAAA,EAAO,KACNzC,EAAAA,cAACH,EAAK,OAERG,EAAAA,cAAC0C,EAAAA,EAAQ,CAACC,SAAS,eAGzB,C,qFCvFe,SAAST,EAAWU,GAQzB,IAR0B,SAClCC,EAAQ,OACRC,EAAM,OACNC,EAAM,MACNC,EAAK,OACLb,EAAM,KACNc,EAAI,QACJC,GAAU,GACJN,EACN,MAAMO,GAAeC,EAAAA,EAAAA,KAAOC,GAAUA,EAAMF,eAEtCG,EAAsBtD,EAAAA,aACzBuD,GACSC,IACDL,GACAD,GACAK,GACLA,EAAGC,EAAMC,aAAcD,EAAME,cAAc,GAG/C,CAACP,EAAcD,EAASf,EAAQc,EAAMH,EAAQC,EAAQC,IAGlDW,EAAuB3D,EAAAA,aAC1BuD,GACSC,IACFL,GACCD,GACAK,IACLC,EAAMI,kBACNL,EAAGC,EAAME,cAAc,GAAIF,EAAME,eAAc,GAGnD,CAACP,EAAcD,EAASf,EAAQc,EAAMH,EAAQC,EAAQC,IAGxD,OACEhD,EAAAA,cAAC6D,EAAAA,GAAW,CACVC,cAAeR,EAAoBnB,GACnC4B,YAAaT,EAAoBL,GACjCH,OAAQQ,EAAoBR,GAC5BkB,QAASV,EAAoBP,GAC7BkB,OAAQX,EAAoBN,IAE5BhD,EAAAA,cAAA,SACEkE,cAAeP,EAAqBxB,GACpCgC,YAAaR,EAAqBV,GAClCmB,cAAeT,EAAqBb,GACpCuB,cAAeV,EAAqBZ,GACpCuB,aAAcX,EAAqBX,IAElCH,GAIT,C","sources":["webpack://react-xr-ui/./examples/examples/complex-ui.tsx","webpack://react-xr-ui/./src/components/interaction.tsx"],"sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport Example from \"@/components/example\";\nimport { Interaction, Layer, LayerRef } from \"react-xr-ui\";\nimport ViewCode from \"@/components/view-code\";\n\nfunction Scene() {\n  const [score, setScore] = React.useState(0);\n\n  const targetRef = React.useRef<LayerRef>(null);\n\n  useFrame(() => {\n    const target = targetRef.current;\n    if (target === null) return;\n    const speedX = 0.003;\n    const speedY = 0.0025;\n    const deltaX = Math.sin(Date.now() * speedX);\n    const deltaY = Math.sin(Date.now() * speedY);\n    target.group.position.x = THREE.MathUtils.mapLinear(\n      deltaX,\n      -1,\n      1,\n      -0.575,\n      0.575\n    );\n    target.group.position.y = THREE.MathUtils.mapLinear(\n      deltaY,\n      -1,\n      1,\n      -0.325,\n      0.325\n    );\n  });\n\n  return (\n    <>\n      <Layer\n        position-y={0.6}\n        width={0.85}\n        height={0.1}\n        borderRadius={0.25}\n        backgroundColor=\"#111111\"\n        textContent=\"Click the spot to increase your score!\"\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        fontSize={0.5}\n      />\n      <Layer\n        width={1.5}\n        height={1}\n        borderWidth={0.025}\n        borderColor=\"#222222\"\n        borderRadius={0.05}\n        backgroundColor=\"#444444\"\n        backgroundImage=\"./assets/images/forest.jpg\"\n        backgroundSize=\"cover\"\n        alignItems=\"start\"\n        justifyContent=\"start\"\n        backgroundPosition={[0.5, 0.5]}\n      >\n        <Layer\n          position-x={0.02}\n          position-y={-0.02}\n          width={0.175}\n          height={0.075}\n          backgroundColor=\"#aaaaaa\"\n          color=\"#111111\"\n          textContent={`Score: ${score}`}\n          textAlign=\"center\"\n          verticalAlign=\"middle\"\n          fontSize={0.35}\n        />\n        <Interaction onDown={() => setScore((score) => score + 1)}>\n          <Layer\n            ref={targetRef}\n            autoLayout={false}\n            width={0.3}\n            height={0.3}\n            backgroundColor=\"rgba(0, 0, 0, 0.5)\"\n            borderRadius={0.5}\n            textContent={`😏`}\n            textAlign=\"center\"\n            verticalAlign=\"middle\"\n            color=\"#000000\"\n            fontWeight=\"bold\"\n            fontSize={0.5}\n            lineHeight={1.2}\n          />\n        </Interaction>\n      </Layer>\n    </>\n  );\n}\n\nexport default function ComplexUi() {\n  return (\n    <>\n      <Example>\n        <Scene />\n      </Example>\n      <ViewCode pathname=\"complex-ui\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport type { Intersection } from \"three\";\nimport { Interactive, useXR, XRInteractionEvent } from \"@react-three/xr\";\nimport { ThreeEvent } from \"@react-three/fiber\";\n\ntype Fn = (intersection: Intersection, intersections: Intersection[]) => void;\n\ntype Props = {\n  children: React.ReactNode;\n  onMove?: Fn;\n  onOver?: Fn;\n  onOut?: Fn;\n  onDown?: Fn;\n  onUp?: Fn;\n  enabled?: boolean;\n};\n\nexport default function Interaction({\n  children,\n  onMove,\n  onOver,\n  onOut,\n  onDown,\n  onUp,\n  enabled = true,\n}: Props) {\n  const isPresenting = useXR((state) => state.isPresenting);\n\n  const handleVrInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: XRInteractionEvent) => {\n        if (!isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        fn(event.intersection, event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  const handleWebInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: ThreeEvent<PointerEvent>) => {\n        if (isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        event.stopPropagation();\n        fn(event.intersections[0], event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  return (\n    <Interactive\n      onSelectStart={handleVrInteraction(onDown)}\n      onSelectEnd={handleVrInteraction(onUp)}\n      onMove={handleVrInteraction(onMove)}\n      onHover={handleVrInteraction(onOver)}\n      onBlur={handleVrInteraction(onOut)}\n    >\n      <group\n        onPointerDown={handleWebInteraction(onDown)}\n        onPointerUp={handleWebInteraction(onUp)}\n        onPointerMove={handleWebInteraction(onMove)}\n        onPointerOver={handleWebInteraction(onOver)}\n        onPointerOut={handleWebInteraction(onOut)}\n      >\n        {children}\n      </group>\n    </Interactive>\n  );\n}\n"],"names":["Scene","score","setScore","React","targetRef","useFrame","target","current","deltaX","Math","sin","Date","now","deltaY","group","position","x","THREE","mapLinear","y","Layer","width","height","borderRadius","backgroundColor","textContent","textAlign","verticalAlign","fontSize","borderWidth","borderColor","backgroundImage","backgroundSize","alignItems","justifyContent","backgroundPosition","color","Interaction","onDown","ref","autoLayout","fontWeight","lineHeight","ComplexUi","Example","ViewCode","pathname","_ref","children","onMove","onOver","onOut","onUp","enabled","isPresenting","useXR","state","handleVrInteraction","fn","event","intersection","intersections","handleWebInteraction","stopPropagation","Interactive","onSelectStart","onSelectEnd","onHover","onBlur","onPointerDown","onPointerUp","onPointerMove","onPointerOver","onPointerOut"],"sourceRoot":""}