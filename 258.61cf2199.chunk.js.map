{"version":3,"file":"258.61cf2199.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./lib/hooks/use-render-order.tsx","webpack://react-xr-ui/./lib/services/update.ts","webpack://react-xr-ui/./lib/components/layer.tsx","webpack://react-xr-ui/./lib/services/layout.ts","webpack://react-xr-ui/./src/components/button.tsx","webpack://react-xr-ui/./src/components/example.tsx","webpack://react-xr-ui/./src/examples/layout.tsx"],"sourcesContent":["import * as React from \"react\";\n\nlet lastRenderOrder = -1;\n\nexport default function useRenderOrder() {\n  return React.useMemo(() => {\n    return ++lastRenderOrder;\n  }, []);\n}\n","import { RootState } from \"@react-three/fiber\";\n\ntype Fn = (state?: RootState) => void;\n\nconst updates = new Map<string, Fn>();\n\nexport default function update(state: RootState) {\n  updates.forEach((fn) => fn(state));\n}\n\nupdate.add = (uuid: string, fn: Fn) => {\n  updates.set(uuid, fn);\n};\n\nupdate.remove = (uuid: string) => {\n  if (updates.has(uuid)) {\n    updates.delete(uuid);\n  }\n};\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { RootState } from \"@react-three/fiber\";\nimport canvasTxt, { fontStyle } from \"canvas-txt\";\nimport useRenderOrder from \"../hooks/use-render-order\";\nimport layout from \"../services/layout\";\nimport updateManager from \"../services/update\";\nimport { BorderArray, LayerContextType, LayerProps } from \"../types\";\n\nconst LayerContext = React.createContext<LayerContextType>({\n  parentUuid: null,\n  currentChildren: [],\n  addChild() {},\n  removeChild() {},\n});\n\nconst DEFAULT_BACKGROUND_POSITION: LayerProps[\"backgroundPosition\"] = [0, 0];\n\nfunction Layer(\n  {\n    zIndex = 0,\n    resolution = 2048,\n    visible = true,\n    autoLayout = true,\n    width = 1,\n    height = 1,\n    opacity = 1,\n    backgroundColor = \"transparent\",\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition = DEFAULT_BACKGROUND_POSITION,\n    borderRadius = 0,\n    borderWidth = 0,\n    borderColor = \"transparent\",\n    flexDirection = \"row\",\n    alignItems = \"center\",\n    justifyContent = \"center\",\n    gap = 0,\n    textContent,\n    textAlign = \"left\",\n    justifyText = false,\n    verticalAlign = \"top\",\n    color = \"white\",\n    fontFamily = \"system-ui, sans-serif\",\n    fontSize = 0.1,\n    fontWeight = \"normal\",\n    childIndex,\n    children,\n    ...props\n  }: LayerProps,\n  ref: React.ForwardedRef<THREE.Group>\n) {\n  const renderOrder = useRenderOrder();\n\n  const materialRef = React.useRef<THREE.MeshBasicMaterial>(null);\n  const childrenGroupRef = React.useRef<THREE.Group>(null);\n\n  const layerContext = React.useContext(LayerContext);\n\n  const uuid = React.useMemo(() => {\n    return THREE.MathUtils.generateUUID();\n  }, []);\n\n  React.useEffect(() => {\n    if (layerContext.parentUuid === null) return;\n    layerContext.addChild({ width, height, index: childIndex, uuid });\n    return () => {\n      layerContext.removeChild(uuid);\n    };\n  }, [width, height, childIndex, layerContext.parentUuid]);\n\n  // Create 2d canvas context\n  const ctx = React.useMemo<CanvasRenderingContext2D>(() => {\n    const canvas = document.createElement(\"canvas\");\n    return canvas.getContext(\"2d\");\n  }, []);\n\n  // Set canvas size\n  React.useMemo(() => {\n    ctx.canvas.width = Math.max(1, Math.floor(width * resolution));\n    ctx.canvas.height = Math.max(1, Math.floor(height * resolution));\n  }, [ctx.canvas, width, height, resolution]);\n\n  // Create canvas texture with the newly created canvas;\n  // this will be used as the texture for the plane\n  const canvasTexture = React.useMemo(() => {\n    const canvasTexture = new THREE.CanvasTexture(ctx.canvas);\n    canvasTexture.anisotropy = 16;\n    return canvasTexture;\n  }, [ctx.canvas, width, height]);\n\n  const images = React.useMemo(() => {\n    const backgroundImage = new Image();\n    return { backgroundImage };\n  }, []);\n\n  // Set source for background image\n  React.useMemo(() => {\n    if (!backgroundImage) return;\n    images.backgroundImage.src = backgroundImage;\n  }, [images.backgroundImage, backgroundImage]);\n\n  const update = React.useCallback(\n    (state?: RootState) => {\n      // Useful vars\n      const w = ctx.canvas.width;\n      const h = ctx.canvas.height;\n      const d2r = Math.PI / 180; // degrees to radians\n      const res = (w + h) / 2;\n      const { mapLinear } = THREE.MathUtils;\n\n      ctx.globalCompositeOperation = \"source-over\";\n\n      ctx.clearRect(0, 0, w, h);\n\n      // Border radius\n      {\n        const isArray = Array.isArray(borderRadius);\n        const array = borderRadius as BorderArray;\n        const number = borderRadius as number;\n        let [tl = 0, tr = 0, br = 0, bl = 0] = isArray\n          ? array\n          : [number, number, number, number];\n        tl *= res;\n        tr *= res;\n        br *= res;\n        bl *= res;\n        ctx.beginPath();\n        ctx.moveTo(tl, 0);\n        ctx.lineTo(w - tr, 0);\n        ctx.arc(w - tr, tr, tr, d2r * 270, d2r * 360);\n        ctx.lineTo(w, h - br);\n        ctx.arc(w - br, h - br, br, 0, d2r * 90);\n        ctx.lineTo(bl, h);\n        ctx.arc(bl, h - bl, bl, d2r * 90, d2r * 180);\n        ctx.lineTo(0, tl);\n        ctx.arc(tl, tl, tl, d2r * 180, d2r * 270);\n        ctx.closePath();\n      }\n\n      ctx.globalAlpha = opacity;\n\n      // Background color\n      ctx.fillStyle = backgroundColor;\n      ctx.lineWidth = borderWidth * res * 2;\n      ctx.fill();\n\n      const ox = borderWidth * res;\n      const oy = borderWidth * res;\n\n      // Background image\n      if (backgroundImage !== undefined) {\n        const x = backgroundPosition[0];\n        const y = backgroundPosition[1];\n        const sx = 0;\n        const sy = 0;\n        const sw = images.backgroundImage.width;\n        const sh = images.backgroundImage.height;\n        const ir = sw / sh;\n        const cr = w / h;\n        let dw = sw;\n        let dh = sh;\n        switch (backgroundSize) {\n          case \"stretch\":\n            dw = w;\n            dh = h;\n            break;\n          case \"contain\":\n            dw = w - ox * 2;\n            dh = h - oy * 2;\n            if (ir > cr) {\n              dh = dw / ir;\n            } else {\n              dw = dh * ir;\n            }\n            break;\n          case \"cover\":\n            dw = w - ox * 2;\n            dh = h - oy * 2;\n            if (ir < cr) {\n              dh = dw / ir;\n            } else {\n              dw = dh * ir;\n            }\n            break;\n        }\n        const dx = ox + mapLinear(x, 0, 1, 0, w - ox * 2 - dw);\n        const dy = oy + mapLinear(y, 0, 1, 0, h - oy * 2 - dh);\n        ctx.save();\n        ctx.clip();\n        ctx.drawImage(images.backgroundImage, sx, sy, sw, sh, dx, dy, dw, dh);\n        ctx.restore();\n      }\n\n      // Typography\n      if (textContent !== undefined) {\n        canvasTxt.font = fontFamily;\n        canvasTxt.fontSize = fontSize * Math.min(w, h);\n        canvasTxt.align = textAlign;\n        canvasTxt.vAlign = verticalAlign;\n        canvasTxt.justify = justifyText;\n        canvasTxt.fontWeight = fontWeight;\n        canvasTxt.fontStyle = fontStyle;\n        ctx.textBaseline = \"bottom\";\n        ctx.fillStyle = color;\n        canvasTxt.drawText(ctx, textContent, ox, oy, w - ox * 2, h - oy * 2);\n      }\n\n      // Fixes antialiasing issue\n      ctx.globalCompositeOperation = \"destination-out\";\n      ctx.stroke();\n      ctx.globalCompositeOperation = \"source-over\";\n      ctx.save();\n      ctx.clip();\n\n      ctx.strokeStyle = borderColor;\n      // Border\n      ctx.stroke();\n      ctx.restore();\n\n      // Make sure canvas texture gets updated\n      canvasTexture.needsUpdate = true;\n    },\n    [\n      ctx,\n      images,\n      borderWidth,\n      borderRadius,\n      borderColor,\n      backgroundImage,\n      backgroundColor,\n      backgroundPosition,\n      backgroundSize,\n      canvasTexture,\n      fontWeight,\n      fontSize,\n      fontFamily,\n      fontSize,\n      justifyContent,\n      verticalAlign,\n      textAlign,\n      textContent,\n      color,\n    ]\n  );\n\n  React.useEffect(() => {\n    updateManager.add(uuid, update);\n    return () => updateManager.remove(uuid);\n  }, [uuid, update]);\n\n  const [currentChildren, setCurrentChildren] = React.useState<\n    LayerContextType[\"currentChildren\"]\n  >([]);\n\n  const childGroupRefs = React.useMemo(() => {\n    return currentChildren.map(() => React.createRef<THREE.Group>());\n  }, [currentChildren]);\n\n  // Layout calculations\n  React.useEffect(() => {\n    const size = { width, height };\n    size.width -= borderWidth * 2;\n    size.height -= borderWidth * 2;\n    let refs = [...childGroupRefs];\n    if ([\"column\", \"row-reverse\"].includes(flexDirection)) {\n      refs.reverse();\n    }\n    refs.forEach((ref, index) => {\n      const [x, y] = layout({\n        currentChildren,\n        index,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        gap,\n        size,\n      });\n      ref.current.position.x = x;\n      ref.current.position.y = y;\n    });\n  }, [\n    childGroupRefs,\n    currentChildren,\n    width,\n    height,\n    flexDirection,\n    alignItems,\n    justifyContent,\n    borderWidth,\n    gap,\n  ]);\n\n  const layerProviderValue = React.useMemo<LayerContextType>(() => {\n    return {\n      currentChildren,\n      parentUuid: uuid,\n      addChild(child) {\n        setCurrentChildren((currentChildren) => {\n          const nextCurrentChildren = [...currentChildren];\n          const index = currentChildren.findIndex((value) => {\n            return value.uuid === child.uuid;\n          });\n          if (index === -1) {\n            nextCurrentChildren.push({ ...child });\n          } else {\n            nextCurrentChildren[index] = { ...child };\n          }\n          return nextCurrentChildren.sort((a, b) => {\n            return a.index - b.index;\n          });\n        });\n      },\n      removeChild(uuid) {\n        setCurrentChildren((currentChildren) => {\n          return currentChildren.filter((value) => value.uuid !== uuid);\n        });\n      },\n    };\n  }, [currentChildren, uuid]);\n\n  React.useEffect(() => {\n    const childrenGroup = childrenGroupRef.current;\n    if (childrenGroup === null) return;\n    childrenGroup.traverse((object) => {\n      if (\n        object instanceof THREE.Mesh &&\n        object.material instanceof THREE.Material\n      ) {\n        object.material.transparent = true;\n        object.material.opacity = opacity;\n        object.material.needsUpdate = true;\n      }\n    });\n  }, [opacity]);\n\n  return (\n    <LayerContext.Provider value={layerProviderValue}>\n      <group ref={ref} {...props} visible={visible}>\n        <mesh renderOrder={renderOrder + zIndex}>\n          <planeBufferGeometry args={[width, height]} />\n          <meshBasicMaterial\n            ref={materialRef}\n            side={THREE.FrontSide}\n            opacity={opacity}\n            transparent={true}\n            depthWrite={false}\n            map={canvasTexture}\n          />\n        </mesh>\n        <group renderOrder={renderOrder + zIndex + 1} ref={childrenGroupRef}>\n          {React.Children.map(children, (child, childIndex) => {\n            if (React.isValidElement(child)) {\n              return (\n                <group key={childIndex} ref={childGroupRefs[childIndex]}>\n                  {React.cloneElement(child, { ...child.props, childIndex })}\n                </group>\n              );\n            }\n            return child;\n          })}\n        </group>\n      </group>\n    </LayerContext.Provider>\n  );\n}\n\nconst ForwardedLayer = React.forwardRef(Layer);\nForwardedLayer.displayName = \"layer\";\nexport default ForwardedLayer;\n","import { Child, LayerProps, Size } from \"../types\";\n\ntype Axis = \"width\" | \"height\";\n\ntype Args = {\n  currentChildren: Child[];\n  index: number;\n  flexDirection: LayerProps[\"flexDirection\"];\n  alignItems: LayerProps[\"alignItems\"];\n  justifyContent: LayerProps[\"justifyContent\"];\n  gap: LayerProps[\"gap\"];\n  size: Size;\n};\n\nexport default function layout({\n                                 currentChildren,\n                                 index,\n                                 flexDirection,\n                                 alignItems,\n                                 justifyContent,\n                                 gap,\n                                 size,\n                               }: Args): [x: number, y: number] {\n  const childrenWidth = currentChildren.reduce((width, child) => {\n    return width + child.width;\n  }, 0);\n  const childrenHeight = currentChildren.reduce((height, child) => {\n    return height + child.height;\n  }, 0);\n  let x = 0;\n  let y = 0;\n  let contentSize = childrenWidth;\n  let axis: Axis = \"width\";\n  let axisInverted: Axis = \"height\";\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    axis = \"height\";\n    axisInverted = \"width\";\n    contentSize = childrenHeight;\n  }\n  if (\n    currentChildren.length > 0 &&\n    ![\"space-between\", \"space-around\"].includes(justifyContent)\n  ) {\n    contentSize += gap * (currentChildren.length - 1);\n  }\n  /**\n   * justifyContent\n   */\n  if (justifyContent === \"start\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"center\") {\n    x = currentChildren[0][axis] * 0.5 - contentSize * 0.5;\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"end\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"space-between\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length - 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  if (justifyContent === \"space-around\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length + 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      x += spacing;\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  /**\n   * alignItems\n   */\n  if (alignItems === \"start\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if (alignItems === \"center\") {\n    // No calculation needed\n  }\n  if (alignItems === \"end\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    return [y, x];\n  }\n\n  return [x, y];\n}\n","import { GroupProps } from \"@react-three/fiber\";\nimport React from \"react\";\nimport { Layer } from \"../../lib\";\n\ntype Props = {\n  textContent: string;\n  selected: boolean;\n  onClick: GroupProps[\"onClick\"];\n  fontSize: number;\n  width: number;\n  height: number;\n  fontFamily?: string;\n};\n\nexport default function Button({\n  textContent,\n  selected,\n  onClick,\n  fontSize,\n  width,\n  height,\n  fontFamily = \"system-ui, sans-serif\",\n}: Props) {\n  const [pointerOver, setPointerOver] = React.useState(false);\n\n  return (\n    <Layer\n      width={width}\n      height={height}\n      backgroundColor={pointerOver || selected ? \"white\" : \"#111111\"}\n      color={pointerOver || selected ? \"#111111\" : \"white\"}\n      textContent={textContent}\n      fontFamily={fontFamily}\n      fontSize={fontSize}\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      onPointerOver={() => setPointerOver(true)}\n      onPointerOut={() => setPointerOver(false)}\n      onClick={(event) => {\n        onClick(event);\n        setPointerOver(false);\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { BoxLineGeometry } from \"three/examples/jsm/geometries/BoxLineGeometry\";\nimport { DefaultXRControllers, VRCanvas as Canvas } from \"@react-three/xr\";\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport default function Example({ children }: Props) {\n  const room = React.useMemo(() => {\n    return new BoxLineGeometry(6, 6, 6, 10, 10, 10).translate(0, 3, 0);\n  }, []);\n\n  return (\n    <Canvas legacy flat linear gl={{ alpha: false }}>\n      {/** Background, cameras, controls and lights */}\n      <color args={[\"#333333\"]} attach=\"background\" />\n      <lineSegments geometry={room}>\n        <lineBasicMaterial color=\"#c0c0c0\" />\n      </lineSegments>\n      <PerspectiveCamera makeDefault position={[0, 1.6, 0]} />\n      <OrbitControls makeDefault target={[0, 1, -1.8]} />\n      <ambientLight />\n      <DefaultXRControllers />\n\n      <group position={[0, 1, -1.88]}>{children}</group>\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport Example from \"@/components/example\";\nimport { Layer, LayerProps } from \"../../lib\";\nimport Button from \"@/components/button\";\n\nexport default function Layout() {\n  const [flexDirection, setFlexDirection] =\n    React.useState<LayerProps[\"flexDirection\"]>(\"row\");\n  const [alignItems, setAlignItems] =\n    React.useState<LayerProps[\"alignItems\"]>(\"center\");\n  const [justifyContent, setJustifyContent] =\n    React.useState<LayerProps[\"justifyContent\"]>(\"space-around\");\n\n  return (\n    <Example>\n      <Layer\n        width={1.5}\n        height={0.2}\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n        position-y={0.625}\n      >\n        <Layer width={0.8} height={0.05} justifyContent=\"space-around\">\n          <Button\n            width={0.1}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"row\"\n            selected={flexDirection === \"row\"}\n            onClick={() => setFlexDirection(\"row\")}\n          />\n          <Button\n            width={0.2}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"row-reverse\"\n            selected={flexDirection === \"row-reverse\"}\n            onClick={() => setFlexDirection(\"row-reverse\")}\n          />\n          <Button\n            width={0.15}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"column\"\n            selected={flexDirection === \"column\"}\n            onClick={() => setFlexDirection(\"column\")}\n          />\n          <Button\n            width={0.25}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"column-reverse\"\n            selected={flexDirection === \"column-reverse\"}\n            onClick={() => setFlexDirection(\"column-reverse\")}\n          />\n        </Layer>\n        <Layer width={0.85} height={0.05} justifyContent=\"space-around\">\n          <Button\n            width={0.25}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"alignItems: start\"\n            selected={alignItems === \"start\"}\n            onClick={() => setAlignItems(\"start\")}\n          />\n          <Button\n            width={0.25}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"alignItems: center\"\n            selected={alignItems === \"center\"}\n            onClick={() => setAlignItems(\"center\")}\n          />\n          <Button\n            width={0.25}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"alignItems: end\"\n            selected={alignItems === \"end\"}\n            onClick={() => setAlignItems(\"end\")}\n          />\n        </Layer>\n        <Layer width={1.6} height={0.05} justifyContent=\"space-around\">\n          <Button\n            width={0.25}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"justifyContent: start\"\n            selected={justifyContent === \"start\"}\n            onClick={() => setJustifyContent(\"start\")}\n          />\n          <Button\n            width={0.35}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"justifyContent: space-around\"\n            selected={justifyContent === \"space-around\"}\n            onClick={() => setJustifyContent(\"space-around\")}\n          />\n          <Button\n            width={0.35}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"justifyContent: space-between\"\n            selected={justifyContent === \"space-between\"}\n            onClick={() => setJustifyContent(\"space-between\")}\n          />\n          <Button\n            width={0.25}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"justifyContent: center\"\n            selected={justifyContent === \"center\"}\n            onClick={() => setJustifyContent(\"center\")}\n          />\n          <Button\n            width={0.25}\n            height={0.05}\n            fontSize={0.5}\n            textContent=\"justifyContent: end\"\n            selected={justifyContent === \"end\"}\n            onClick={() => setJustifyContent(\"end\")}\n          />\n        </Layer>\n      </Layer>\n      <Layer\n        width={1}\n        height={1}\n        borderWidth={0.025}\n        borderColor=\"#222222\"\n        borderRadius={0.05}\n        backgroundColor=\"#444444\"\n        flexDirection={flexDirection}\n        alignItems={alignItems}\n        justifyContent={justifyContent}\n      >\n        <Layer width={0.25} height={0.25} backgroundColor=\"red\" />\n        <Layer width={0.25} height={0.25} backgroundColor=\"green\" />\n        <Layer width={0.25} height={0.25} backgroundColor=\"lightblue\" />\n      </Layer>\n    </Example>\n  );\n}\n"],"names":["lastRenderOrder","updates","Map","update","state","forEach","fn","add","uuid","set","remove","has","delete","LayerContext","React","parentUuid","currentChildren","addChild","removeChild","DEFAULT_BACKGROUND_POSITION","Layer","ref","zIndex","resolution","visible","autoLayout","width","height","opacity","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","borderRadius","borderWidth","borderColor","flexDirection","alignItems","justifyContent","gap","textContent","textAlign","justifyText","verticalAlign","color","fontFamily","fontSize","fontWeight","childIndex","children","props","renderOrder","materialRef","childrenGroupRef","layerContext","THREE","index","ctx","document","createElement","getContext","canvas","Math","max","floor","canvasTexture","anisotropy","images","Image","src","w","h","d2r","PI","res","mapLinear","globalCompositeOperation","clearRect","isArray","Array","array","number","tl","tr","br","bl","beginPath","moveTo","lineTo","arc","closePath","globalAlpha","fillStyle","lineWidth","fill","ox","oy","undefined","x","y","sx","sy","sw","sh","ir","cr","dw","dh","dx","dy","save","clip","drawImage","restore","canvasTxt","min","fontStyle","textBaseline","stroke","strokeStyle","needsUpdate","updateManager","setCurrentChildren","childGroupRefs","map","size","refs","includes","reverse","childrenWidth","reduce","child","childrenHeight","contentSize","axis","axisInverted","length","i","spacing","layout","current","position","layerProviderValue","nextCurrentChildren","findIndex","value","push","sort","a","b","filter","childrenGroup","traverse","object","material","transparent","Provider","args","side","depthWrite","key","ForwardedLayer","displayName","Button","selected","onClick","pointerOver","setPointerOver","onPointerOver","onPointerOut","event","Example","room","BoxLineGeometry","translate","legacy","flat","linear","gl","alpha","attach","geometry","makeDefault","target","Layout","setFlexDirection","setAlignItems","setJustifyContent"],"sourceRoot":""}