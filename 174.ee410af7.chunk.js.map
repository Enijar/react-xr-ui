{"version":3,"file":"174.ee410af7.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./examples/components/button.tsx","webpack://react-xr-ui/./examples/examples/relative-sizing.tsx","webpack://react-xr-ui/./src/components/interaction.tsx"],"sourcesContent":["import React from \"react\";\nimport { Interaction, Layer } from \"react-xr-ui\";\n\ntype Props = {\n  textContent: string;\n  selected: boolean;\n  onClick: () => void;\n  fontSize: number | `${number}px`;\n  width: number;\n  height: number;\n  fontFamily?: string;\n  optimizedRendering?: boolean;\n};\n\nexport default function Button({\n  textContent,\n  selected,\n  onClick,\n  fontSize,\n  width,\n  height,\n  fontFamily = \"system-ui, sans-serif\",\n  optimizedRendering = false,\n}: Props) {\n  const [pointerOver, setPointerOver] = React.useState(false);\n\n  return (\n    <Interaction\n      onOver={() => {\n        setPointerOver(true);\n        document.body.style.cursor = \"pointer\";\n      }}\n      onOut={() => {\n        setPointerOver(false);\n        document.body.style.cursor = \"auto\";\n      }}\n      onDown={() => {\n        onClick();\n        setPointerOver(false);\n      }}\n    >\n      <Layer\n        width={width}\n        height={height}\n        backgroundColor={pointerOver || selected ? \"white\" : \"#111111\"}\n        color={pointerOver || selected ? \"#111111\" : \"white\"}\n        textContent={textContent}\n        fontFamily={fontFamily}\n        fontSize={fontSize}\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        optimizedRendering={optimizedRendering}\n      />\n    </Interaction>\n  );\n}\n","import React from \"react\";\nimport Example from \"@/components/example\";\nimport { Layer } from \"react-xr-ui\";\nimport ViewCode from \"@/components/view-code\";\nimport Button from \"@/components/button\";\n\nexport default function RelativeSizing() {\n  const sizes = React.useMemo(() => {\n    return {\n      xl: \"75%\",\n      m: \"50%\",\n      s: \"25%\",\n    };\n  }, []);\n\n  const [size, setSize] = React.useState<keyof typeof sizes>(\"m\");\n\n  return (\n    <>\n      <Example>\n        <Layer width={1} height={0.1} gap={0.05} position-y={0.6}>\n          <Button\n            width={0.1}\n            height={0.1}\n            fontSize={0.35}\n            textContent={sizes.xl}\n            selected={size === \"xl\"}\n            onClick={() => setSize(\"xl\")}\n          />\n          <Button\n            width={0.1}\n            height={0.1}\n            fontSize={0.35}\n            textContent={sizes.m}\n            selected={size === \"m\"}\n            onClick={() => setSize(\"m\")}\n          />\n          <Button\n            width={0.1}\n            height={0.1}\n            fontSize={0.35}\n            textContent={sizes.s}\n            selected={size === \"s\"}\n            onClick={() => setSize(\"s\")}\n          />\n        </Layer>\n        <Layer gap={0.1} backgroundColor=\"crimson\">\n          <Layer\n            width={sizes[size]}\n            height={sizes[size]}\n            backgroundColor=\"#333333\"\n          />\n        </Layer>\n      </Example>\n      <ViewCode pathname=\"relative-sizing\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport type { Intersection } from \"three\";\nimport { Interactive, useXR, XRInteractionEvent } from \"@react-three/xr\";\nimport { ThreeEvent } from \"@react-three/fiber\";\n\ntype Fn = (intersection: Intersection, intersections: Intersection[]) => void;\n\ntype Props = {\n  children: React.ReactNode;\n  onMove?: Fn;\n  onOver?: Fn;\n  onOut?: Fn;\n  onDown?: Fn;\n  onUp?: Fn;\n  enabled?: boolean;\n};\n\nexport default function Interaction({\n  children,\n  onMove,\n  onOver,\n  onOut,\n  onDown,\n  onUp,\n  enabled = true,\n}: Props) {\n  const isPresenting = useXR((state) => state.isPresenting);\n\n  const handleVrInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: XRInteractionEvent) => {\n        if (!isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        fn(event.intersection, event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  const handleWebInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: ThreeEvent<PointerEvent>) => {\n        if (isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        event.stopPropagation();\n        fn(event.intersections[0], event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  return (\n    <Interactive\n      onSelectStart={handleVrInteraction(onDown)}\n      onSelectEnd={handleVrInteraction(onUp)}\n      onMove={handleVrInteraction(onMove)}\n      onHover={handleVrInteraction(onOver)}\n      onBlur={handleVrInteraction(onOut)}\n    >\n      <group\n        onPointerDown={handleWebInteraction(onDown)}\n        onPointerUp={handleWebInteraction(onUp)}\n        onPointerMove={handleWebInteraction(onMove)}\n        onPointerOver={handleWebInteraction(onOver)}\n        onPointerOut={handleWebInteraction(onOut)}\n      >\n        {children}\n      </group>\n    </Interactive>\n  );\n}\n"],"names":["Button","_ref","textContent","selected","onClick","fontSize","width","height","fontFamily","optimizedRendering","pointerOver","setPointerOver","React","Interaction","onOver","document","body","style","cursor","onOut","onDown","Layer","backgroundColor","color","textAlign","verticalAlign","RelativeSizing","sizes","xl","m","s","size","setSize","Example","gap","ViewCode","pathname","children","onMove","onUp","enabled","isPresenting","useXR","state","handleVrInteraction","fn","event","intersection","intersections","handleWebInteraction","stopPropagation","Interactive","onSelectStart","onSelectEnd","onHover","onBlur","onPointerDown","onPointerUp","onPointerMove","onPointerOver","onPointerOut"],"sourceRoot":""}