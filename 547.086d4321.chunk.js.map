{"version":3,"file":"547.086d4321.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./lib/hooks/use-render-order.tsx","webpack://react-xr-ui/./lib/components/layer.tsx","webpack://react-xr-ui/./lib/services/layout.ts","webpack://react-xr-ui/./lib/services/interactive.ts","webpack://react-xr-ui/./lib/services/update.ts","webpack://react-xr-ui/./src/components/example.tsx"],"sourcesContent":["import * as React from \"react\";\n\nlet lastRenderOrder = -1;\n\nexport default function useRenderOrder() {\n  return React.useMemo(() => {\n    return ++lastRenderOrder;\n  }, []);\n}\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport canvasTxt from \"canvas-txt\";\nimport useRenderOrder from \"../hooks/use-render-order\";\nimport layout from \"../services/layout\";\nimport updateManager from \"../services/update\";\nimport { ValueArray, LayerContextType, LayerProps, LayerRef } from \"../types\";\nimport interactive from \"../services/interactive\";\n\nconst LayerContext = React.createContext<LayerContextType>({\n  parentUuid: null,\n  parentSize: { width: 1, height: 1 },\n  currentChildren: [],\n  addChild() {},\n  removeChild() {},\n});\n\nconst DEFAULT_BACKGROUND_POSITION: LayerProps[\"backgroundPosition\"] = [0, 0];\n\nfunction Layer(\n  {\n    zIndex = 0,\n    resolution = 1024,\n    visible = true,\n    autoLayout = true,\n    width,\n    height,\n    opacity = 1,\n    backgroundColor = \"transparent\",\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition = DEFAULT_BACKGROUND_POSITION,\n    padding = 0,\n    borderRadius = 0,\n    borderWidth = 0,\n    borderColor = \"transparent\",\n    flexDirection = \"row\",\n    alignItems = \"center\",\n    justifyContent = \"center\",\n    gap = 0,\n    textContent,\n    textAlign = \"left\",\n    justifyText = false,\n    verticalAlign = \"top\",\n    color = \"white\",\n    fontFamily = \"system-ui, sans-serif\",\n    fontSize = 0.1,\n    fontWeight = \"normal\",\n    lineHeight = null,\n    childIndex,\n    children,\n    onPointerMove,\n    onPointerOver,\n    onPointerOut,\n    onPointerDown,\n    onPointerUp,\n    ...props\n  }: LayerProps,\n  ref: React.ForwardedRef<LayerRef>\n) {\n  const renderOrder = useRenderOrder();\n\n  const groupRef = React.useRef<THREE.Group>(null);\n  const materialRef = React.useRef<THREE.MeshBasicMaterial>(null);\n  const childrenGroupRef = React.useRef<THREE.Group>(null);\n\n  React.useEffect(() => {\n    const material = materialRef.current;\n    if (material === null) return;\n    material.blending = THREE.CustomBlending;\n  }, []);\n\n  React.useImperativeHandle(ref, () => {\n    return {\n      group: groupRef.current,\n      test() {\n        console.log(\"Test\");\n      },\n    };\n  });\n\n  const layerContext = React.useContext(LayerContext);\n\n  const size = React.useMemo<{ width: number; height: number }>(() => {\n    const size: { width: number; height: number } = { width: 1, height: 1 };\n    if (typeof width === \"string\") {\n      const percent = parseFloat(width);\n      const normal = percent / 100;\n      if (layerContext.parentUuid === null) {\n        size.width = normal;\n      } else if (isNaN(percent)) {\n        size.width = 1;\n      } else {\n        size.width = layerContext.parentSize.width * normal;\n      }\n    } else {\n      size.width = width ?? 1;\n    }\n    if (typeof height === \"string\") {\n      const percent = parseFloat(height);\n      const normal = percent / 100;\n      if (layerContext.parentUuid === null) {\n        size.height = normal;\n      } else if (isNaN(percent)) {\n        size.height = 1;\n      } else {\n        size.height = layerContext.parentSize.height * normal;\n      }\n    } else {\n      size.height = height ?? 1;\n    }\n    return size;\n  }, [width, height, layerContext.parentUuid, layerContext.parentSize]);\n\n  const uuid = React.useMemo(() => {\n    return THREE.MathUtils.generateUUID();\n  }, []);\n\n  React.useEffect(() => {\n    if (layerContext.parentUuid === null) return;\n    layerContext.addChild({\n      width: size.width,\n      height: size.height,\n      index: childIndex,\n      autoLayout,\n      uuid,\n    });\n    return () => {\n      layerContext.removeChild(uuid);\n    };\n  }, [size, childIndex, autoLayout, layerContext.parentUuid]);\n\n  const pointerRefs = React.useRef({\n    onPointerMove,\n    onPointerOver,\n    onPointerOut,\n    onPointerDown,\n    onPointerUp,\n  });\n\n  React.useMemo(() => {\n    pointerRefs.current.onPointerMove = onPointerMove;\n    pointerRefs.current.onPointerOver = onPointerOver;\n    pointerRefs.current.onPointerOut = onPointerOut;\n    pointerRefs.current.onPointerDown = onPointerDown;\n    pointerRefs.current.onPointerUp = onPointerUp;\n  }, [onPointerMove, onPointerOver, onPointerOut, onPointerDown, onPointerUp]);\n\n  React.useLayoutEffect(() => {\n    interactive.add({\n      uuid,\n      object: groupRef.current,\n      onPointerMove: pointerRefs.current.onPointerMove,\n      onPointerOver: pointerRefs.current.onPointerOver,\n      onPointerOut: pointerRefs.current.onPointerOut,\n      onPointerDown: pointerRefs.current.onPointerDown,\n      onPointerUp: pointerRefs.current.onPointerUp,\n    });\n    return () => {\n      interactive.remove(uuid);\n    };\n  }, [uuid]);\n\n  // Create 2d canvas context\n  const ctx = React.useMemo<CanvasRenderingContext2D>(() => {\n    const canvas = document.createElement(\"canvas\");\n    return canvas.getContext(\"2d\");\n  }, []);\n\n  // Set canvas size\n  React.useMemo(() => {\n    ctx.canvas.width = Math.max(1, Math.floor(size.width * resolution));\n    ctx.canvas.height = Math.max(1, Math.floor(size.height * resolution));\n  }, [ctx.canvas, size, resolution]);\n\n  // Create canvas texture with the newly created canvas;\n  // this will be used as the texture for the plane\n  const canvasTexture = React.useMemo(() => {\n    const canvasTexture = new THREE.CanvasTexture(ctx.canvas);\n    canvasTexture.anisotropy = 16;\n    canvasTexture.premultiplyAlpha = true;\n    return canvasTexture;\n  }, [ctx.canvas, size]);\n\n  const images = React.useMemo(() => {\n    const backgroundImage = new Image();\n    return { backgroundImage };\n  }, []);\n\n  // Set source for background image\n  React.useMemo(() => {\n    if (!backgroundImage) return;\n    images.backgroundImage.src = backgroundImage;\n  }, [images.backgroundImage, backgroundImage]);\n\n  const update = React.useCallback(() => {\n    // Useful vars\n    const w = ctx.canvas.width;\n    const h = ctx.canvas.height;\n    const d2r = Math.PI / 180; // degrees to radians\n    const res = Math.min(w, h);\n    const { mapLinear } = THREE.MathUtils;\n\n    ctx.globalCompositeOperation = \"source-over\";\n\n    ctx.clearRect(0, 0, w, h);\n\n    // Border radius\n    {\n      const isArray = Array.isArray(borderRadius);\n      const array = borderRadius as ValueArray;\n      const number = borderRadius as number;\n      let [tl = 0, tr = 0, br = 0, bl = 0] = isArray\n        ? array\n        : [number, number, number, number];\n      tl *= res;\n      tr *= res;\n      br *= res;\n      bl *= res;\n      ctx.beginPath();\n      ctx.moveTo(tl, 0);\n      ctx.lineTo(w - tr, 0);\n      ctx.arc(w - tr, tr, tr, d2r * 270, d2r * 360);\n      ctx.lineTo(w, h - br);\n      ctx.arc(w - br, h - br, br, 0, d2r * 90);\n      ctx.lineTo(bl, h);\n      ctx.arc(bl, h - bl, bl, d2r * 90, d2r * 180);\n      ctx.lineTo(0, tl);\n      ctx.arc(tl, tl, tl, d2r * 180, d2r * 270);\n      ctx.closePath();\n    }\n\n    ctx.globalAlpha = opacity;\n\n    // Background color\n    ctx.fillStyle = backgroundColor;\n    ctx.lineWidth = borderWidth * res * 2;\n    ctx.fill();\n\n    const ox = borderWidth * res;\n    const oy = borderWidth * res;\n\n    // Background image\n    if (backgroundImage !== undefined) {\n      const x = backgroundPosition[0];\n      const y = backgroundPosition[1];\n      const sx = 0;\n      const sy = 0;\n      const sw = Math.max(1, images.backgroundImage.width);\n      const sh = Math.max(1, images.backgroundImage.height);\n      const ir = sw / sh;\n      const cr = w / h;\n      let dw = sw;\n      let dh = sh;\n      switch (backgroundSize) {\n        case \"stretch\":\n          dw = w;\n          dh = h;\n          break;\n        case \"contain\":\n          dw = w - ox * 2;\n          dh = h - oy * 2;\n          if (ir >= cr) {\n            dh = dw / ir;\n          } else {\n            dw = dh * ir;\n          }\n          break;\n        case \"cover\":\n          dw = w - ox * 2;\n          dh = h - oy * 2;\n          if (ir <= cr) {\n            dh = dw / ir;\n          } else {\n            dw = dh * ir;\n          }\n          break;\n      }\n      const dx = ox + mapLinear(x, 0, 1, 0, w - ox * 2 - dw);\n      const dy = oy + mapLinear(y, 0, 1, 0, h - oy * 2 - dh);\n      ctx.save();\n      ctx.clip();\n      ctx.drawImage(images.backgroundImage, sx, sy, sw, sh, dx, dy, dw, dh);\n      ctx.restore();\n    }\n\n    // Typography\n    if (textContent !== undefined) {\n      canvasTxt.font = fontFamily;\n      canvasTxt.fontSize = fontSize * Math.min(w, h);\n      canvasTxt.lineHeight = lineHeight * canvasTxt.fontSize;\n      canvasTxt.align = textAlign;\n      canvasTxt.vAlign = verticalAlign;\n      canvasTxt.justify = justifyText;\n      canvasTxt.fontWeight = fontWeight;\n      ctx.textBaseline = \"bottom\";\n      ctx.fillStyle = color;\n      canvasTxt.drawText(ctx, textContent, ox, oy, w - ox * 2, h - oy * 2);\n    }\n\n    // Fixes antialiasing issue\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.stroke();\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.save();\n    ctx.clip();\n\n    ctx.strokeStyle = borderColor;\n    // Border\n    ctx.stroke();\n    ctx.restore();\n\n    // Make sure canvas texture gets updated\n    canvasTexture.needsUpdate = true;\n  }, [\n    ctx,\n    images,\n    borderWidth,\n    borderRadius,\n    borderColor,\n    backgroundImage,\n    backgroundColor,\n    backgroundPosition,\n    backgroundSize,\n    canvasTexture,\n    fontWeight,\n    fontSize,\n    fontFamily,\n    fontSize,\n    lineHeight,\n    justifyContent,\n    verticalAlign,\n    textAlign,\n    textContent,\n    color,\n  ]);\n\n  React.useEffect(() => {\n    updateManager.add(uuid, update);\n    return () => updateManager.remove(uuid);\n  }, [uuid, update]);\n\n  const [currentChildren, setCurrentChildren] = React.useState<\n    LayerContextType[\"currentChildren\"]\n  >([]);\n\n  const childGroupRefs = React.useMemo(() => {\n    return currentChildren.map(() => React.createRef<THREE.Group>());\n  }, [currentChildren]);\n\n  // Layout calculations\n  React.useEffect(() => {\n    const res = Math.min(size.width, size.height);\n    const paddingX = Array.isArray(padding)\n      ? (padding[1] ?? 0) + (padding[3] ?? 0)\n      : padding;\n    const paddingY = Array.isArray(padding)\n      ? (padding[0] ?? 0) + (padding[2] ?? 0)\n      : padding;\n    size.width -= res * borderWidth * 2;\n    size.height -= res * borderWidth * 2;\n    size.width -= res * paddingX * 2;\n    size.height -= res * paddingY * 2;\n    childGroupRefs.forEach((childGroupRef, index) => {\n      let [x, y] = layout({\n        currentChildren,\n        index,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        gap,\n        size,\n      });\n      if (!currentChildren[index].autoLayout) {\n        x = 0;\n        y = 0;\n      }\n      childGroupRef.current.position.x = x;\n      childGroupRef.current.position.y = y;\n    });\n  }, [\n    childGroupRefs,\n    currentChildren,\n    size,\n    flexDirection,\n    alignItems,\n    justifyContent,\n    borderWidth,\n    padding,\n    gap,\n  ]);\n\n  const layerProviderValue = React.useMemo<LayerContextType>(() => {\n    return {\n      currentChildren,\n      parentSize: size,\n      parentUuid: uuid,\n      addChild(child) {\n        setCurrentChildren((currentChildren) => {\n          const nextCurrentChildren = [...currentChildren];\n          const index = currentChildren.findIndex((value) => {\n            return value.uuid === child.uuid;\n          });\n          if (index === -1) {\n            nextCurrentChildren.push({ ...child });\n          } else {\n            nextCurrentChildren[index] = { ...child };\n          }\n          return nextCurrentChildren.sort((a, b) => {\n            return a.index - b.index;\n          });\n        });\n      },\n      removeChild(uuid) {\n        setCurrentChildren((currentChildren) => {\n          return currentChildren.filter((value) => value.uuid !== uuid);\n        });\n      },\n    };\n  }, [currentChildren, uuid, size]);\n\n  React.useEffect(() => {\n    const childrenGroup = childrenGroupRef.current;\n    if (childrenGroup === null) return;\n    childrenGroup.traverse((object) => {\n      if (\n        object instanceof THREE.Mesh &&\n        object.material instanceof THREE.Material\n      ) {\n        object.material.transparent = true;\n        object.material.opacity = opacity;\n        object.material.needsUpdate = true;\n      }\n    });\n  }, [opacity]);\n\n  return (\n    <LayerContext.Provider value={layerProviderValue}>\n      <group ref={groupRef} {...props} visible={visible}>\n        <mesh renderOrder={renderOrder + zIndex}>\n          <planeGeometry args={[size.width, size.height]} />\n          <meshBasicMaterial\n            ref={materialRef}\n            side={THREE.FrontSide}\n            opacity={opacity}\n            transparent={true}\n            depthWrite={false}\n            map={canvasTexture}\n          />\n        </mesh>\n        <group renderOrder={renderOrder + zIndex + 1} ref={childrenGroupRef}>\n          {React.Children.map(children, (child, childIndex) => {\n            if (React.isValidElement(child)) {\n              return (\n                <group key={childIndex} ref={childGroupRefs[childIndex]}>\n                  {React.cloneElement(child, { ...child.props, childIndex })}\n                </group>\n              );\n            }\n            return child;\n          })}\n        </group>\n      </group>\n    </LayerContext.Provider>\n  );\n}\n\nexport default React.forwardRef(Layer);\n","import { Child, LayerProps, Size } from \"../types\";\n\ntype Axis = \"width\" | \"height\";\n\ntype Args = {\n  currentChildren: Child[];\n  index: number;\n  flexDirection: LayerProps[\"flexDirection\"];\n  alignItems: LayerProps[\"alignItems\"];\n  justifyContent: LayerProps[\"justifyContent\"];\n  gap: LayerProps[\"gap\"];\n  size: Size;\n};\n\nexport default function layout({\n  currentChildren,\n  index,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  gap,\n  size,\n}: Args): [x: number, y: number] {\n  const childrenWidth = currentChildren.reduce((width, child) => {\n    if (!child.autoLayout) return width;\n    return width + child.width;\n  }, 0);\n  const childrenHeight = currentChildren.reduce((height, child) => {\n    if (!child.autoLayout) return height;\n    return height + child.height;\n  }, 0);\n  let x = 0;\n  let y = 0;\n  let contentSize = childrenWidth;\n  let axis: Axis = \"width\";\n  let oppositeAxis: Axis = \"height\";\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    axis = \"height\";\n    oppositeAxis = \"width\";\n    contentSize = childrenHeight;\n  }\n  if (\n    currentChildren.length > 0 &&\n    ![\"space-between\", \"space-around\"].includes(justifyContent)\n  ) {\n    contentSize += gap * (currentChildren.length - 1);\n  }\n\n  if ([\"space-between\", \"space-around\"].includes(justifyContent)) {\n    gap = 0;\n  }\n\n  const isReverse = [\"row-reverse\", \"column-reverse\"].includes(flexDirection);\n  const isColumn = [\"column\", \"column-reverse\"].includes(flexDirection);\n\n  let dir = 1;\n  if (isColumn) {\n    dir = -1;\n  }\n\n  /**\n   * justifyContent\n   */\n  switch (justifyContent) {\n    case \"start\":\n      x =\n        ((size[axis] - currentChildren[index][axis]) * 0.5 -\n          (size[axis] - contentSize)) *\n        dir;\n      break;\n    case \"end\":\n      x = (size[axis] * 0.5 - currentChildren[index][axis] * 0.5) * dir;\n      break;\n    case \"center\":\n      x = (contentSize * 0.5 - currentChildren[index][axis] * 0.5) * dir;\n      break;\n    case \"space-between\":\n      if (currentChildren.length > 1) {\n        x = (size[axis] * 0.5 - currentChildren[index][axis] * 0.5) * dir;\n      }\n      break;\n    case \"space-around\":\n      if (currentChildren.length > 1) {\n        x = (size[axis] * 0.5 - currentChildren[index][axis] * 0.5) * dir;\n      }\n      break;\n  }\n\n  let spacing = 0;\n  if (currentChildren.length > 1) {\n    if (justifyContent === \"space-between\") {\n      spacing =\n        Math.max(0, size[axis] - contentSize) /\n        Math.max(1, currentChildren.length - 1);\n    }\n    if (justifyContent === \"space-around\") {\n      spacing =\n        Math.max(0, size[axis] - contentSize) /\n        Math.max(1, currentChildren.length + 1);\n    }\n  }\n\n  if (justifyContent === \"space-around\") {\n    x -= spacing * dir;\n  }\n\n  if (isReverse) {\n    for (let i = 1; i <= index; i++) {\n      const child = currentChildren[i - 1];\n      if (!child.autoLayout) continue;\n      x -= (child[axis] + spacing + gap) * dir;\n    }\n  } else {\n    for (let i = currentChildren.length - 2; i >= index; i--) {\n      const child = currentChildren[i + 1];\n      if (!child.autoLayout) continue;\n      x -= (currentChildren[i + 1][axis] + spacing + gap) * dir;\n    }\n  }\n\n  /**\n   * alignItems\n   */\n  switch (alignItems) {\n    case \"start\":\n      y =\n        (size[oppositeAxis] * 0.5 -\n          currentChildren[index][oppositeAxis] * 0.5) *\n        dir;\n      break;\n    case \"end\":\n      y =\n        (currentChildren[index][oppositeAxis] * 0.5 -\n          size[oppositeAxis] * 0.5) *\n        dir;\n      break;\n    case \"center\":\n      y = 0;\n      break;\n  }\n\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    return [y, x];\n  }\n  return [x, y];\n}\n","import * as THREE from \"three\";\nimport { XRController } from \"@react-three/xr\";\n\ntype Interaction = {\n  uuid: string;\n  object?: THREE.Object3D;\n  onPointerMove?: (...args: any[]) => void;\n  onPointerOver?: (...args: any[]) => void;\n  onPointerOut?: (...args: any[]) => void;\n  onPointerDown?: (...args: any[]) => void;\n  onPointerUp?: (...args: any[]) => void;\n};\n\ntype Interactive = {\n  disabled: boolean;\n  enabled: boolean;\n  lastInteractionUuid: string;\n  interactions: Interaction[];\n  interactionsState: {\n    [uuid: string]: {\n      downFired: boolean;\n      upFired: boolean;\n      overFired: boolean;\n      outFired: boolean;\n    };\n  };\n  pointerDown: boolean;\n  cleanUp: boolean;\n  cleanDown: boolean;\n  cleanMove: boolean;\n  create: () => void;\n  add: (interaction: Interaction) => void;\n  remove: (uuid: string) => void;\n  handle: (camera: THREE.PerspectiveCamera, raycaster: THREE.Raycaster) => void;\n  update: (\n    camera: THREE.Camera,\n    raycaster: THREE.Raycaster,\n    controllers: XRController[]\n  ) => void;\n};\n\nconst matrix = new THREE.Matrix4();\n\nfunction hasPointerEvent(interaction: Interaction): boolean {\n  return (\n    interaction.onPointerMove !== undefined ||\n    interaction.onPointerOver !== undefined ||\n    interaction.onPointerOut !== undefined ||\n    interaction.onPointerDown !== undefined ||\n    interaction.onPointerUp !== undefined\n  );\n}\n\nfunction firePointerOver(interaction: Interaction): boolean {\n  if (!interaction.object) return;\n  const state = interactive.interactionsState[interaction.object.uuid];\n  return !state.overFired;\n}\n\nfunction firePointerOut(interaction: Interaction): boolean {\n  if (!interaction.object) return;\n  const state = interactive.interactionsState[interaction.object.uuid];\n  return state.overFired && !state.outFired;\n}\n\nfunction firePointerDown(interaction: Interaction): boolean {\n  if (!interactive.pointerDown) return false;\n  if (!interaction.object) return;\n  const state = interactive.interactionsState[interaction.object.uuid];\n  return !state.downFired;\n}\n\nfunction firePointerUp(interaction: Interaction): boolean {\n  if (interactive.pointerDown) return false;\n  if (!interaction.object) return;\n  const state = interactive.interactionsState[interaction.object.uuid];\n  return state.downFired && !state.upFired;\n}\n\nfunction firePointerMove(interaction: Interaction): boolean {\n  return true;\n}\n\nconst interactive: Interactive = {\n  disabled: false,\n  enabled: true,\n  lastInteractionUuid: \"\",\n  interactions: [],\n  interactionsState: {},\n  pointerDown: false,\n  cleanUp: false,\n  cleanDown: false,\n  cleanMove: false,\n  create() {\n    function onMove() {\n      interactive.enabled = true;\n      interactive.cleanMove = true;\n    }\n\n    function onDown() {\n      interactive.enabled = true;\n      interactive.pointerDown = true;\n      interactive.cleanDown = true;\n    }\n\n    function onUp() {\n      interactive.pointerDown = false;\n      interactive.cleanUp = true;\n    }\n\n    window.addEventListener(\"pointermove\", onMove);\n    window.addEventListener(\"pointerdown\", onDown);\n    window.addEventListener(\"pointerup\", onUp);\n    return () => {\n      window.removeEventListener(\"pointermove\", onMove);\n      window.removeEventListener(\"pointerdown\", onDown);\n      window.removeEventListener(\"pointerup\", onUp);\n    };\n  },\n  add(interaction) {\n    if (!hasPointerEvent(interaction)) return;\n    const index = interactive.interactions.findIndex((item) => {\n      return item.object?.uuid === interaction.object?.uuid;\n    });\n    if (index === -1 && interaction.object) {\n      interactive.interactionsState[interaction.object.uuid] = {\n        downFired: false,\n        upFired: false,\n        overFired: false,\n        outFired: false,\n      };\n      interactive.interactions.push(interaction);\n    }\n  },\n  remove(uuid) {\n    const index = interactive.interactions.findIndex((item) => {\n      return item.uuid === uuid;\n    });\n    if (index > -1) {\n      interactive.interactions.splice(index, 1);\n      document.body.style.cursor = \"auto\";\n    }\n  },\n  handle(camera, raycaster) {\n    for (let i = 0, length = interactive.interactions.length; i < length; i++) {\n      const interaction = interactive.interactions[i];\n      if (!interaction.object) continue;\n      const intersects = raycaster.intersectObject(interaction.object, true);\n      if (intersects.length === 0) {\n        if (firePointerOut(interaction)) {\n          interactive.interactionsState[interaction.object.uuid].outFired =\n            true;\n          interactive.interactionsState[interaction.object.uuid].overFired =\n            false;\n          if (interaction.onPointerOut !== undefined) {\n            interaction.onPointerOut();\n            document.body.style.cursor = \"auto\";\n          }\n        }\n        continue;\n      }\n      const intersect = intersects[0];\n      if (firePointerOver(interaction)) {\n        interactive.interactionsState[interaction.object.uuid].overFired = true;\n        interactive.interactionsState[interaction.object.uuid].outFired = false;\n        if (interaction.onPointerOver !== undefined) {\n          interaction.onPointerOver(intersect);\n          document.body.style.cursor = \"pointer\";\n        }\n      }\n      if (firePointerDown(interaction)) {\n        interactive.interactionsState[interaction.object.uuid].downFired = true;\n        if (interaction.onPointerDown !== undefined) {\n          interaction.onPointerDown(intersect);\n        }\n      }\n      if (firePointerUp(interaction)) {\n        interactive.interactionsState[interaction.object.uuid].upFired = true;\n        if (interaction.onPointerUp !== undefined) {\n          interaction.onPointerUp(intersect);\n          document.body.style.cursor = \"auto\";\n        }\n      }\n      if (firePointerMove(interaction)) {\n        if (interaction.onPointerMove !== undefined) {\n          interaction.onPointerMove(intersect);\n        }\n      }\n    }\n  },\n  update(\n    camera: THREE.PerspectiveCamera,\n    raycaster: THREE.Raycaster,\n    controllers: XRController[]\n  ) {\n    if (!interactive.enabled || interactive.disabled) return;\n\n    if (controllers.length > 0) {\n      for (let i = 0, length = controllers.length; i < length; i++) {\n        if (controllers[i].inputSource.handedness !== \"right\") continue;\n        const controller = controllers[i].controller;\n        matrix.identity().extractRotation(controller.matrixWorld);\n        raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\n        raycaster.ray.direction.set(0, 0, -1).applyMatrix4(matrix);\n      }\n      interactive.handle(camera, raycaster);\n    } else {\n      interactive.handle(camera, raycaster);\n    }\n\n    if (interactive.cleanUp && !interactive.pointerDown) {\n      interactive.cleanUp = false;\n      for (const uuid in interactive.interactionsState) {\n        if (!interactive.interactionsState.hasOwnProperty(uuid)) {\n          continue;\n        }\n        interactive.interactionsState[uuid].upFired = false;\n        interactive.interactionsState[uuid].downFired = false;\n      }\n    }\n\n    if (interactive.cleanDown && interactive.pointerDown) {\n      interactive.cleanDown = false;\n    }\n  },\n};\n\nexport default interactive;\n","import { RootState } from \"@react-three/fiber\";\nimport { XRController } from \"@react-three/xr\";\nimport interactive from \"./interactive\";\n\ntype Fn = (state: RootState) => void;\n\nconst updates = new Map<string, Fn>();\n\nexport default function update(state: RootState, controllers: XRController[]) {\n  updates.forEach((fn) => fn(state));\n  interactive.update(state.camera, state.raycaster, controllers);\n}\n\nupdate.add = (uuid: string, fn: Fn) => {\n  updates.set(uuid, fn);\n};\n\nupdate.remove = (uuid: string) => {\n  if (updates.has(uuid)) {\n    updates.delete(uuid);\n  }\n};\n","import React from \"react\";\nimport { BoxLineGeometry } from \"three/examples/jsm/geometries/BoxLineGeometry\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { Controllers, useXR, useXREvent, XR } from \"@react-three/xr\";\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\nimport { update, interactive } from \"../../lib\";\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nfunction Scene({ children }: Props) {\n  const controllers = useXR((state) => state.controllers);\n\n  useFrame((state) => {\n    update(state, controllers);\n  });\n\n  React.useEffect(() => {\n    return interactive.create();\n  }, []);\n\n  useXREvent(\"selectstart\", () => {\n    interactive.enabled = true;\n    interactive.pointerDown = true;\n    interactive.cleanDown = true;\n  });\n\n  useXREvent(\"selectend\", () => {\n    interactive.pointerDown = false;\n    interactive.cleanUp = true;\n  });\n\n  return <>{children}</>;\n}\n\nexport default function Example({ children }: Props) {\n  const room = React.useMemo(() => {\n    return new BoxLineGeometry(6, 6, 6, 10, 10, 10).translate(0, 3, 0);\n  }, []);\n\n  return (\n    <Canvas legacy flat linear gl={{ alpha: false }}>\n      <XR>\n        {/** Background, cameras, controls and lights */}\n        <color args={[\"#333333\"]} attach=\"background\" />\n        <lineSegments geometry={room}>\n          <lineBasicMaterial color=\"#c0c0c0\" />\n        </lineSegments>\n        <PerspectiveCamera makeDefault position={[0, 1.6, 0]} />\n        <OrbitControls makeDefault target={[0, 1, -1.8]} />\n        <ambientLight />\n        <Controllers />\n\n        <Scene>\n          <group position={[0, 1, -1.88]}>{children}</group>\n        </Scene>\n      </XR>\n    </Canvas>\n  );\n}\n"],"names":["lastRenderOrder","LayerContext","React","parentUuid","parentSize","width","height","currentChildren","addChild","removeChild","DEFAULT_BACKGROUND_POSITION","Layer","ref","zIndex","resolution","visible","autoLayout","opacity","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","padding","borderRadius","borderWidth","borderColor","flexDirection","alignItems","justifyContent","gap","textContent","textAlign","justifyText","verticalAlign","color","fontFamily","fontSize","fontWeight","lineHeight","childIndex","children","onPointerMove","onPointerOver","onPointerOut","onPointerDown","onPointerUp","props","renderOrder","groupRef","materialRef","childrenGroupRef","material","current","blending","THREE","group","test","console","log","layerContext","size","percent","parseFloat","normal","isNaN","uuid","index","pointerRefs","interactive","object","ctx","document","createElement","getContext","canvas","Math","max","floor","canvasTexture","anisotropy","premultiplyAlpha","images","Image","src","update","w","h","d2r","PI","res","min","mapLinear","globalCompositeOperation","clearRect","isArray","Array","array","number","tl","tr","br","bl","beginPath","moveTo","lineTo","arc","closePath","globalAlpha","fillStyle","lineWidth","fill","ox","oy","undefined","x","y","sx","sy","sw","sh","ir","cr","dw","dh","dx","dy","save","clip","drawImage","restore","canvasTxt","textBaseline","stroke","strokeStyle","needsUpdate","updateManager","setCurrentChildren","childGroupRefs","map","paddingX","paddingY","forEach","childGroupRef","childrenWidth","reduce","child","childrenHeight","contentSize","axis","oppositeAxis","includes","length","isReverse","dir","spacing","i","layout","position","layerProviderValue","nextCurrentChildren","findIndex","value","push","sort","a","b","filter","childrenGroup","traverse","transparent","Provider","args","side","depthWrite","key","matrix","firePointerOver","interaction","interactionsState","overFired","firePointerOut","state","outFired","firePointerDown","pointerDown","downFired","firePointerUp","upFired","disabled","enabled","lastInteractionUuid","interactions","cleanUp","cleanDown","cleanMove","create","onMove","onDown","onUp","window","addEventListener","removeEventListener","add","hasPointerEvent","item","remove","splice","body","style","cursor","handle","camera","raycaster","intersects","intersectObject","intersect","controllers","inputSource","handedness","controller","identity","extractRotation","matrixWorld","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","hasOwnProperty","updates","Map","fn","has","delete","Scene","useXR","useFrame","useXREvent","Example","room","BoxLineGeometry","translate","legacy","flat","linear","gl","alpha","XR","attach","geometry","makeDefault","target"],"sourceRoot":""}