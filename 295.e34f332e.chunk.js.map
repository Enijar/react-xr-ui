{"version":3,"file":"295.e34f332e.chunk.js","mappings":"2MAKe,SAASA,IACtB,MAAOC,EAAMC,GAAWC,EAAAA,UAAe,IAChCC,EAAMC,GAAWF,EAAAA,UAAe,IAChCG,EAAUC,GAAeJ,EAAAA,SAAe,CAAEK,EAAG,EAAGC,EAAG,IAE1D,OACEN,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACO,EAAAA,EAAO,KACNP,EAAAA,cAACQ,EAAAA,EAAK,CAACC,OAAQ,GAAK,aAAY,KAAOC,IAAK,KAC1CV,EAAAA,cAACQ,EAAAA,EAAK,CACJG,MAAM,MACNF,OAAO,OACPG,gBAAgB,UAChBC,YAAaf,EAAO,OAAS,MAC7BgB,SAAU,GACVC,UAAU,SACVC,cAAc,WAEhBhB,EAAAA,cAACQ,EAAAA,EAAK,CACJG,MAAM,MACNF,OAAO,OACPG,gBAAgB,UAChBC,YAAaZ,EAAO,OAAS,KAC7Ba,SAAU,GACVC,UAAU,SACVC,cAAc,WAEhBhB,EAAAA,cAACQ,EAAAA,EAAK,CACJG,MAAM,MACNF,OAAO,OACPG,gBAAgB,UAChBC,YAAc,MAAKV,EAASE,QAAQF,EAASG,IAC7CQ,SAAU,GACVC,UAAU,SACVC,cAAc,YAIlBhB,EAAAA,cAACiB,EAAAA,EAAW,CACVC,OAAQA,IAAMnB,GAAQ,GACtBoB,MAAOA,IAAMpB,GAAQ,GACrBqB,OAAQA,IAAMlB,GAAQ,GACtBmB,KAAMA,IAAMnB,GAAQ,GACpBoB,OAASC,IACPnB,EAAY,CACVC,EAAGmB,WAAWD,EAAaE,GAAGpB,EAAEqB,QAAQ,IACxCpB,EAAGkB,WAAWD,EAAaE,GAAGnB,EAAEoB,QAAQ,KACxC,GAGJ1B,EAAAA,cAACQ,EAAAA,EAAK,CACJI,gBAAgB,UAChBC,YAAY,mBACZG,cAAc,SACdD,UAAU,aAIhBf,EAAAA,cAAC2B,EAAAA,EAAQ,CAACC,SAAS,iBAGzB,C,qFCjDe,SAASX,EAAWY,GAQzB,IAR0B,SAClCC,EAAQ,OACRR,EAAM,OACNJ,EAAM,MACNC,EAAK,OACLC,EAAM,KACNC,EAAI,QACJU,GAAU,GACJF,EACN,MAAMG,GAAeC,EAAAA,EAAAA,KAAOC,GAAUA,EAAMF,eAEtCG,EAAsBnC,EAAAA,aACzBoC,GACSC,IACDL,GACAD,GACAK,GACLA,EAAGC,EAAMd,aAAcc,EAAMC,cAAc,GAG/C,CAACN,EAAcD,EAASX,EAAQC,EAAMC,EAAQJ,EAAQC,IAGlDoB,EAAuBvC,EAAAA,aAC1BoC,GACSC,IACFL,GACCD,GACAK,IACLC,EAAMG,kBACNJ,EAAGC,EAAMC,cAAc,GAAID,EAAMC,eAAc,GAGnD,CAACN,EAAcD,EAASX,EAAQC,EAAMC,EAAQJ,EAAQC,IAGxD,OACEnB,EAAAA,cAACyC,EAAAA,GAAW,CACVC,cAAeP,EAAoBf,GACnCuB,YAAaR,EAAoBd,GACjCC,OAAQa,EAAoBb,GAC5BsB,QAAST,EAAoBjB,GAC7B2B,OAAQV,EAAoBhB,IAE5BnB,EAAAA,cAAA,SACE8C,cAAeP,EAAqBnB,GACpC2B,YAAaR,EAAqBlB,GAClC2B,cAAeT,EAAqBjB,GACpC2B,cAAeV,EAAqBrB,GACpCgC,aAAcX,EAAqBpB,IAElCW,GAIT,C","sources":["webpack://react-xr-ui/./examples/examples/interactions.tsx","webpack://react-xr-ui/./src/components/interaction.tsx"],"sourcesContent":["import React from \"react\";\nimport { Interaction, Layer } from \"react-xr-ui\";\nimport Example from \"@/components/example\";\nimport ViewCode from \"@/components/view-code\";\n\nexport default function Interactions() {\n  const [over, setOver] = React.useState(false);\n  const [down, setDown] = React.useState(false);\n  const [position, setPosition] = React.useState({ x: 0, y: 0 });\n\n  return (\n    <>\n      <Example>\n        <Layer height={0.1} position-y={0.625} gap={0.05}>\n          <Layer\n            width=\"15%\"\n            height=\"100%\"\n            backgroundColor=\"#000000\"\n            textContent={over ? \"Over\" : \"Out\"}\n            fontSize={0.4}\n            textAlign=\"center\"\n            verticalAlign=\"middle\"\n          />\n          <Layer\n            width=\"15%\"\n            height=\"100%\"\n            backgroundColor=\"#000000\"\n            textContent={down ? \"Down\" : \"Up\"}\n            fontSize={0.4}\n            textAlign=\"center\"\n            verticalAlign=\"middle\"\n          />\n          <Layer\n            width=\"30%\"\n            height=\"100%\"\n            backgroundColor=\"#000000\"\n            textContent={`x: ${position.x} y: ${position.y}`}\n            fontSize={0.4}\n            textAlign=\"center\"\n            verticalAlign=\"middle\"\n          />\n        </Layer>\n\n        <Interaction\n          onOver={() => setOver(true)}\n          onOut={() => setOver(false)}\n          onDown={() => setDown(true)}\n          onUp={() => setDown(false)}\n          onMove={(intersection) => {\n            setPosition({\n              x: parseFloat(intersection.uv.x.toFixed(2)),\n              y: parseFloat(intersection.uv.y.toFixed(2)),\n            });\n          }}\n        >\n          <Layer\n            backgroundColor=\"crimson\"\n            textContent=\"Interact with me\"\n            verticalAlign=\"middle\"\n            textAlign=\"center\"\n          />\n        </Interaction>\n      </Example>\n      <ViewCode pathname=\"interactions\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport type { Intersection } from \"three\";\nimport { Interactive, useXR, XRInteractionEvent } from \"@react-three/xr\";\nimport { ThreeEvent } from \"@react-three/fiber\";\n\ntype Fn = (intersection: Intersection, intersections: Intersection[]) => void;\n\ntype Props = {\n  children: React.ReactNode;\n  onMove?: Fn;\n  onOver?: Fn;\n  onOut?: Fn;\n  onDown?: Fn;\n  onUp?: Fn;\n  enabled?: boolean;\n};\n\nexport default function Interaction({\n  children,\n  onMove,\n  onOver,\n  onOut,\n  onDown,\n  onUp,\n  enabled = true,\n}: Props) {\n  const isPresenting = useXR((state) => state.isPresenting);\n\n  const handleVrInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: XRInteractionEvent) => {\n        if (!isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        fn(event.intersection, event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  const handleWebInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: ThreeEvent<PointerEvent>) => {\n        if (isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        event.stopPropagation();\n        fn(event.intersections[0], event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  return (\n    <Interactive\n      onSelectStart={handleVrInteraction(onDown)}\n      onSelectEnd={handleVrInteraction(onUp)}\n      onMove={handleVrInteraction(onMove)}\n      onHover={handleVrInteraction(onOver)}\n      onBlur={handleVrInteraction(onOut)}\n    >\n      <group\n        onPointerDown={handleWebInteraction(onDown)}\n        onPointerUp={handleWebInteraction(onUp)}\n        onPointerMove={handleWebInteraction(onMove)}\n        onPointerOver={handleWebInteraction(onOver)}\n        onPointerOut={handleWebInteraction(onOut)}\n      >\n        {children}\n      </group>\n    </Interactive>\n  );\n}\n"],"names":["Interactions","over","setOver","React","down","setDown","position","setPosition","x","y","Example","Layer","height","gap","width","backgroundColor","textContent","fontSize","textAlign","verticalAlign","Interaction","onOver","onOut","onDown","onUp","onMove","intersection","parseFloat","uv","toFixed","ViewCode","pathname","_ref","children","enabled","isPresenting","useXR","state","handleVrInteraction","fn","event","intersections","handleWebInteraction","stopPropagation","Interactive","onSelectStart","onSelectEnd","onHover","onBlur","onPointerDown","onPointerUp","onPointerMove","onPointerOver","onPointerOut"],"sourceRoot":""}