{"version":3,"file":"411.34f0d41e.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./examples/components/example.tsx","webpack://react-xr-ui/./examples/components/view-code.tsx","webpack://react-xr-ui/./src/services/text.ts","webpack://react-xr-ui/./src/components/layer.tsx","webpack://react-xr-ui/./src/services/layout.ts","webpack://react-xr-ui/./src/components/xr-ui.tsx"],"sourcesContent":["import React from \"react\";\nimport { BoxLineGeometry } from \"three/examples/jsm/geometries/BoxLineGeometry\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Controllers, XR, XRButton } from \"@react-three/xr\";\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\nimport { XrUi } from \"react-xr-ui\";\n\ntype Props = {\n  children?: React.ReactNode;\n  optimizedRendering?: boolean;\n};\n\nfunction Scene({ children }: Props) {\n  return <>{children}</>;\n}\n\nexport default function Example({\n  children,\n  optimizedRendering = false,\n}: Props) {\n  const room = React.useMemo(() => {\n    return new BoxLineGeometry(6, 6, 6, 10, 10, 10).translate(0, 3, 0);\n  }, []);\n\n  return (\n    <>\n      <Canvas legacy flat linear gl={{ alpha: false }}>\n        <XR>\n          <XrUi fontFamily=\"system-ui\" optimizedRendering={optimizedRendering}>\n            {/** Background, cameras, controls and lights */}\n            <color args={[\"#333333\"]} attach=\"background\" />\n            <lineSegments geometry={room}>\n              <lineBasicMaterial color=\"#c0c0c0\" />\n            </lineSegments>\n            <PerspectiveCamera makeDefault position={[0, 1.6, 0]} />\n            <OrbitControls makeDefault target={[0, 1, -1.8]} />\n            <ambientLight />\n            <Controllers />\n\n            <Scene>\n              <group position={[0, 1, -1.88]}>{children}</group>\n            </Scene>\n          </XrUi>\n        </XR>\n      </Canvas>\n      <XRButton\n        style={{\n          position: \"absolute\",\n          bottom: \"1em\",\n          color: \"black\",\n          left: \"50%\",\n          translate: \"-50%\",\n          padding: \"0.5em 1em\",\n          cursor: \"pointer\",\n        }}\n        mode=\"VR\"\n        sessionInit={{\n          optionalFeatures: [\n            \"local-floor\",\n            \"bounded-floor\",\n            \"hand-tracking\",\n            \"layers\",\n          ],\n        }}\n      >\n        Enter Immersive VR\n      </XRButton>\n    </>\n  );\n}\n","import React from \"react\";\n\ntype Props = {\n  pathname: string;\n};\n\nexport default function ViewCode({ pathname }: Props) {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"nofollow\"\n      href={`https://github.com/Enijar/react-xr-ui/tree/main/examples/examples/${pathname}.tsx`}\n      style={{\n        display: \"flex\",\n        gap: \"1ch\",\n        position: \"absolute\",\n        insetInlineEnd: \"1em\",\n        insetBlockStart: \"1em\",\n        blockSize: \"2em\",\n        alignItems: \"center\",\n        textDecoration: \"none\",\n        backgroundColor: \"#111111\",\n        paddingInline: \"1em\",\n        paddingBlock: \"0.5em\",\n        borderRadius: \"0.25em\",\n        cursor: \"pointer\",\n      }}\n    >\n      <span>View Code</span>\n      <svg\n        height=\"157.06\"\n        viewBox=\"0 0 161.03 157.06\"\n        width=\"161.03\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n          inlineSize: \"auto\",\n          blockSize: \"100%\",\n        }}\n      >\n        <g fill=\"currentColor\">\n          <path\n            d=\"m80.52 0c-44.47 0-80.52 36.05-80.52 80.52 0 35.57 23.07 65.76 55.06 76.4 4.02.75 5.5-1.75 5.5-3.87 0-1.92-.07-8.26-.11-14.99-22.4 4.87-27.13-9.5-27.13-9.5-3.66-9.31-8.94-11.78-8.94-11.78-7.31-5 .55-4.89.55-4.89 8.09.57 12.34 8.3 12.34 8.3 7.18 12.31 18.84 8.75 23.43 6.69.72-5.2 2.81-8.76 5.11-10.77-17.88-2.04-36.68-8.94-36.68-39.79 0-8.79 3.15-15.97 8.3-21.61-.84-2.03-3.59-10.22.78-21.31 0 0 6.76-2.16 22.15 8.25 6.42-1.78 13.31-2.68 20.15-2.71 6.84.03 13.74.93 20.17 2.71 15.37-10.42 22.12-8.25 22.12-8.25 4.38 11.09 1.63 19.28.79 21.31 5.16 5.64 8.29 12.82 8.29 21.61 0 30.93-18.84 37.73-36.77 39.73 2.89 2.5 5.46 7.4 5.46 14.91 0 10.77-.09 19.44-.09 22.1 0 2.14 1.45 4.65 5.53 3.86 31.97-10.66 55.02-40.83 55.02-76.39 0-44.48-36.05-80.53-80.51-80.53\"\n            fillRule=\"evenodd\"\n          />\n          <path d=\"m30.5 115.61c-.18.4-.81.52-1.38.25-.58-.26-.91-.81-.72-1.21.17-.41.8-.53 1.39-.25.59.26.92.81.72 1.22\" />\n          <path d=\"m33.76 119.24c-.38.36-1.13.19-1.64-.37-.53-.56-.63-1.31-.24-1.67.4-.35 1.12-.19 1.65.37.53.57.63 1.31.23 1.67z\" />\n          <path d=\"m36.93 123.88c-.49.34-1.3.02-1.8-.69-.49-.72-.49-1.57.01-1.92.5-.34 1.29-.03 1.8.68.49.73.49 1.59-.01 1.94\" />\n          <path d=\"m41.28 128.36c-.44.49-1.38.36-2.07-.31-.7-.65-.9-1.57-.46-2.06.45-.49 1.39-.35 2.09.31.7.65.91 1.58.44 2.06z\" />\n          <path d=\"m47.28 130.96c-.19.63-1.1.92-2.01.65-.91-.28-1.51-1.01-1.32-1.65.19-.63 1.1-.93 2.02-.65.91.27 1.51 1.01 1.32 1.65\" />\n          <path d=\"m53.87 131.44c.02.66-.75 1.21-1.71 1.23s-1.74-.52-1.75-1.17c0-.67.76-1.22 1.72-1.23.96-.02 1.74.51 1.74 1.17z\" />\n          <path d=\"m60 130.4c.11.65-.55 1.31-1.5 1.49-.93.17-1.8-.23-1.92-.87-.12-.66.56-1.33 1.49-1.5.95-.17 1.8.22 1.93.88z\" />\n        </g>\n      </svg>\n    </a>\n  );\n}\n","// Copied from https://github.com/geongeorge/Canvas-Txt/tree/44351f0bc2f06e630b6f40bd345f2e0843aa237a\n\ninterface JustifyLineProps {\n  ctx: CanvasRenderingContext2D;\n  line: string;\n  spaceWidth: number;\n  spaceChar: string;\n  width: number;\n}\n\nfunction justifyLine({ ctx, line, spaceWidth, spaceChar, width }: JustifyLineProps) {\n  const text = line.trim();\n  const words = text.split(/\\s+/);\n  const noOfWords = words.length - 1;\n\n  if (noOfWords === 0) return text;\n\n  // Width without spaces\n  const lineWidth = ctx.measureText(words.join(\"\")).width;\n\n  const noOfSpacesToInsert = (width - lineWidth) / spaceWidth;\n  const spacesPerWord = Math.floor(noOfSpacesToInsert / noOfWords);\n\n  if (noOfSpacesToInsert < 1) return text;\n\n  const spaces = spaceChar.repeat(spacesPerWord);\n\n  const justifiedText = words.join(spaces);\n\n  return justifiedText;\n}\n\nconst SPACE = \"\\u{200a}\";\n\ninterface SplitTextProps {\n  ctx: CanvasRenderingContext2D;\n  text: string;\n  justify: boolean;\n  width: number;\n}\n\nfunction splitText({ ctx, text, justify, width }: SplitTextProps): string[] {\n  const textMap = new Map<string, number>();\n\n  const measureText = (text: string): number => {\n    let width = textMap.get(text);\n    if (width !== undefined) {\n      return width;\n    }\n\n    width = ctx.measureText(text).width;\n    textMap.set(text, width);\n    return width;\n  };\n\n  let textArray: string[] = [];\n  let initialTextArray = text.split(\"\\n\");\n\n  const spaceWidth = justify ? measureText(SPACE) : 0;\n\n  let index = 0;\n  let averageSplitPoint = 0;\n  for (const singleLine of initialTextArray) {\n    let textWidth = measureText(singleLine);\n    const singleLineLength = singleLine.length;\n\n    if (textWidth <= width) {\n      textArray.push(singleLine);\n      continue;\n    }\n\n    let tempLine = singleLine;\n\n    let splitPoint;\n    let splitPointWidth;\n    let textToPrint = \"\";\n\n    while (textWidth > width) {\n      index++;\n      splitPoint = averageSplitPoint;\n      splitPointWidth = splitPoint === 0 ? 0 : measureText(singleLine.substring(0, splitPoint));\n\n      // if (splitPointWidth === width) Nailed\n      if (splitPointWidth < width) {\n        while (splitPointWidth < width && splitPoint < singleLineLength) {\n          splitPoint++;\n          splitPointWidth = measureText(tempLine.substring(0, splitPoint));\n          if (splitPoint === singleLineLength) break;\n        }\n      } else if (splitPointWidth > width) {\n        while (splitPointWidth > width) {\n          splitPoint = Math.max(1, splitPoint - 1);\n          splitPointWidth = measureText(tempLine.substring(0, splitPoint));\n          if (splitPoint === 0 || splitPoint === 1) break;\n        }\n      }\n\n      averageSplitPoint = Math.round(averageSplitPoint + (splitPoint - averageSplitPoint) / index);\n\n      // Remove last character that was out of the box\n      splitPoint--;\n\n      // Ensures a new line only happens at a space, and not amidst a word\n      if (splitPoint > 0) {\n        let tempSplitPoint = splitPoint;\n        if (tempLine.substring(tempSplitPoint, tempSplitPoint + 1) != \" \") {\n          while (tempLine.substring(tempSplitPoint, tempSplitPoint + 1) != \" \" && tempSplitPoint >= 0) {\n            tempSplitPoint--;\n          }\n          if (tempSplitPoint > 0) {\n            splitPoint = tempSplitPoint;\n          }\n        }\n      }\n\n      if (splitPoint === 0) {\n        splitPoint = 1;\n      }\n\n      // Finally sets text to print\n      textToPrint = tempLine.substring(0, splitPoint);\n\n      textToPrint = justify\n        ? justifyLine({\n            ctx,\n            line: textToPrint,\n            spaceWidth,\n            spaceChar: SPACE,\n            width,\n          })\n        : textToPrint;\n      textArray.push(textToPrint);\n      tempLine = tempLine.substring(splitPoint);\n      textWidth = measureText(tempLine);\n    }\n\n    if (textWidth > 0) {\n      textToPrint = justify\n        ? justifyLine({\n            ctx,\n            line: tempLine,\n            spaceWidth,\n            spaceChar: SPACE,\n            width,\n          })\n        : tempLine;\n\n      textArray.push(textToPrint);\n    }\n  }\n  return textArray;\n}\n\ninterface TextHeightProps {\n  ctx: CanvasRenderingContext2D;\n  text: string;\n  style: string;\n}\n\nfunction getTextHeight({ ctx, text, style }: TextHeightProps) {\n  const previousTextBaseline = ctx.textBaseline;\n  const previousFont = ctx.font;\n\n  ctx.textBaseline = \"bottom\";\n  ctx.font = style;\n  const { actualBoundingBoxAscent: height } = ctx.measureText(text);\n\n  // Reset baseline\n  ctx.textBaseline = previousTextBaseline;\n  ctx.font = previousFont;\n\n  return height;\n}\n\nexport type Align = \"left\" | \"center\" | \"right\";\nexport type VAlign = \"top\" | \"middle\" | \"bottom\";\n\nexport interface CanvasTextConfig {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  debug?: boolean;\n  align?: Align;\n  vAlign?: VAlign;\n  fontSize?: number;\n  fontWeight?: string;\n  fontStyle?: string;\n  fontVariant?: string;\n  font?: string;\n  lineHeight?: number;\n  justify?: boolean;\n}\n\nconst defaultConfig = {\n  debug: false,\n  align: \"center\",\n  vAlign: \"middle\",\n  fontSize: 14,\n  fontWeight: \"\",\n  fontStyle: \"\",\n  fontVariant: \"\",\n  font: \"Arial\",\n  // @ts-ignore\n  lineHeight: null,\n  justify: false,\n};\n\nfunction drawText(ctx: CanvasRenderingContext2D, myText: string, inputConfig: CanvasTextConfig) {\n  const { width, height, x, y } = inputConfig;\n  const config = { ...defaultConfig, ...inputConfig };\n\n  if (width <= 0 || height <= 0 || config.fontSize <= 0) {\n    //width or height or font size cannot be 0\n    return { height: 0 };\n  }\n\n  // End points\n  const xEnd = x + width;\n  const yEnd = y + height;\n\n  const { fontStyle, fontVariant, fontWeight, fontSize, font } = config;\n  const style = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}px ${font}`;\n  ctx.font = style;\n\n  let txtY = y + height / 2 + config.fontSize / 2;\n\n  let textAnchor: number;\n\n  if (config.align === \"right\") {\n    textAnchor = xEnd;\n    ctx.textAlign = \"right\";\n  } else if (config.align === \"left\") {\n    textAnchor = x;\n    ctx.textAlign = \"left\";\n  } else {\n    textAnchor = x + width / 2;\n    ctx.textAlign = \"center\";\n  }\n\n  const textArray = splitText({\n    ctx,\n    text: myText,\n    justify: config.justify,\n    width,\n  });\n\n  const charHeight = config.lineHeight ? config.lineHeight : getTextHeight({ ctx, text: \"M\", style });\n  const vHeight = charHeight * (textArray.length - 1);\n  const negOffset = vHeight / 2;\n\n  let debugY = y;\n  // Vertical Align\n  if (config.vAlign === \"top\") {\n    ctx.textBaseline = \"top\";\n    txtY = y;\n  } else if (config.vAlign === \"bottom\") {\n    ctx.textBaseline = \"bottom\";\n    txtY = yEnd - vHeight;\n    debugY = yEnd;\n  } else {\n    //defaults to center\n    ctx.textBaseline = \"bottom\";\n    debugY = y + height / 2;\n    txtY -= negOffset;\n  }\n  //print all lines of text\n  textArray.forEach((txtline) => {\n    // txtline = txtline.trim();\n    ctx.fillText(txtline, textAnchor, txtY);\n    txtY += charHeight;\n  });\n\n  if (config.debug) {\n    // Text box\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#0C8CE9\";\n    ctx.strokeRect(x, y, width, height);\n\n    ctx.lineWidth = 1;\n    // Horizontal Center\n    ctx.strokeStyle = \"#0C8CE9\";\n    ctx.beginPath();\n    ctx.moveTo(textAnchor, y);\n    ctx.lineTo(textAnchor, yEnd);\n    ctx.stroke();\n    // Vertical Center\n    ctx.strokeStyle = \"#0C8CE9\";\n    ctx.beginPath();\n    ctx.moveTo(x, debugY);\n    ctx.lineTo(xEnd, debugY);\n    ctx.stroke();\n  }\n\n  const TEXT_HEIGHT = vHeight + charHeight;\n\n  return { height: TEXT_HEIGHT };\n}\n\nexport { drawText, splitText, getTextHeight };\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { drawText } from \"../services/text\";\nimport { useFrame } from \"@react-three/fiber\";\nimport layout from \"../services/layout\";\nimport { Attrs, LayerContextType, LayerProps, LayerRef, ValueArray } from \"../types\";\nimport { XrUiContext } from \"./xr-ui\";\n\nconst LayerContext = React.createContext<LayerContextType>({\n  parentUuid: null,\n  parentSize: { width: 1, height: 1 },\n  currentChildren: [],\n  renderOrder: 0,\n  addChild() {},\n  removeChild() {},\n});\n\nconst DEFAULT_BACKGROUND_POSITION: LayerProps[\"backgroundPosition\"] = [0, 0];\n\nconst CACHED_IMAGES = new Map<string, HTMLImageElement>();\n\nfunction Layer({ optimizedRendering, zIndex = 0, resolution, visible = true, autoLayout = true, premultiplyAlpha, depthTest, depthWrite = false, width, height, aspectRatio, opacity = 1, backgroundColor = \"transparent\", backgroundImage, backgroundSize, backgroundPosition = DEFAULT_BACKGROUND_POSITION, alphaTest = 0, padding = 0, borderRadius = 0, borderWidth = 0, borderColor = \"transparent\", flexDirection = \"row\", alignItems = \"center\", justifyContent = \"center\", gap = 0, textContent, textAlign = \"left\", justifyText = false, verticalAlign = \"top\", color = \"white\", fontFamily, fontSize = \"16px\", fontWeight = \"normal\", lineHeight = null, childIndex, children, onPointerMove, onPointerOver, onPointerOut, onPointerDown, onPointerUp, imageRendering = \"crisp-edges\", imageSmoothingEnabled = true, textRendering = \"auto\", dpr, onLayout, ...props }: LayerProps, ref: React.ForwardedRef<LayerRef>) {\n  const shouldRenderRef = React.useRef(true);\n\n  const [attrs, setAttrs] = React.useState<Attrs>(() => {\n    return {\n      opacity,\n      backgroundColor,\n    };\n  });\n\n  React.useEffect(() => {\n    setAttrs((attrs) => {\n      return { ...attrs, opacity };\n    });\n  }, [opacity]);\n\n  React.useEffect(() => {\n    setAttrs((attrs) => {\n      return { ...attrs, backgroundColor };\n    });\n  }, [backgroundColor]);\n\n  const xrUiContext = React.useContext(XrUiContext);\n\n  const res = React.useMemo(() => {\n    return resolution ?? xrUiContext.layerResolution;\n  }, [resolution, xrUiContext.layerResolution]);\n\n  const font = React.useMemo(() => {\n    return fontFamily ?? xrUiContext.fontFamily;\n  }, [fontFamily, xrUiContext.fontFamily]);\n\n  const optimized = React.useMemo(() => {\n    return optimizedRendering ?? xrUiContext.optimizedRendering;\n  }, [optimizedRendering, xrUiContext.optimizedRendering]);\n\n  const groupRef = React.useRef<THREE.Group>(null);\n  const meshRef = React.useRef<THREE.Mesh<THREE.PlaneGeometry, THREE.MeshBasicMaterial>>(null);\n  const materialRef = React.useRef<THREE.MeshBasicMaterial>(null);\n  const childrenGroupRef = React.useRef<THREE.Group>(null);\n\n  React.useEffect(() => {\n    const material = materialRef.current;\n    if (material === null) return;\n    material.blending = THREE.CustomBlending;\n  }, []);\n\n  React.useImperativeHandle(ref, (): LayerRef => {\n    return {\n      group: groupRef.current,\n      mesh: meshRef.current,\n      material: materialRef.current,\n      setAttrs: setAttrs,\n    };\n  });\n\n  const layerContext = React.useContext(LayerContext);\n\n  const size = React.useMemo<{ width: number; height: number }>(() => {\n    const size: { width: number; height: number } = { width: 1, height: 1 };\n    if (typeof width === \"string\") {\n      const percent = parseFloat(width);\n      if (layerContext.parentUuid === null) {\n        size.width = percent / 100;\n      } else if (isNaN(percent)) {\n        size.width = 1;\n      } else {\n        size.width = layerContext.parentSize.width * (percent / 100);\n      }\n    } else {\n      size.width = width ?? 1;\n    }\n    if (typeof height === \"string\") {\n      const percent = parseFloat(height);\n      if (layerContext.parentUuid === null) {\n        size.height = percent / 100;\n      } else if (isNaN(percent)) {\n        size.height = 1;\n      } else {\n        size.height = layerContext.parentSize.height * (percent / 100);\n      }\n    } else {\n      size.height = height ?? 1;\n    }\n    if (aspectRatio !== undefined) {\n      if (width === undefined) {\n        size.width = size.height * aspectRatio;\n      }\n      if (height === undefined) {\n        size.height = size.width * aspectRatio;\n      }\n    }\n    return size;\n  }, [width, height, layerContext.parentUuid, layerContext.parentSize, aspectRatio]);\n\n  const uuid = React.useMemo(() => {\n    return THREE.MathUtils.generateUUID();\n  }, []);\n\n  React.useEffect(() => {\n    if (layerContext.parentUuid === null) return;\n    layerContext.addChild({\n      width: size.width,\n      height: size.height,\n      index: childIndex,\n      autoLayout,\n      uuid,\n    });\n    return () => {\n      layerContext.removeChild(uuid);\n    };\n  }, [size, childIndex, autoLayout, layerContext.parentUuid]);\n\n  const pointerRefs = React.useRef({\n    onPointerMove,\n    onPointerOver,\n    onPointerOut,\n    onPointerDown,\n    onPointerUp,\n  });\n\n  React.useMemo(() => {\n    pointerRefs.current.onPointerMove = onPointerMove;\n    pointerRefs.current.onPointerOver = onPointerOver;\n    pointerRefs.current.onPointerOut = onPointerOut;\n    pointerRefs.current.onPointerDown = onPointerDown;\n    pointerRefs.current.onPointerUp = onPointerUp;\n  }, [onPointerMove, onPointerOver, onPointerOut, onPointerDown, onPointerUp]);\n\n  const layoutOnly = React.useMemo<boolean>(() => {\n    const props = [attrs.backgroundColor === \"transparent\" ? undefined : attrs.backgroundColor, backgroundImage, borderColor === \"transparent\" ? undefined : borderColor, textContent];\n    return props.filter((prop) => prop !== undefined).length === 0;\n  }, [attrs.backgroundColor, backgroundImage, borderColor, textContent]);\n\n  // Create 2d canvas context\n  const ctx = React.useMemo<CanvasRenderingContext2D | null>(() => {\n    if (layoutOnly) {\n      return null;\n    }\n    const canvas = document.createElement(\"canvas\");\n    return canvas.getContext(\"2d\");\n  }, [layoutOnly]);\n\n  React.useEffect(() => {\n    if (ctx === null) return;\n    ctx.imageSmoothingEnabled = imageSmoothingEnabled;\n    ctx.canvas.style.imageRendering = imageRendering;\n  }, [ctx, imageRendering, imageSmoothingEnabled]);\n\n  React.useEffect(() => {\n    if (ctx === null) return;\n    // @ts-ignore\n    ctx.textRendering = textRendering;\n    ctx.canvas.style.textRendering = textRendering;\n  }, [ctx, textRendering]);\n\n  React.useMemo(() => {\n    if (ctx === null) return;\n    const s = dpr ?? window.devicePixelRatio ?? 1;\n    ctx.scale(s, s);\n  }, [ctx, dpr]);\n\n  // Set canvas size\n  React.useMemo(() => {\n    if (ctx === null) return;\n    ctx.canvas.width = Math.max(1, Math.floor(size.width * res));\n    ctx.canvas.height = Math.max(1, Math.floor(size.height * res));\n  }, [ctx, size, res]);\n\n  // Create canvas texture with the newly created canvas;\n  // this will be used as the texture for the plane\n  const canvasTexture = React.useMemo(() => {\n    if (ctx === null) {\n      return null;\n    }\n    const canvasTexture = new THREE.CanvasTexture(ctx.canvas);\n    canvasTexture.anisotropy = 16;\n    canvasTexture.premultiplyAlpha = true;\n    return canvasTexture;\n  }, [ctx, size]);\n\n  React.useEffect(() => {\n    if (canvasTexture === null) return;\n    canvasTexture.premultiplyAlpha = premultiplyAlpha ?? xrUiContext.premultiplyAlpha;\n  }, [canvasTexture, premultiplyAlpha, xrUiContext.premultiplyAlpha]);\n\n  const images = React.useMemo(() => {\n    const backgroundImage = new Image();\n    backgroundImage.crossOrigin = \"Anonymous\";\n    return { backgroundImage };\n  }, []);\n\n  const [shouldRenderKey, setShouldRenderKey] = React.useState(0);\n\n  const mountedRef = React.useRef(false);\n\n  React.useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  // Set source for background image\n  React.useMemo(() => {\n    if (!backgroundImage) return;\n    if (!CACHED_IMAGES.has(backgroundImage)) {\n      const image = new Image();\n      image.crossOrigin = \"Anonymous\";\n      image.onload = () => {\n        if (!mountedRef.current) return;\n        setShouldRenderKey((shouldRenderKey) => {\n          return (shouldRenderKey + 1) % 1000;\n        });\n      };\n      image.src = backgroundImage;\n      CACHED_IMAGES.set(backgroundImage, image);\n    }\n    images.backgroundImage = CACHED_IMAGES.get(backgroundImage);\n  }, [images.backgroundImage, backgroundImage]);\n\n  const [currentChildren, setCurrentChildren] = React.useState<LayerContextType[\"currentChildren\"]>([]);\n\n  // Only render once if in optimizedRendering mode, else render @ 60FPS\n  React.useEffect(() => {\n    shouldRenderRef.current = true;\n    const frames: number[] = [];\n    frames.push(\n      requestAnimationFrame(() => {\n        frames.push(\n          requestAnimationFrame(() => {\n            shouldRenderRef.current = !optimized;\n          }),\n        );\n      }),\n    );\n    return () => {\n      frames.forEach((frame) => {\n        cancelAnimationFrame(frame);\n      });\n    };\n  }, [shouldRenderKey, currentChildren, optimized, ctx, size, res, borderRadius, borderColor, attrs, images, backgroundPosition, backgroundSize, font, fontSize, lineHeight, textAlign, verticalAlign, justifyText, fontWeight, color, textContent]);\n\n  useFrame(() => {\n    if (shouldRenderRef.current && ctx !== null) {\n      // Useful vars\n      const w = ctx.canvas.width;\n      const h = ctx.canvas.height;\n      const d2r = Math.PI / 180; // degrees to radians\n      const res = Math.min(w, h);\n      const { mapLinear } = THREE.MathUtils;\n\n      ctx.globalCompositeOperation = \"source-over\";\n\n      ctx.clearRect(0, 0, w, h);\n\n      // Border radius\n      {\n        const isArray = Array.isArray(borderRadius);\n        const array = borderRadius as ValueArray;\n        const number = borderRadius as number;\n        let [tl = 0, tr = 0, br = 0, bl = 0] = isArray ? array : [number, number, number, number];\n        tl *= res;\n        tr *= res;\n        br *= res;\n        bl *= res;\n        ctx.beginPath();\n        ctx.moveTo(tl, 0);\n        ctx.lineTo(w - tr, 0);\n        ctx.arc(w - tr, tr, tr, d2r * 270, d2r * 360);\n        ctx.lineTo(w, h - br);\n        ctx.arc(w - br, h - br, br, 0, d2r * 90);\n        ctx.lineTo(bl, h);\n        ctx.arc(bl, h - bl, bl, d2r * 90, d2r * 180);\n        ctx.lineTo(0, tl);\n        ctx.arc(tl, tl, tl, d2r * 180, d2r * 270);\n        ctx.closePath();\n      }\n\n      ctx.globalAlpha = attrs.opacity;\n\n      // Background color\n      ctx.fillStyle = attrs.backgroundColor;\n      ctx.lineWidth = borderWidth * res * 2;\n      ctx.fill();\n\n      const ox = borderWidth * res;\n      const oy = borderWidth * res;\n\n      // Background image\n      if (backgroundImage !== undefined) {\n        const x = backgroundPosition[0];\n        const y = backgroundPosition[1];\n        const sx = 0;\n        const sy = 0;\n        const sw = Math.max(1, images.backgroundImage.width);\n        const sh = Math.max(1, images.backgroundImage.height);\n        const ir = sw / sh;\n        const cr = w / h;\n        let dw = sw;\n        let dh = sh;\n        switch (backgroundSize) {\n          case \"stretch\":\n            dw = w;\n            dh = h;\n            break;\n          case \"contain\":\n            dw = w - ox * 2;\n            dh = h - oy * 2;\n            if (ir >= cr) {\n              dh = dw / ir;\n            } else {\n              dw = dh * ir;\n            }\n            break;\n          case \"cover\":\n            dw = w - ox * 2;\n            dh = h - oy * 2;\n            if (ir <= cr) {\n              dh = dw / ir;\n            } else {\n              dw = dh * ir;\n            }\n            break;\n        }\n        const dx = ox + mapLinear(x, 0, 1, 0, w - ox * 2 - dw);\n        const dy = oy + mapLinear(y, 0, 1, 0, h - oy * 2 - dh);\n        ctx.save();\n        ctx.clip();\n        ctx.drawImage(images.backgroundImage, sx, sy, sw, sh, dx, dy, dw, dh);\n        ctx.restore();\n      }\n\n      // Typography\n      if (textContent !== undefined) {\n        // canvasTxt.font = font;\n        let actualFontSize = 0;\n        if (typeof fontSize === \"string\") {\n          let px = parseFloat(fontSize);\n          if (isNaN(px)) {\n            px = 16;\n          }\n          actualFontSize = px;\n        } else {\n          actualFontSize = fontSize * Math.min(w, h);\n        }\n        ctx.textBaseline = \"bottom\";\n        ctx.fillStyle = color;\n        drawText(ctx, textContent, {\n          x: ox,\n          y: oy,\n          width: w - ox * 2,\n          height: h - oy * 2,\n          font: font,\n          fontSize: actualFontSize,\n          lineHeight: lineHeight * actualFontSize,\n          align: textAlign,\n          vAlign: verticalAlign,\n          justify: justifyText,\n          fontWeight: fontWeight,\n        });\n      }\n\n      // Fixes antialiasing issue\n      ctx.globalCompositeOperation = \"destination-out\";\n      ctx.stroke();\n      ctx.globalCompositeOperation = \"source-over\";\n      ctx.save();\n      ctx.clip();\n\n      ctx.strokeStyle = borderColor;\n      // Border\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    if (canvasTexture !== null) {\n      // Make sure canvas texture gets updated\n      canvasTexture.needsUpdate = true;\n    }\n  });\n\n  const childGroupRefs = React.useMemo(() => {\n    return currentChildren.map(() => React.createRef<THREE.Group>());\n  }, [currentChildren]);\n\n  const onLayoutRef = React.useRef(onLayout);\n  React.useMemo(() => {\n    onLayoutRef.current = onLayout;\n  }, [onLayout]);\n\n  // Layout calculations\n  React.useEffect(() => {\n    const newSize = { ...size };\n    const res = Math.min(newSize.width, newSize.height);\n    const paddingX = Array.isArray(padding) ? (padding[1] ?? 0) + (padding[3] ?? 0) : padding;\n    const paddingY = Array.isArray(padding) ? (padding[0] ?? 0) + (padding[2] ?? 0) : padding;\n    newSize.width -= res * borderWidth * 2;\n    newSize.height -= res * borderWidth * 2;\n    newSize.width -= res * paddingX * 2;\n    newSize.height -= res * paddingY * 2;\n    childGroupRefs.forEach((childGroupRef, index) => {\n      const childGroup = childGroupRef.current;\n      if (childGroup === null) return;\n      let [x, y] = layout({\n        currentChildren,\n        index,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        gap,\n        size: newSize,\n      });\n      if (!currentChildren[index].autoLayout) {\n        x = 0;\n        y = 0;\n      }\n      childGroup.position.x = x;\n      childGroup.position.y = y;\n    });\n    if (onLayoutRef.current) {\n      onLayoutRef.current();\n    }\n  }, [childGroupRefs, currentChildren, size, flexDirection, alignItems, justifyContent, borderWidth, padding, gap]);\n\n  const renderOrder = React.useMemo(() => {\n    if (layerContext.parentUuid === null) {\n      return zIndex;\n    }\n    return layerContext.renderOrder + zIndex + 1;\n  }, [layerContext.parentUuid, layerContext.renderOrder, zIndex]);\n\n  const alpha = React.useMemo(() => {\n    return xrUiContext.alphaTest ?? alphaTest;\n  }, [xrUiContext.alphaTest, alphaTest]);\n\n  const layerProviderValue = React.useMemo<LayerContextType>(() => {\n    return {\n      currentChildren,\n      parentSize: size,\n      parentUuid: uuid,\n      renderOrder,\n      addChild(child) {\n        setCurrentChildren((currentChildren) => {\n          const nextCurrentChildren = [...currentChildren];\n          const index = currentChildren.findIndex((value) => {\n            return value.uuid === child.uuid;\n          });\n          if (index === -1) {\n            nextCurrentChildren.push({ ...child });\n          } else {\n            nextCurrentChildren[index] = { ...child };\n          }\n          return nextCurrentChildren.sort((a, b) => {\n            return a.index - b.index;\n          });\n        });\n      },\n      removeChild(uuid) {\n        setCurrentChildren((currentChildren) => {\n          return currentChildren.filter((value) => value.uuid !== uuid);\n        });\n      },\n    };\n  }, [currentChildren, uuid, size, renderOrder]);\n\n  React.useEffect(() => {\n    const childrenGroup = childrenGroupRef.current;\n    if (childrenGroup === null) return;\n    childrenGroup.traverse((object) => {\n      if (object instanceof THREE.Mesh && object.material instanceof THREE.Material) {\n        object.material.transparent = true;\n        object.material.opacity = attrs.opacity;\n        object.material.needsUpdate = true;\n      }\n    });\n  }, [attrs.opacity]);\n\n  React.useEffect(() => {\n    return () => {\n      if (ctx === null) return;\n      ctx.canvas.width = 0;\n      ctx.canvas.height = 0;\n    };\n  }, [ctx]);\n\n  const childs = React.useMemo(() => {\n    if (Array.isArray(children)) {\n      return children.filter((child) => React.isValidElement(child));\n    }\n    return React.isValidElement(children) ? children : [];\n  }, [children]);\n\n  return (\n    <LayerContext.Provider value={layerProviderValue}>\n      <group ref={groupRef} {...props} visible={visible} name=\"react-xr-ui-layer\">\n        <mesh ref={meshRef} renderOrder={renderOrder + zIndex} visible={canvasTexture !== null}>\n          <planeGeometry args={[size.width, size.height]} />\n          <meshBasicMaterial ref={materialRef} side={THREE.FrontSide} opacity={attrs.opacity} transparent={true} depthTest={depthTest ?? xrUiContext.depthTest} depthWrite={depthWrite} alphaTest={alpha} map={canvasTexture ?? undefined} />\n        </mesh>\n        <group renderOrder={renderOrder + zIndex + 1} ref={childrenGroupRef}>\n          {React.Children.map(childs, (child, childIndex) => {\n            return (\n              <group key={childIndex} ref={childGroupRefs[childIndex]}>\n                {React.cloneElement(child, { ...child.props, childIndex })}\n              </group>\n            );\n          })}\n        </group>\n      </group>\n    </LayerContext.Provider>\n  );\n}\n\nexport default React.forwardRef(Layer);\n","import { Child, LayerProps, Size } from \"../types\";\n\ntype Axis = \"width\" | \"height\";\n\ntype Args = {\n  currentChildren: Child[];\n  index: number;\n  flexDirection: LayerProps[\"flexDirection\"];\n  alignItems: LayerProps[\"alignItems\"];\n  justifyContent: LayerProps[\"justifyContent\"];\n  gap: LayerProps[\"gap\"];\n  size: Size;\n};\n\nexport default function layout({\n  currentChildren,\n  index,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  gap,\n  size,\n}: Args): [x: number, y: number] {\n  const childrenWidth = currentChildren.reduce((width, child) => {\n    if (!child.autoLayout) return width;\n    return width + child.width;\n  }, 0);\n  const childrenHeight = currentChildren.reduce((height, child) => {\n    if (!child.autoLayout) return height;\n    return height + child.height;\n  }, 0);\n  let x = 0;\n  let y = 0;\n  let contentSize = childrenWidth;\n  let axis: Axis = \"width\";\n  let oppositeAxis: Axis = \"height\";\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    axis = \"height\";\n    oppositeAxis = \"width\";\n    contentSize = childrenHeight;\n  }\n  if (\n    currentChildren.length > 0 &&\n    ![\"space-between\", \"space-around\"].includes(justifyContent)\n  ) {\n    contentSize += gap * (currentChildren.length - 1);\n  }\n\n  if ([\"space-between\", \"space-around\"].includes(justifyContent)) {\n    gap = 0;\n  }\n\n  const isReverse = [\"row-reverse\", \"column-reverse\"].includes(flexDirection);\n  const isColumn = [\"column\", \"column-reverse\"].includes(flexDirection);\n\n  let dir = 1;\n  if (isColumn) {\n    dir = -1;\n  }\n\n  /**\n   * justifyContent\n   */\n  switch (justifyContent) {\n    case \"start\":\n      x =\n        ((size[axis] - currentChildren[index][axis]) * 0.5 -\n          (size[axis] - contentSize)) *\n        dir;\n      break;\n    case \"end\":\n      x = (size[axis] * 0.5 - currentChildren[index][axis] * 0.5) * dir;\n      break;\n    case \"center\":\n      x = (contentSize * 0.5 - currentChildren[index][axis] * 0.5) * dir;\n      break;\n    case \"space-between\":\n      if (currentChildren.length > 1) {\n        x = (size[axis] * 0.5 - currentChildren[index][axis] * 0.5) * dir;\n      }\n      break;\n    case \"space-around\":\n      if (currentChildren.length > 1) {\n        x = (size[axis] * 0.5 - currentChildren[index][axis] * 0.5) * dir;\n      }\n      break;\n  }\n\n  let spacing = 0;\n  if (currentChildren.length > 1) {\n    if (justifyContent === \"space-between\") {\n      spacing =\n        Math.max(0, size[axis] - contentSize) /\n        Math.max(1, currentChildren.length - 1);\n    }\n    if (justifyContent === \"space-around\") {\n      spacing =\n        Math.max(0, size[axis] - contentSize) /\n        Math.max(1, currentChildren.length + 1);\n    }\n  }\n\n  if (justifyContent === \"space-around\") {\n    x -= spacing * dir;\n  }\n\n  if (isReverse) {\n    for (let i = 1; i <= index; i++) {\n      const child = currentChildren[i - 1];\n      if (!child.autoLayout) continue;\n      x -= (child[axis] + spacing + gap) * dir;\n    }\n  } else {\n    for (let i = currentChildren.length - 2; i >= index; i--) {\n      const child = currentChildren[i + 1];\n      if (!child.autoLayout) continue;\n      x -= (currentChildren[i + 1][axis] + spacing + gap) * dir;\n    }\n  }\n\n  /**\n   * alignItems\n   */\n  switch (alignItems) {\n    case \"start\":\n      y =\n        (size[oppositeAxis] * 0.5 -\n          currentChildren[index][oppositeAxis] * 0.5) *\n        dir;\n      break;\n    case \"end\":\n      y =\n        (currentChildren[index][oppositeAxis] * 0.5 -\n          size[oppositeAxis] * 0.5) *\n        dir;\n      break;\n    case \"center\":\n      y = 0;\n      break;\n  }\n\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    return [y, x];\n  }\n  return [x, y];\n}\n","import React from \"react\";\nimport { XrUiContextType } from \"../types\";\n\nexport const XrUiContext = React.createContext<XrUiContextType>({\n  layerResolution: 1024,\n  fontFamily: \"system-ui, sans-serif\",\n  optimizedRendering: false,\n  alphaTest: 0,\n  depthTest: true,\n  premultiplyAlpha: true,\n});\n\ntype Props = {\n  children?: React.ReactNode;\n  layerResolution?: XrUiContextType[\"layerResolution\"];\n  fontFamily?: XrUiContextType[\"fontFamily\"];\n  optimizedRendering?: XrUiContextType[\"optimizedRendering\"];\n  alphaTest?: XrUiContextType[\"alphaTest\"];\n  depthTest?: XrUiContextType[\"depthTest\"];\n  premultiplyAlpha?: XrUiContextType[\"premultiplyAlpha\"];\n};\n\nexport default function XrUi({\n  children,\n  layerResolution = 1024,\n  fontFamily,\n  optimizedRendering = false,\n  alphaTest,\n  depthTest = true,\n  premultiplyAlpha = false,\n}: Props) {\n  return (\n    <XrUiContext.Provider\n      value={{\n        layerResolution,\n        fontFamily,\n        optimizedRendering,\n        alphaTest,\n        depthTest,\n        premultiplyAlpha,\n      }}\n    >\n      {children}\n    </XrUiContext.Provider>\n  );\n}\n"],"names":["Scene","_ref","children","React","Example","_ref2","optimizedRendering","room","BoxLineGeometry","translate","Canvas","legacy","flat","linear","gl","alpha","XR","XrUi","fontFamily","args","attach","geometry","color","PerspectiveCamera","makeDefault","position","OrbitControls","target","Controllers","XRButton","style","bottom","left","padding","cursor","mode","sessionInit","optionalFeatures","ViewCode","pathname","rel","href","display","gap","insetInlineEnd","insetBlockStart","blockSize","alignItems","textDecoration","backgroundColor","paddingInline","paddingBlock","borderRadius","height","viewBox","width","xmlns","inlineSize","fill","d","fillRule","justifyLine","ctx","line","spaceWidth","spaceChar","text","trim","words","split","noOfWords","length","noOfSpacesToInsert","measureText","join","spacesPerWord","Math","floor","spaces","repeat","SPACE","defaultConfig","debug","align","vAlign","fontSize","fontWeight","fontStyle","fontVariant","font","lineHeight","justify","LayerContext","parentUuid","parentSize","currentChildren","renderOrder","addChild","removeChild","DEFAULT_BACKGROUND_POSITION","CACHED_IMAGES","Map","Layer","ref","zIndex","resolution","visible","autoLayout","premultiplyAlpha","depthTest","depthWrite","aspectRatio","opacity","backgroundImage","backgroundSize","backgroundPosition","alphaTest","borderWidth","borderColor","flexDirection","justifyContent","textContent","textAlign","justifyText","verticalAlign","childIndex","onPointerMove","onPointerOver","onPointerOut","onPointerDown","onPointerUp","imageRendering","imageSmoothingEnabled","textRendering","dpr","onLayout","props","shouldRenderRef","attrs","setAttrs","xrUiContext","XrUiContext","res","layerResolution","optimized","groupRef","meshRef","materialRef","childrenGroupRef","material","current","blending","THREE","group","mesh","layerContext","size","percent","parseFloat","isNaN","undefined","uuid","generateUUID","index","pointerRefs","layoutOnly","filter","prop","document","createElement","getContext","canvas","s","window","devicePixelRatio","scale","max","canvasTexture","anisotropy","images","Image","crossOrigin","shouldRenderKey","setShouldRenderKey","mountedRef","has","image","onload","src","set","get","setCurrentChildren","frames","push","requestAnimationFrame","forEach","frame","cancelAnimationFrame","useFrame","w","h","d2r","PI","min","mapLinear","globalCompositeOperation","clearRect","isArray","Array","array","number","tl","tr","br","bl","beginPath","moveTo","lineTo","arc","closePath","globalAlpha","fillStyle","lineWidth","ox","oy","x","y","sx","sy","sw","sh","ir","cr","dw","dh","dx","dy","save","clip","drawImage","restore","actualFontSize","px","textBaseline","myText","inputConfig","config","xEnd","yEnd","textAnchor","txtY","textArray","textMap","initialTextArray","averageSplitPoint","singleLine","textWidth","singleLineLength","splitPoint","splitPointWidth","tempLine","textToPrint","substring","round","tempSplitPoint","splitText","charHeight","_ref3","previousTextBaseline","previousFont","actualBoundingBoxAscent","getTextHeight","vHeight","negOffset","debugY","txtline","fillText","strokeStyle","strokeRect","stroke","drawText","needsUpdate","childGroupRefs","map","onLayoutRef","newSize","paddingX","paddingY","childGroupRef","childGroup","childrenWidth","reduce","child","childrenHeight","contentSize","axis","oppositeAxis","includes","isReverse","dir","spacing","i","layout","layerProviderValue","nextCurrentChildren","findIndex","value","sort","a","b","childrenGroup","traverse","object","transparent","childs","Provider","_extends","name","side","key"],"sourceRoot":""}