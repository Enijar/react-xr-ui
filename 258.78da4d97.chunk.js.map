{"version":3,"file":"258.78da4d97.chunk.js","mappings":"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","sources":["webpack://@app/client/./src/components/example.tsx","webpack://@app/client/./src/examples/layout.tsx","webpack://@app/client/./src/lib/hooks/use-render-order.tsx","webpack://@app/client/./src/lib/components/layer.tsx","webpack://@app/client/./src/lib/services/layout.ts"],"sourcesContent":["import React from \"react\";\nimport { BoxLineGeometry } from \"three/examples/jsm/geometries/BoxLineGeometry\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport default function Example({ children }: Props) {\n  const room = React.useMemo(() => {\n    return new BoxLineGeometry(6, 6, 6, 10, 10, 10).translate(0, 3, 0);\n  }, []);\n\n  return (\n    <Canvas legacy flat linear>\n      {/** Cameras, controls and lights */}\n      <PerspectiveCamera makeDefault position={[0, 1.6, 0]} />\n      <OrbitControls makeDefault target={[0, 1, -1.8]} />\n      <ambientLight />\n\n      <lineSegments geometry={room}>\n        <lineBasicMaterial color=\"#c0c0c0\" />\n      </lineSegments>\n\n      <group position={[0, 1, -1.88]}>{children}</group>\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport Example from \"@/components/example\";\nimport Layer from \"@/lib/components/layer\";\nimport { LayerProps } from \"@/lib/types\";\n\nexport default function Layout() {\n  const [flexDirection, setFlexDirection] =\n    React.useState<LayerProps[\"flexDirection\"]>(\"row\");\n\n  return (\n    <Example>\n      <Layer\n        width={0.25}\n        height={0.1}\n        position-y={0.6}\n        justifyContent=\"space-between\"\n      >\n        <Layer\n          width={0.1}\n          height={0.1}\n          onClick={() => setFlexDirection(\"row\")}\n          backgroundColor=\"white\"\n        />\n        <Layer\n          width={0.1}\n          height={0.1}\n          onClick={() => setFlexDirection(\"column\")}\n          backgroundColor=\"black\"\n        />\n      </Layer>\n      <Layer\n        width={1}\n        height={1}\n        borderWidth={0.025}\n        borderColor=\"#222222\"\n        borderRadius={0.05}\n        backgroundColor=\"#444444\"\n        flexDirection={flexDirection}\n        alignItems=\"center\"\n        justifyContent=\"space-around\"\n      >\n        <Layer width={0.25} height={0.25} backgroundColor=\"red\" />\n        <Layer width={0.25} height={0.25} backgroundColor=\"green\" />\n        <Layer width={0.25} height={0.25} backgroundColor=\"lightblue\" />\n      </Layer>\n    </Example>\n  );\n}\n","import React from \"react\";\n\nlet lastRenderOrder = -1;\n\nexport default function useRenderOrder() {\n  return React.useMemo(() => {\n    return ++lastRenderOrder;\n  }, []);\n}\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport useRenderOrder from \"@/lib/hooks/use-render-order\";\nimport layout from \"@/lib/services/layout\";\nimport { BorderArray, LayerContextType, LayerProps } from \"@/lib/types\";\n\nconst LayerContext = React.createContext<LayerContextType>({\n  currentChildren: [],\n  addChild() {},\n  removeChild() {},\n});\n\nconst DEFAULT_BACKGROUND_POSITION: LayerProps[\"backgroundPosition\"] = [0, 0];\n\nexport default function Layer({\n  zIndex = 0,\n  resolution = 2048,\n  visible = true,\n  autoLayout = true,\n  width = 1,\n  height = 1,\n  opacity = 1,\n  backgroundColor = \"transparent\",\n  backgroundImage,\n  backgroundSize,\n  backgroundPosition = DEFAULT_BACKGROUND_POSITION,\n  borderRadius = 0,\n  borderWidth = 0,\n  borderColor = \"transparent\",\n  flexDirection = \"row\",\n  alignItems = \"center\",\n  justifyContent = \"center\",\n  gap = 0,\n  childIndex,\n  children,\n  ...props\n}: LayerProps) {\n  const renderOrder = useRenderOrder();\n\n  const gl = useThree((state) => state.gl);\n\n  const materialRef = React.useRef<THREE.MeshBasicMaterial>(null);\n  const childrenGroupRef = React.useRef<THREE.Group>(null);\n\n  const layerContext = React.useContext(LayerContext);\n\n  const uuid = React.useMemo(() => {\n    return THREE.MathUtils.generateUUID();\n  }, []);\n\n  React.useEffect(() => {\n    if (childIndex === undefined) return;\n    layerContext.addChild({ width, height, index: childIndex, uuid });\n    return () => {\n      layerContext.removeChild(uuid);\n    };\n  }, [width, height, childIndex, uuid]);\n\n  // Create 2d canvas context\n  const ctx = React.useMemo<CanvasRenderingContext2D>(() => {\n    const canvas = document.createElement(\"canvas\");\n    return canvas.getContext(\"2d\");\n  }, []);\n\n  // Create canvas texture with the newly created canvas;\n  // this will be used as the texture for the plane\n  const canvasTexture = React.useMemo(() => {\n    const canvasTexture = new THREE.CanvasTexture(ctx.canvas);\n    canvasTexture.anisotropy = gl.capabilities.getMaxAnisotropy();\n    return canvasTexture;\n  }, [ctx.canvas, gl.capabilities]);\n\n  // Set canvas size\n  React.useMemo(() => {\n    ctx.canvas.width = Math.max(1, Math.floor(width * resolution));\n    ctx.canvas.height = Math.max(1, Math.floor(height * resolution));\n  }, [ctx.canvas, width, height, resolution]);\n\n  const images = React.useMemo(() => {\n    const backgroundImage = new Image();\n    return { backgroundImage };\n  }, []);\n\n  // Set source for background image\n  React.useMemo(() => {\n    images.backgroundImage.src = backgroundImage;\n  }, [images.backgroundImage, backgroundImage]);\n\n  useFrame(() => {\n    // Useful vars\n    const w = ctx.canvas.width;\n    const h = ctx.canvas.height;\n    const d2r = Math.PI / 180; // degrees to radians\n    const res = (w + h) / 2;\n    const { mapLinear } = THREE.MathUtils;\n\n    ctx.globalCompositeOperation = \"source-over\";\n\n    ctx.clearRect(0, 0, w, h);\n\n    // Border radius\n    {\n      const isArray = Array.isArray(borderRadius);\n      const array = borderRadius as BorderArray;\n      const number = borderRadius as number;\n      let [tl = 0, tr = 0, br = 0, bl = 0] = isArray\n        ? array\n        : [number, number, number, number];\n      tl *= res;\n      tr *= res;\n      br *= res;\n      bl *= res;\n      ctx.beginPath();\n      ctx.moveTo(tl, 0);\n      ctx.lineTo(w - tr, 0);\n      ctx.arc(w - tr, tr, tr, d2r * 270, d2r * 360);\n      ctx.lineTo(w, h - br);\n      ctx.arc(w - br, h - br, br, 0, d2r * 90);\n      ctx.lineTo(bl, h);\n      ctx.arc(bl, h - bl, bl, d2r * 90, d2r * 180);\n      ctx.lineTo(0, tl);\n      ctx.arc(tl, tl, tl, d2r * 180, d2r * 270);\n      ctx.closePath();\n    }\n\n    ctx.globalAlpha = opacity;\n\n    // Background color\n    ctx.fillStyle = backgroundColor;\n    ctx.lineWidth = borderWidth * res * 2;\n    ctx.fill();\n\n    // Background image\n    if (backgroundImage !== undefined) {\n      const x = backgroundPosition[0];\n      const y = backgroundPosition[1];\n      const ox = borderWidth * res;\n      const oy = borderWidth * res;\n      const sx = 0;\n      const sy = 0;\n      const sw = images.backgroundImage.width;\n      const sh = images.backgroundImage.height;\n      const ir = sw / sh;\n      const cr = w / h;\n      let dw = sw;\n      let dh = sh;\n      switch (backgroundSize) {\n        case \"stretch\":\n          dw = w;\n          dh = h;\n          break;\n        case \"contain\":\n          dw = w - ox * 2;\n          dh = h - oy * 2;\n          if (ir > cr) {\n            dh = dw / ir;\n          } else {\n            dw = dh * ir;\n          }\n          break;\n        case \"cover\":\n          dw = w - ox * 2;\n          dh = h - oy * 2;\n          if (ir < cr) {\n            dh = dw / ir;\n          } else {\n            dw = dh * ir;\n          }\n          break;\n      }\n      const dx = ox + mapLinear(x, 0, 1, 0, w - ox * 2 - dw);\n      const dy = oy + mapLinear(y, 0, 1, 0, h - oy * 2 - dh);\n      ctx.save();\n      ctx.clip();\n      ctx.drawImage(images.backgroundImage, sx, sy, sw, sh, dx, dy, dw, dh);\n      ctx.restore();\n    }\n\n    // Fixes antialiasing issue\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.stroke();\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.save();\n    ctx.clip();\n\n    ctx.strokeStyle = borderColor;\n    // Border\n    ctx.stroke();\n    ctx.restore();\n\n    // Make sure canvas texture gets updated\n    canvasTexture.needsUpdate = true;\n\n    const material = materialRef.current;\n    if (material !== null) {\n      material.needsUpdate = true;\n    }\n  });\n\n  const [currentChildren, setCurrentChildren] = React.useState<\n    LayerContextType[\"currentChildren\"]\n  >([]);\n\n  const childGroupRefs = React.useMemo(() => {\n    return currentChildren.map(() => React.createRef<THREE.Group>());\n  }, [currentChildren]);\n\n  // Layout calculations\n  React.useEffect(() => {\n    const size = { width, height };\n    size.width -= borderWidth * 2;\n    size.height -= borderWidth * 2;\n    let refs = [...childGroupRefs];\n    if ([\"column\", \"row-reverse\"].includes(flexDirection)) {\n      refs.reverse();\n    }\n    refs.forEach((ref, index) => {\n      const [x, y] = layout({\n        currentChildren,\n        index,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        gap,\n        size,\n      });\n      ref.current.position.x = x;\n      ref.current.position.y = y;\n    });\n  }, [\n    childGroupRefs,\n    currentChildren,\n    width,\n    height,\n    flexDirection,\n    alignItems,\n    justifyContent,\n    borderWidth,\n    gap,\n  ]);\n\n  const layerProviderValue = React.useMemo<LayerContextType>(() => {\n    return {\n      currentChildren,\n      addChild(child) {\n        setCurrentChildren((currentChildren) => {\n          const nextCurrentChildren = [...currentChildren];\n          const index = currentChildren.findIndex((value) => {\n            return value.uuid === child.uuid;\n          });\n          if (index === -1) {\n            nextCurrentChildren.push({ ...child });\n          } else {\n            nextCurrentChildren[index] = { ...child };\n          }\n          return nextCurrentChildren.sort((a, b) => {\n            return a.index - b.index;\n          });\n        });\n      },\n      removeChild(uuid) {\n        setCurrentChildren((currentChildren) => {\n          return currentChildren.filter((value) => value.uuid !== uuid);\n        });\n      },\n    };\n  }, [currentChildren, childIndex]);\n\n  React.useEffect(() => {\n    const childrenGroup = childrenGroupRef.current;\n    if (childrenGroup === null) return;\n    childrenGroup.traverse((object) => {\n      if (\n        object instanceof THREE.Mesh &&\n        object.material instanceof THREE.Material\n      ) {\n        object.material.transparent = true;\n        object.material.opacity = opacity;\n        object.material.needsUpdate = true;\n      }\n    });\n  }, [opacity]);\n\n  return (\n    <LayerContext.Provider value={layerProviderValue}>\n      <group {...props} visible={visible}>\n        <mesh renderOrder={renderOrder + zIndex}>\n          <planeBufferGeometry args={[width, height]} />\n          <meshBasicMaterial\n            ref={materialRef}\n            side={THREE.FrontSide}\n            opacity={opacity}\n            transparent={true}\n            depthWrite={false}\n            map={canvasTexture}\n          />\n        </mesh>\n        <group renderOrder={renderOrder + zIndex + 1} ref={childrenGroupRef}>\n          {React.Children.map(children, (child, childIndex) => {\n            if (React.isValidElement(child)) {\n              return (\n                <group key={childIndex} ref={childGroupRefs[childIndex]}>\n                  {React.cloneElement(child, { ...child.props, childIndex })}\n                </group>\n              );\n            }\n            return child;\n          })}\n        </group>\n      </group>\n    </LayerContext.Provider>\n  );\n}\n","import { Child, LayerProps, Size } from \"@/lib/types\";\n\ntype Axis = \"width\" | \"height\";\n\ntype Args = {\n  currentChildren: Child[];\n  index: number;\n  flexDirection: LayerProps[\"flexDirection\"];\n  alignItems: LayerProps[\"alignItems\"];\n  justifyContent: LayerProps[\"justifyContent\"];\n  gap: LayerProps[\"gap\"];\n  size: Size;\n};\n\nexport default function layout({\n  currentChildren,\n  index,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  gap,\n  size,\n}: Args): [x: number, y: number] {\n  const childrenWidth = currentChildren.reduce((width, child) => {\n    return width + child.width;\n  }, 0);\n  const childrenHeight = currentChildren.reduce((height, child) => {\n    return height + child.height;\n  }, 0);\n  let x = 0;\n  let y = 0;\n  let contentSize = childrenWidth;\n  let axis: Axis = \"width\";\n  let axisInverted: Axis = \"height\";\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    axis = \"height\";\n    axisInverted = \"width\";\n    contentSize = childrenHeight;\n  }\n  if (\n    currentChildren.length > 0 &&\n    ![\"space-between\", \"space-around\"].includes(justifyContent)\n  ) {\n    contentSize += gap * (currentChildren.length - 1);\n  }\n  /**\n   * justifyContent\n   */\n  if (justifyContent === \"start\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"center\") {\n    x = currentChildren[0][axis] * 0.5 - contentSize * 0.5;\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"end\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"space-between\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length - 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  if (justifyContent === \"space-around\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length + 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      x += spacing;\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  /**\n   * alignItems\n   */\n  if (alignItems === \"start\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if (alignItems === \"center\") {\n    // No calculation needed\n  }\n  if (alignItems === \"end\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    return [y, x];\n  }\n\n  return [x, y];\n}\n"],"names":["Example","children","room","React","BoxLineGeometry","translate","legacy","flat","linear","makeDefault","position","target","geometry","color","Layout","flexDirection","setFlexDirection","width","height","justifyContent","onClick","backgroundColor","borderWidth","borderColor","borderRadius","alignItems","lastRenderOrder","LayerContext","currentChildren","addChild","removeChild","DEFAULT_BACKGROUND_POSITION","Layer","zIndex","resolution","visible","autoLayout","opacity","backgroundImage","backgroundSize","backgroundPosition","gap","childIndex","props","renderOrder","gl","useThree","state","materialRef","childrenGroupRef","layerContext","uuid","THREE","undefined","index","ctx","document","createElement","getContext","canvasTexture","canvas","anisotropy","capabilities","getMaxAnisotropy","Math","max","floor","images","Image","src","useFrame","w","h","d2r","PI","res","mapLinear","globalCompositeOperation","clearRect","isArray","Array","array","number","tl","tr","br","bl","beginPath","moveTo","lineTo","arc","closePath","globalAlpha","fillStyle","lineWidth","fill","x","y","ox","oy","sx","sy","sw","sh","ir","cr","dw","dh","dx","dy","save","clip","drawImage","restore","stroke","strokeStyle","needsUpdate","material","current","setCurrentChildren","childGroupRefs","map","size","refs","includes","reverse","forEach","ref","childrenWidth","reduce","child","childrenHeight","contentSize","axis","axisInverted","length","i","spacing","layout","layerProviderValue","nextCurrentChildren","findIndex","value","push","sort","a","b","filter","childrenGroup","traverse","object","transparent","Provider","args","side","depthWrite","key"],"sourceRoot":""}