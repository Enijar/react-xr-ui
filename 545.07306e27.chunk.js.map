{"version":3,"file":"545.07306e27.chunk.js","mappings":"oNAOA,SAASA,EAAQC,GACf,MAAMC,EAAS,4CAA4CC,KAAKF,GAChE,OAAe,OAAXC,EACK,CAAC,EAAG,EAAG,GAET,CACLE,SAASF,EAAO,GAAI,IACpBE,SAASF,EAAO,GAAI,IACpBE,SAASF,EAAO,GAAI,IAExB,CAMA,SAASG,IACP,MAAMC,EAAWC,EAAAA,OAAuB,OAEjCC,EAAcC,GAAmBF,EAAAA,SAAe,IAChDG,EAAiBC,GAAsBJ,EAAAA,SAAe,WAEvDK,EAASL,EAAAA,SAAc,IACpB,CAACP,EAAQ,WAAYA,EAAQ,aACnC,IAwBH,OAtBAa,EAAAA,EAAAA,IAAS,KACP,MAAMC,EAAQR,EAASS,QACvB,GAAc,OAAVD,EAAgB,OACpB,MAAM,UAAEE,GAAcC,EAAAA,UAChBC,EAAMC,KAAKD,MAEXE,GAAS,EAAIC,KAAKC,IADV,KACcJ,IAAgB,EAC5CJ,EAAMS,MAAMC,SAASC,EAAIT,EAAUI,EAAO,EAAG,GAAI,GAAK,IACtDN,EAAMY,SAASC,aAAc,EAE7B,MAAMC,EAA0C,CAC9CP,KAAKQ,IAAIjB,EAAO,GAAG,IAAM,EAAIQ,GAASR,EAAO,GAAG,GAAKQ,GACrDC,KAAKQ,IAAIjB,EAAO,GAAG,IAAM,EAAIQ,GAASR,EAAO,GAAG,GAAKQ,GACrDC,KAAKQ,IAAIjB,EAAO,GAAG,IAAM,EAAIQ,GAASR,EAAO,GAAG,GAAKQ,IAGvDT,EA9BJ,SAAiBmB,GAAuD,IAArDC,EAAGC,EAAGC,GAAqCH,EAC5D,MAAO,KAAQ,GAAK,GAAOC,GAAK,GAAOC,GAAK,EAAKC,GAAGC,SAAS,IAAIC,MAAM,EACzE,CA4BuBC,CAASR,IAC5BnB,GAAgB,IACPO,EAAUI,EAAO,EAAG,EAAG,EAAG,KACjC,IAIFb,EAAAA,cAAC8B,EAAAA,EAAK,CACJC,IAAKhC,EACLiC,MAAO,EACPC,OAAQ,EACR9B,gBAAiBA,EACjBF,aAAcA,EACdiC,YAAa,IACbC,YAAY,UACZC,mBAAoB,CAAC,GAAK,KAGhC,CAEe,SAASC,IACtB,OACErC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACsC,EAAAA,EAAO,KACNtC,EAAAA,cAACF,EAAe,OAElBE,EAAAA,cAACuC,EAAAA,EAAQ,CAACC,SAAS,cAGzB,C","sources":["webpack://react-xr-ui/./examples/examples/animation.tsx"],"sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport Example from \"@/components/example\";\nimport { Layer, LayerRef } from \"react-xr-ui\";\nimport ViewCode from \"@/components/view-code\";\n\nfunction hex2rgb(hex: string): [r: number, g: number, b: number] {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (result === null) {\n    return [0, 0, 0];\n  }\n  return [\n    parseInt(result[1], 16),\n    parseInt(result[2], 16),\n    parseInt(result[3], 16),\n  ];\n}\n\nfunction rgbToHex([r, g, b]: [r: number, g: number, b: number]): string {\n  return \"#\" + ((1 << 24) | (r << 16) | (g << 8) | b).toString(16).slice(1);\n}\n\nfunction AnimatedBorders() {\n  const layerRef = React.useRef<LayerRef>(null);\n\n  const [borderRadius, setBorderRadius] = React.useState(0);\n  const [backgroundColor, setBackgroundColor] = React.useState(\"#ffffff\");\n\n  const colors = React.useMemo(() => {\n    return [hex2rgb(\"#ff0000\"), hex2rgb(\"#0000ff\")];\n  }, []);\n\n  useFrame(() => {\n    const layer = layerRef.current;\n    if (layer === null) return;\n    const { mapLinear } = THREE.MathUtils;\n    const now = Date.now();\n    const speed = 0.001;\n    const delta = (1 + Math.sin(now * speed)) / 2;\n    layer.group.position.x = mapLinear(delta, 0, 1, -0.5, 0.5);\n    layer.material.needsUpdate = true;\n\n    const diff: [r: number, g: number, b: number] = [\n      Math.abs(colors[0][0] * (1 - delta) - colors[1][0] * delta),\n      Math.abs(colors[0][1] * (1 - delta) - colors[1][1] * delta),\n      Math.abs(colors[0][2] * (1 - delta) - colors[1][2] * delta),\n    ];\n\n    setBackgroundColor(rgbToHex(diff));\n    setBorderRadius(() => {\n      return mapLinear(delta, 0, 1, 0, 0.5);\n    });\n  });\n\n  return (\n    <Layer\n      ref={layerRef}\n      width={1}\n      height={1}\n      backgroundColor={backgroundColor}\n      borderRadius={borderRadius}\n      borderWidth={0.02}\n      borderColor=\"#222222\"\n      backgroundPosition={[0.5, 0.5]}\n    />\n  );\n}\n\nexport default function Animation() {\n  return (\n    <>\n      <Example>\n        <AnimatedBorders />\n      </Example>\n      <ViewCode pathname=\"animation\" />\n    </>\n  );\n}\n"],"names":["hex2rgb","hex","result","exec","parseInt","AnimatedBorders","layerRef","React","borderRadius","setBorderRadius","backgroundColor","setBackgroundColor","colors","useFrame","layer","current","mapLinear","THREE","now","Date","delta","Math","sin","group","position","x","material","needsUpdate","diff","abs","_ref","r","g","b","toString","slice","rgbToHex","Layer","ref","width","height","borderWidth","borderColor","backgroundPosition","Animation","Example","ViewCode","pathname"],"sourceRoot":""}