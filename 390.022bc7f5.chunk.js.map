{"version":3,"file":"390.022bc7f5.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./examples/components/button.tsx","webpack://react-xr-ui/./examples/examples/performance.tsx","webpack://react-xr-ui/./src/components/interaction.tsx"],"sourcesContent":["import React from \"react\";\nimport { Interaction, Layer } from \"react-xr-ui\";\n\ntype Props = {\n  textContent: string;\n  selected: boolean;\n  onClick: () => void;\n  fontSize: number;\n  width: number;\n  height: number;\n  fontFamily?: string;\n  optimizedRendering?: boolean;\n};\n\nexport default function Button({\n  textContent,\n  selected,\n  onClick,\n  fontSize,\n  width,\n  height,\n  fontFamily = \"system-ui, sans-serif\",\n  optimizedRendering = false,\n}: Props) {\n  const [pointerOver, setPointerOver] = React.useState(false);\n\n  return (\n    <Interaction\n      onOver={() => {\n        setPointerOver(true);\n        document.body.style.cursor = \"pointer\";\n      }}\n      onOut={() => {\n        setPointerOver(false);\n        document.body.style.cursor = \"auto\";\n      }}\n      onDown={() => {\n        onClick();\n        setPointerOver(false);\n      }}\n    >\n      <Layer\n        width={width}\n        height={height}\n        backgroundColor={pointerOver || selected ? \"white\" : \"#111111\"}\n        color={pointerOver || selected ? \"#111111\" : \"white\"}\n        textContent={textContent}\n        fontFamily={fontFamily}\n        fontSize={fontSize}\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        optimizedRendering={optimizedRendering}\n      />\n    </Interaction>\n  );\n}\n","import React from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { Layer, LayerProps } from \"react-xr-ui\";\nimport Example from \"@/components/example\";\nimport ViewCode from \"@/components/view-code\";\nimport Button from \"@/components/button\";\n\nfunction Nested({\n  letter,\n  children,\n  alignItems = \"center\",\n  justifyContent = \"center\",\n}: {\n  letter: string;\n  children?: React.ReactNode;\n  alignItems?: LayerProps[\"alignItems\"];\n  justifyContent?: LayerProps[\"justifyContent\"];\n}) {\n  return (\n    <Layer\n      textContent={letter}\n      width=\"90%\"\n      height=\"90%\"\n      backgroundColor=\"crimson\"\n      alignItems={alignItems}\n      justifyContent={justifyContent}\n    >\n      <Layer\n        textContent={letter}\n        width=\"90%\"\n        height=\"90%\"\n        backgroundColor=\"blue\"\n        alignItems={alignItems}\n        justifyContent={justifyContent}\n        fontSize={0.5}\n      >\n        <Layer\n          textContent={letter}\n          width=\"90%\"\n          height=\"90%\"\n          backgroundColor=\"green\"\n          alignItems={alignItems}\n          justifyContent={justifyContent}\n          fontSize={0.5}\n        >\n          <Layer\n            textContent={letter}\n            width=\"90%\"\n            height=\"90%\"\n            backgroundColor=\"hotpink\"\n            alignItems={alignItems}\n            justifyContent={justifyContent}\n            fontSize={0.5}\n          >\n            <Layer\n              textContent={letter}\n              width=\"90%\"\n              height=\"90%\"\n              backgroundColor=\"purple\"\n              alignItems={alignItems}\n              justifyContent={justifyContent}\n              fontSize={0.5}\n            >\n              <Layer\n                textContent={letter}\n                width=\"90%\"\n                height=\"90%\"\n                backgroundColor=\"grey\"\n                alignItems={alignItems}\n                justifyContent={justifyContent}\n                fontSize={0.5}\n              >\n                <Layer\n                  textContent={letter}\n                  width=\"90%\"\n                  height=\"90%\"\n                  backgroundColor=\"aliceblue\"\n                  alignItems={alignItems}\n                  justifyContent={justifyContent}\n                  fontSize={0.5}\n                >\n                  {children}\n                </Layer>\n              </Layer>\n            </Layer>\n          </Layer>\n        </Layer>\n      </Layer>\n    </Layer>\n  );\n}\n\nconst aligns: LayerProps[\"alignItems\"][] = [\"start\", \"center\", \"end\"];\nconst justifies: LayerProps[\"justifyContent\"][] = [\"start\", \"center\", \"end\"];\n\nlet i = 0;\n\nconst delay = 200;\n\nconst letters: string[] = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n\nfunction Scene() {\n  const [align, setAlign] = React.useState<LayerProps[\"alignItems\"]>(\"start\");\n  const [justify, setJustify] =\n    React.useState<LayerProps[\"justifyContent\"]>(\"start\");\n\n  const [letter, setLetter] = React.useState(letters[0]);\n\n  const lastFrameTimeRef = React.useRef(Date.now());\n\n  useFrame(() => {\n    const now = Date.now();\n    if (now - lastFrameTimeRef.current < delay) return;\n    lastFrameTimeRef.current = now;\n    i++;\n    setAlign(aligns[i % aligns.length]);\n    setJustify(justifies[i % justifies.length]);\n    setLetter(letters[i % letters.length]);\n  });\n\n  return (\n    <Layer width={1} height={1} backgroundColor=\"black\">\n      <Nested letter={letter} alignItems={align} justifyContent={justify}>\n        <Nested letter={letter} alignItems={align} justifyContent={justify}>\n          <Nested letter={letter} alignItems={align} justifyContent={justify}>\n            <Nested letter={letter} alignItems={align} justifyContent={justify}>\n              <Nested\n                letter={letter}\n                alignItems={align}\n                justifyContent={justify}\n              >\n                <Nested\n                  letter={letter}\n                  alignItems={align}\n                  justifyContent={justify}\n                >\n                  <Nested\n                    letter={letter}\n                    alignItems={align}\n                    justifyContent={justify}\n                  >\n                    <Nested\n                      letter={letter}\n                      alignItems={align}\n                      justifyContent={justify}\n                    >\n                      <Nested\n                        letter={letter}\n                        alignItems={align}\n                        justifyContent={justify}\n                      >\n                        <Nested\n                          letter={letter}\n                          alignItems={align}\n                          justifyContent={justify}\n                        >\n                          <Nested\n                            letter={letter}\n                            alignItems={align}\n                            justifyContent={justify}\n                          />\n                        </Nested>\n                      </Nested>\n                    </Nested>\n                  </Nested>\n                </Nested>\n              </Nested>\n            </Nested>\n          </Nested>\n        </Nested>\n      </Nested>\n    </Layer>\n  );\n}\n\nexport default function Performance() {\n  const [optimizedRendering, setOptimizedRendering] = React.useState(false);\n\n  return (\n    <>\n      <Example optimizedRendering={optimizedRendering}>\n        <group position-y={0.61}>\n          <Layer width={1} height={0.2} flexDirection=\"column\" gap={0.025}>\n            <Layer width={1} height={0.1} gap={0.05}>\n              <Button\n                width={0.1}\n                height={0.1}\n                fontSize={0.5}\n                textContent=\"On\"\n                selected={optimizedRendering}\n                onClick={() => setOptimizedRendering(true)}\n              />\n              <Button\n                width={0.1}\n                height={0.1}\n                fontSize={0.5}\n                textContent=\"Off\"\n                selected={!optimizedRendering}\n                onClick={() => setOptimizedRendering(false)}\n              />\n            </Layer>\n            <Layer\n              width={1}\n              height={0.05}\n              textContent=\"Open Dev Tools to see Frame rendering stats\"\n              fontSize={0.6}\n              textAlign=\"center\"\n              verticalAlign=\"middle\"\n            />\n          </Layer>\n        </group>\n        <Scene />\n      </Example>\n      <ViewCode pathname=\"performance\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport type { Intersection } from \"three\";\nimport { Interactive, useXR, XRInteractionEvent } from \"@react-three/xr\";\nimport { ThreeEvent } from \"@react-three/fiber\";\n\ntype Fn = (intersection: Intersection, intersections: Intersection[]) => void;\n\ntype Props = {\n  children: React.ReactNode;\n  onMove?: Fn;\n  onOver?: Fn;\n  onOut?: Fn;\n  onDown?: Fn;\n  onUp?: Fn;\n  enabled?: boolean;\n};\n\nexport default function Interaction({\n  children,\n  onMove,\n  onOver,\n  onOut,\n  onDown,\n  onUp,\n  enabled = true,\n}: Props) {\n  const isPresenting = useXR((state) => state.isPresenting);\n\n  const handleVrInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: XRInteractionEvent) => {\n        if (!isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        fn(event.intersection, event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  const handleWebInteraction = React.useCallback(\n    (fn?: Fn) => {\n      return (event: ThreeEvent<PointerEvent>) => {\n        if (isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        event.stopPropagation();\n        fn(event.intersections[0], event.intersections);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  return (\n    <Interactive\n      onSelectStart={handleVrInteraction(onDown)}\n      onSelectEnd={handleVrInteraction(onUp)}\n      onMove={handleVrInteraction(onMove)}\n      onHover={handleVrInteraction(onOver)}\n      onBlur={handleVrInteraction(onOut)}\n    >\n      <group\n        onPointerDown={handleWebInteraction(onDown)}\n        onPointerUp={handleWebInteraction(onUp)}\n        onPointerMove={handleWebInteraction(onMove)}\n        onPointerOver={handleWebInteraction(onOver)}\n        onPointerOut={handleWebInteraction(onOut)}\n      >\n        {children}\n      </group>\n    </Interactive>\n  );\n}\n"],"names":["Button","textContent","selected","onClick","fontSize","width","height","fontFamily","optimizedRendering","pointerOver","setPointerOver","React","onOver","document","body","style","cursor","onOut","onDown","backgroundColor","color","textAlign","verticalAlign","Nested","letter","children","alignItems","justifyContent","aligns","justifies","i","letters","Scene","align","setAlign","justify","setJustify","setLetter","lastFrameTimeRef","Date","now","useFrame","current","length","Performance","setOptimizedRendering","flexDirection","gap","pathname","Interaction","onMove","onUp","enabled","isPresenting","useXR","state","handleVrInteraction","fn","event","intersection","intersections","handleWebInteraction","stopPropagation","onSelectStart","onSelectEnd","onHover","onBlur","onPointerDown","onPointerUp","onPointerMove","onPointerOver","onPointerOut"],"sourceRoot":""}