{"version":3,"file":"224.48de365b.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./examples/components/button.tsx","webpack://react-xr-ui/./examples/examples/layout.tsx","webpack://react-xr-ui/./src/components/interaction.tsx"],"sourcesContent":["import React from \"react\";\nimport { Interaction, Layer } from \"react-xr-ui\";\n\ntype Props = {\n  textContent: string;\n  selected: boolean;\n  onClick: () => void;\n  fontSize: number;\n  width: number;\n  height: number;\n  fontFamily?: string;\n};\n\nexport default function Button({\n  textContent,\n  selected,\n  onClick,\n  fontSize,\n  width,\n  height,\n  fontFamily = \"system-ui, sans-serif\",\n}: Props) {\n  const [pointerOver, setPointerOver] = React.useState(false);\n\n  return (\n    <Interaction\n      onOver={() => {\n        setPointerOver(true);\n        document.body.style.cursor = \"pointer\";\n      }}\n      onOut={() => {\n        setPointerOver(false);\n        document.body.style.cursor = \"auto\";\n      }}\n      onDown={() => {\n        onClick();\n        setPointerOver(false);\n      }}\n    >\n      <Layer\n        width={width}\n        height={height}\n        backgroundColor={pointerOver || selected ? \"white\" : \"#111111\"}\n        color={pointerOver || selected ? \"#111111\" : \"white\"}\n        textContent={textContent}\n        fontFamily={fontFamily}\n        fontSize={fontSize}\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n      />\n    </Interaction>\n  );\n}\n","import React from \"react\";\nimport Example from \"@/components/example\";\nimport { Layer, LayerProps } from \"react-xr-ui\";\nimport Button from \"@/components/button\";\nimport ViewCode from \"@/components/view-code\";\n\nexport default function Layout() {\n  const [flexDirection, setFlexDirection] =\n    React.useState<LayerProps[\"flexDirection\"]>(\"row\");\n  const [alignItems, setAlignItems] =\n    React.useState<LayerProps[\"alignItems\"]>(\"center\");\n  const [justifyContent, setJustifyContent] =\n    React.useState<LayerProps[\"justifyContent\"]>(\"space-around\");\n\n  return (\n    <>\n      <Example>\n        <Layer\n          width={1.5}\n          height={0.2}\n          flexDirection=\"column\"\n          justifyContent=\"space-between\"\n          position-y={0.625}\n        >\n          <Layer width={0.8} height={0.05} justifyContent=\"space-around\">\n            <Button\n              width={0.1}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"row\"\n              selected={flexDirection === \"row\"}\n              onClick={() => setFlexDirection(\"row\")}\n            />\n            <Button\n              width={0.2}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"row-reverse\"\n              selected={flexDirection === \"row-reverse\"}\n              onClick={() => setFlexDirection(\"row-reverse\")}\n            />\n            <Button\n              width={0.15}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"column\"\n              selected={flexDirection === \"column\"}\n              onClick={() => setFlexDirection(\"column\")}\n            />\n            <Button\n              width={0.25}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"column-reverse\"\n              selected={flexDirection === \"column-reverse\"}\n              onClick={() => setFlexDirection(\"column-reverse\")}\n            />\n          </Layer>\n          <Layer width={0.85} height={0.05} justifyContent=\"space-around\">\n            <Button\n              width={0.25}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"alignItems: start\"\n              selected={alignItems === \"start\"}\n              onClick={() => setAlignItems(\"start\")}\n            />\n            <Button\n              width={0.25}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"alignItems: center\"\n              selected={alignItems === \"center\"}\n              onClick={() => setAlignItems(\"center\")}\n            />\n            <Button\n              width={0.25}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"alignItems: end\"\n              selected={alignItems === \"end\"}\n              onClick={() => setAlignItems(\"end\")}\n            />\n          </Layer>\n          <Layer width={1.6} height={0.05} justifyContent=\"space-around\">\n            <Button\n              width={0.25}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"justifyContent: start\"\n              selected={justifyContent === \"start\"}\n              onClick={() => setJustifyContent(\"start\")}\n            />\n            <Button\n              width={0.35}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"justifyContent: space-around\"\n              selected={justifyContent === \"space-around\"}\n              onClick={() => setJustifyContent(\"space-around\")}\n            />\n            <Button\n              width={0.35}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"justifyContent: space-between\"\n              selected={justifyContent === \"space-between\"}\n              onClick={() => setJustifyContent(\"space-between\")}\n            />\n            <Button\n              width={0.25}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"justifyContent: center\"\n              selected={justifyContent === \"center\"}\n              onClick={() => setJustifyContent(\"center\")}\n            />\n            <Button\n              width={0.25}\n              height={0.05}\n              fontSize={0.5}\n              textContent=\"justifyContent: end\"\n              selected={justifyContent === \"end\"}\n              onClick={() => setJustifyContent(\"end\")}\n            />\n          </Layer>\n        </Layer>\n        <Layer\n          width={1}\n          height={1}\n          borderWidth={0.025}\n          borderColor=\"#222222\"\n          borderRadius={0.05}\n          backgroundColor=\"#444444\"\n          flexDirection={flexDirection}\n          alignItems={alignItems}\n          justifyContent={justifyContent}\n        >\n          <Layer width={0.1} height={0.15} backgroundColor=\"red\" />\n          <Layer width={0.3} height={0.3} backgroundColor=\"lightblue\" />\n          <Layer width={0.2} height={0.1} backgroundColor=\"green\" />\n        </Layer>\n      </Example>\n      <ViewCode pathname=\"layout\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport type { Intersection } from \"three\";\nimport { Interactive, useXR, XRInteractionEvent } from \"@react-three/xr\";\nimport { ThreeEvent } from \"@react-three/fiber\";\n\ntype Props = {\n  children: React.ReactNode;\n  onMove?: (intersection: Intersection) => void;\n  onOver?: (intersection: Intersection) => void;\n  onOut?: (intersection: Intersection) => void;\n  onDown?: (intersection: Intersection) => void;\n  onUp?: (intersection: Intersection) => void;\n  enabled?: boolean;\n};\n\nexport default function Interaction({\n  children,\n  onMove,\n  onOver,\n  onOut,\n  onDown,\n  onUp,\n  enabled = true,\n}: Props) {\n  const isPresenting = useXR((state) => state.isPresenting);\n\n  const handleVrInteraction = React.useCallback(\n    (fn?: (intersection: Intersection) => void) => {\n      return (event: XRInteractionEvent) => {\n        if (!isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        fn(event.intersection);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  const handleWebInteraction = React.useCallback(\n    (fn?: (intersection: Intersection) => void) => {\n      return (event: ThreeEvent<PointerEvent>) => {\n        if (isPresenting) return;\n        if (!enabled) return;\n        if (!fn) return;\n        event.stopPropagation();\n        fn(event.intersections[0]);\n      };\n    },\n    [isPresenting, enabled, onDown, onUp, onMove, onOver, onOut]\n  );\n\n  return (\n    <Interactive\n      onSelectStart={handleVrInteraction(onDown)}\n      onSelectEnd={handleVrInteraction(onUp)}\n      onMove={handleVrInteraction(onMove)}\n      onHover={handleVrInteraction(onOver)}\n      onBlur={handleVrInteraction(onOut)}\n    >\n      <group\n        onPointerDown={handleWebInteraction(onDown)}\n        onPointerUp={handleWebInteraction(onUp)}\n        onPointerMove={handleWebInteraction(onMove)}\n        onPointerOver={handleWebInteraction(onOver)}\n        onPointerOut={handleWebInteraction(onOut)}\n      >\n        {children}\n      </group>\n    </Interactive>\n  );\n}\n"],"names":["Button","textContent","selected","onClick","fontSize","width","height","fontFamily","pointerOver","setPointerOver","React","onOver","document","body","style","cursor","onOut","onDown","backgroundColor","color","textAlign","verticalAlign","Layout","flexDirection","setFlexDirection","alignItems","setAlignItems","justifyContent","setJustifyContent","borderWidth","borderColor","borderRadius","pathname","Interaction","children","onMove","onUp","enabled","isPresenting","useXR","state","handleVrInteraction","fn","event","intersection","handleWebInteraction","stopPropagation","intersections","onSelectStart","onSelectEnd","onHover","onBlur","onPointerDown","onPointerUp","onPointerMove","onPointerOver","onPointerOut"],"sourceRoot":""}