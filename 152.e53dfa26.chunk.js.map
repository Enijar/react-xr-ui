{"version":3,"file":"152.e53dfa26.chunk.js","mappings":"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","sources":["webpack://react-xr-ui/./lib/hooks/use-render-order.tsx","webpack://react-xr-ui/./lib/components/layer.tsx","webpack://react-xr-ui/./lib/services/layout.ts","webpack://react-xr-ui/./src/components/button.tsx","webpack://react-xr-ui/./src/components/example.tsx","webpack://react-xr-ui/./src/examples/typography.tsx"],"sourcesContent":["import React from \"react\";\n\nlet lastRenderOrder = -1;\n\nexport default function useRenderOrder() {\n  return React.useMemo(() => {\n    return ++lastRenderOrder;\n  }, []);\n}\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport canvasTxt from \"canvas-txt\";\nimport useRenderOrder from \"../hooks/use-render-order\";\nimport layout from \"../services/layout\";\nimport { BorderArray, LayerContextType, LayerProps } from \"../types\";\n\nconst LayerContext = React.createContext<LayerContextType>({\n  parentUuid: null,\n  currentChildren: [],\n  addChild() {},\n  removeChild() {},\n});\n\nconst DEFAULT_BACKGROUND_POSITION: LayerProps[\"backgroundPosition\"] = [0, 0];\n\nfunction Layer(\n  {\n    zIndex = 0,\n    resolution = 2048,\n    visible = true,\n    autoLayout = true,\n    width = 1,\n    height = 1,\n    opacity = 1,\n    backgroundColor = \"transparent\",\n    backgroundImage,\n    backgroundSize,\n    backgroundPosition = DEFAULT_BACKGROUND_POSITION,\n    borderRadius = 0,\n    borderWidth = 0,\n    borderColor = \"transparent\",\n    flexDirection = \"row\",\n    alignItems = \"center\",\n    justifyContent = \"center\",\n    gap = 0,\n    textContent,\n    textAlign = \"left\",\n    justifyText = false,\n    verticalAlign = \"top\",\n    color = \"white\",\n    fontFamily = \"system-ui, sans-serif\",\n    fontSize = 0.1,\n    fontWeight = \"normal\",\n    childIndex,\n    children,\n    ...props\n  }: LayerProps,\n  ref: React.ForwardedRef<THREE.Group>\n) {\n  const renderOrder = useRenderOrder();\n\n  const gl = useThree((state) => state.gl);\n\n  const materialRef = React.useRef<THREE.MeshBasicMaterial>(null);\n  const childrenGroupRef = React.useRef<THREE.Group>(null);\n\n  const layerContext = React.useContext(LayerContext);\n\n  const uuid = React.useMemo(() => {\n    return THREE.MathUtils.generateUUID();\n  }, []);\n\n  React.useEffect(() => {\n    if (layerContext.parentUuid === null) return;\n    layerContext.addChild({ width, height, index: childIndex, uuid });\n    return () => {\n      layerContext.removeChild(uuid);\n    };\n  }, [width, height, childIndex, layerContext.parentUuid]);\n\n  // Create 2d canvas context\n  const ctx = React.useMemo<CanvasRenderingContext2D>(() => {\n    const canvas = document.createElement(\"canvas\");\n    return canvas.getContext(\"2d\");\n  }, []);\n\n  // Set canvas size\n  React.useMemo(() => {\n    ctx.canvas.width = Math.max(1, Math.floor(width * resolution));\n    ctx.canvas.height = Math.max(1, Math.floor(height * resolution));\n  }, [ctx.canvas, width, height, resolution]);\n\n  // Create canvas texture with the newly created canvas;\n  // this will be used as the texture for the plane\n  const canvasTexture = React.useMemo(() => {\n    const canvasTexture = new THREE.CanvasTexture(ctx.canvas);\n    canvasTexture.anisotropy = gl.capabilities.getMaxAnisotropy();\n    return canvasTexture;\n  }, [ctx.canvas, gl.capabilities, width, height]);\n\n  const images = React.useMemo(() => {\n    const backgroundImage = new Image();\n    return { backgroundImage };\n  }, []);\n\n  // Set source for background image\n  React.useMemo(() => {\n    images.backgroundImage.src = backgroundImage;\n  }, [images.backgroundImage, backgroundImage]);\n\n  useFrame(() => {\n    // Useful vars\n    const w = ctx.canvas.width;\n    const h = ctx.canvas.height;\n    const d2r = Math.PI / 180; // degrees to radians\n    const res = (w + h) / 2;\n    const { mapLinear } = THREE.MathUtils;\n\n    ctx.globalCompositeOperation = \"source-over\";\n\n    ctx.clearRect(0, 0, w, h);\n\n    // Border radius\n    {\n      const isArray = Array.isArray(borderRadius);\n      const array = borderRadius as BorderArray;\n      const number = borderRadius as number;\n      let [tl = 0, tr = 0, br = 0, bl = 0] = isArray\n        ? array\n        : [number, number, number, number];\n      tl *= res;\n      tr *= res;\n      br *= res;\n      bl *= res;\n      ctx.beginPath();\n      ctx.moveTo(tl, 0);\n      ctx.lineTo(w - tr, 0);\n      ctx.arc(w - tr, tr, tr, d2r * 270, d2r * 360);\n      ctx.lineTo(w, h - br);\n      ctx.arc(w - br, h - br, br, 0, d2r * 90);\n      ctx.lineTo(bl, h);\n      ctx.arc(bl, h - bl, bl, d2r * 90, d2r * 180);\n      ctx.lineTo(0, tl);\n      ctx.arc(tl, tl, tl, d2r * 180, d2r * 270);\n      ctx.closePath();\n    }\n\n    ctx.globalAlpha = opacity;\n\n    // Background color\n    ctx.fillStyle = backgroundColor;\n    ctx.lineWidth = borderWidth * res * 2;\n    ctx.fill();\n\n    const ox = borderWidth * res;\n    const oy = borderWidth * res;\n\n    // Background image\n    if (backgroundImage !== undefined) {\n      const x = backgroundPosition[0];\n      const y = backgroundPosition[1];\n      const sx = 0;\n      const sy = 0;\n      const sw = images.backgroundImage.width;\n      const sh = images.backgroundImage.height;\n      const ir = sw / sh;\n      const cr = w / h;\n      let dw = sw;\n      let dh = sh;\n      switch (backgroundSize) {\n        case \"stretch\":\n          dw = w;\n          dh = h;\n          break;\n        case \"contain\":\n          dw = w - ox * 2;\n          dh = h - oy * 2;\n          if (ir > cr) {\n            dh = dw / ir;\n          } else {\n            dw = dh * ir;\n          }\n          break;\n        case \"cover\":\n          dw = w - ox * 2;\n          dh = h - oy * 2;\n          if (ir < cr) {\n            dh = dw / ir;\n          } else {\n            dw = dh * ir;\n          }\n          break;\n      }\n      const dx = ox + mapLinear(x, 0, 1, 0, w - ox * 2 - dw);\n      const dy = oy + mapLinear(y, 0, 1, 0, h - oy * 2 - dh);\n      ctx.save();\n      ctx.clip();\n      ctx.drawImage(images.backgroundImage, sx, sy, sw, sh, dx, dy, dw, dh);\n      ctx.restore();\n    }\n\n    // Typography\n    if (textContent !== undefined) {\n      canvasTxt.font = fontFamily;\n      canvasTxt.fontSize = fontSize * Math.min(w, h);\n      canvasTxt.align = textAlign;\n      canvasTxt.vAlign = verticalAlign;\n      canvasTxt.justify = justifyText;\n      canvasTxt.fontWeight = fontWeight;\n      ctx.textBaseline = \"bottom\";\n      ctx.fillStyle = color;\n      canvasTxt.drawText(ctx, textContent, ox, oy, w - ox * 2, h - oy * 2);\n    }\n\n    // Fixes antialiasing issue\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.stroke();\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.save();\n    ctx.clip();\n\n    ctx.strokeStyle = borderColor;\n    // Border\n    ctx.stroke();\n    ctx.restore();\n\n    // Make sure canvas texture gets updated\n    canvasTexture.needsUpdate = true;\n  });\n\n  const [currentChildren, setCurrentChildren] = React.useState<\n    LayerContextType[\"currentChildren\"]\n  >([]);\n\n  const childGroupRefs = React.useMemo(() => {\n    return currentChildren.map(() => React.createRef<THREE.Group>());\n  }, [currentChildren]);\n\n  // Layout calculations\n  React.useEffect(() => {\n    const size = { width, height };\n    size.width -= borderWidth * 2;\n    size.height -= borderWidth * 2;\n    let refs = [...childGroupRefs];\n    if ([\"column\", \"row-reverse\"].includes(flexDirection)) {\n      refs.reverse();\n    }\n    refs.forEach((ref, index) => {\n      const [x, y] = layout({\n        currentChildren,\n        index,\n        flexDirection,\n        alignItems,\n        justifyContent,\n        gap,\n        size,\n      });\n      ref.current.position.x = x;\n      ref.current.position.y = y;\n    });\n  }, [\n    childGroupRefs,\n    currentChildren,\n    width,\n    height,\n    flexDirection,\n    alignItems,\n    justifyContent,\n    borderWidth,\n    gap,\n  ]);\n\n  const layerProviderValue = React.useMemo<LayerContextType>(() => {\n    return {\n      currentChildren,\n      parentUuid: uuid,\n      addChild(child) {\n        setCurrentChildren((currentChildren) => {\n          const nextCurrentChildren = [...currentChildren];\n          const index = currentChildren.findIndex((value) => {\n            return value.uuid === child.uuid;\n          });\n          if (index === -1) {\n            nextCurrentChildren.push({ ...child });\n          } else {\n            nextCurrentChildren[index] = { ...child };\n          }\n          return nextCurrentChildren.sort((a, b) => {\n            return a.index - b.index;\n          });\n        });\n      },\n      removeChild(uuid) {\n        setCurrentChildren((currentChildren) => {\n          return currentChildren.filter((value) => value.uuid !== uuid);\n        });\n      },\n    };\n  }, [currentChildren, uuid]);\n\n  React.useEffect(() => {\n    const childrenGroup = childrenGroupRef.current;\n    if (childrenGroup === null) return;\n    childrenGroup.traverse((object) => {\n      if (\n        object instanceof THREE.Mesh &&\n        object.material instanceof THREE.Material\n      ) {\n        object.material.transparent = true;\n        object.material.opacity = opacity;\n        object.material.needsUpdate = true;\n      }\n    });\n  }, [opacity]);\n\n  return (\n    <LayerContext.Provider value={layerProviderValue}>\n      <group ref={ref} {...props} visible={visible}>\n        <mesh renderOrder={renderOrder + zIndex}>\n          <planeBufferGeometry args={[width, height]} />\n          <meshBasicMaterial\n            ref={materialRef}\n            side={THREE.FrontSide}\n            opacity={opacity}\n            transparent={true}\n            depthWrite={false}\n            map={canvasTexture}\n          />\n        </mesh>\n        <group renderOrder={renderOrder + zIndex + 1} ref={childrenGroupRef}>\n          {React.Children.map(children, (child, childIndex) => {\n            if (React.isValidElement(child)) {\n              return (\n                <group key={childIndex} ref={childGroupRefs[childIndex]}>\n                  {React.cloneElement(child, { ...child.props, childIndex })}\n                </group>\n              );\n            }\n            return child;\n          })}\n        </group>\n      </group>\n    </LayerContext.Provider>\n  );\n}\n\nconst ForwardedLayer = React.forwardRef(Layer);\nForwardedLayer.displayName = \"layer\";\nexport default ForwardedLayer;\n","import { Child, LayerProps, Size } from \"../types\";\n\ntype Axis = \"width\" | \"height\";\n\ntype Args = {\n  currentChildren: Child[];\n  index: number;\n  flexDirection: LayerProps[\"flexDirection\"];\n  alignItems: LayerProps[\"alignItems\"];\n  justifyContent: LayerProps[\"justifyContent\"];\n  gap: LayerProps[\"gap\"];\n  size: Size;\n};\n\nexport default function layout({\n  currentChildren,\n  index,\n  flexDirection,\n  alignItems,\n  justifyContent,\n  gap,\n  size,\n}: Args): [x: number, y: number] {\n  const childrenWidth = currentChildren.reduce((width, child) => {\n    return width + child.width;\n  }, 0);\n  const childrenHeight = currentChildren.reduce((height, child) => {\n    return height + child.height;\n  }, 0);\n  let x = 0;\n  let y = 0;\n  let contentSize = childrenWidth;\n  let axis: Axis = \"width\";\n  let axisInverted: Axis = \"height\";\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    axis = \"height\";\n    axisInverted = \"width\";\n    contentSize = childrenHeight;\n  }\n  if (\n    currentChildren.length > 0 &&\n    ![\"space-between\", \"space-around\"].includes(justifyContent)\n  ) {\n    contentSize += gap * (currentChildren.length - 1);\n  }\n  /**\n   * justifyContent\n   */\n  if (justifyContent === \"start\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"center\") {\n    x = currentChildren[0][axis] * 0.5 - contentSize * 0.5;\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"end\") {\n    x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - contentSize;\n    if (flexDirection === \"column\") {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n    }\n    for (let i = 1; i <= index; i++) {\n      x +=\n        currentChildren[i - 1][axis] * 0.5 +\n        currentChildren[i][axis] * 0.5 +\n        gap;\n    }\n  }\n  if (justifyContent === \"space-between\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length - 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  if (justifyContent === \"space-around\") {\n    if (contentSize >= size[axis]) {\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 + currentChildren[i][axis] * 0.5;\n      }\n    } else {\n      let spacing = Math.max(0, size[axis] - contentSize);\n      if (currentChildren.length === 0) {\n        spacing = 0;\n      } else if (spacing > 0) {\n        spacing /= currentChildren.length + 1;\n      }\n      x = size[axis] * 0.5 + currentChildren[0][axis] * 0.5 - size[axis];\n      x += spacing;\n      for (let i = 1; i <= index; i++) {\n        x +=\n          currentChildren[i - 1][axis] * 0.5 +\n          currentChildren[i][axis] * 0.5 +\n          spacing;\n      }\n    }\n  }\n  /**\n   * alignItems\n   */\n  if (alignItems === \"start\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if (alignItems === \"center\") {\n    // No calculation needed\n  }\n  if (alignItems === \"end\") {\n    if ([\"row\", \"row-reverse\"].includes(flexDirection)) {\n      y =\n        size[axisInverted] * -0.5 + currentChildren[index][axisInverted] * 0.5;\n    }\n    if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n      y = size[axisInverted] * 0.5 - currentChildren[index][axisInverted] * 0.5;\n    }\n  }\n  if ([\"column\", \"column-reverse\"].includes(flexDirection)) {\n    return [y, x];\n  }\n\n  return [x, y];\n}\n","import { GroupProps } from \"@react-three/fiber\";\nimport React from \"react\";\nimport Layer from \"../../lib/components/layer\";\n\ntype Props = {\n  textContent: string;\n  selected: boolean;\n  onClick: GroupProps[\"onClick\"];\n  fontSize: number;\n  width: number;\n  height: number;\n  fontFamily?: string;\n};\n\nexport default function Button({\n  textContent,\n  selected,\n  onClick,\n  fontSize,\n  width,\n  height,\n  fontFamily = \"system-ui, sans-serif\",\n}: Props) {\n  const [pointerOver, setPointerOver] = React.useState(false);\n\n  return (\n    <Layer\n      width={width}\n      height={height}\n      backgroundColor={pointerOver || selected ? \"white\" : \"#111111\"}\n      color={pointerOver || selected ? \"#111111\" : \"white\"}\n      textContent={textContent}\n      fontFamily={fontFamily}\n      fontSize={fontSize}\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      onPointerOver={() => setPointerOver(true)}\n      onPointerOut={() => setPointerOver(false)}\n      onClick={(event) => {\n        onClick(event);\n        setPointerOver(false);\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { BoxLineGeometry } from \"three/examples/jsm/geometries/BoxLineGeometry\";\nimport { DefaultXRControllers, VRCanvas as Canvas } from \"@react-three/xr\";\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nexport default function Example({ children }: Props) {\n  const room = React.useMemo(() => {\n    return new BoxLineGeometry(6, 6, 6, 10, 10, 10).translate(0, 3, 0);\n  }, []);\n\n  return (\n    <Canvas legacy flat linear gl={{ alpha: false }}>\n      {/** Background, cameras, controls and lights */}\n      <color args={[\"#333333\"]} attach=\"background\" />\n      <lineSegments geometry={room}>\n        <lineBasicMaterial color=\"#c0c0c0\" />\n      </lineSegments>\n      <PerspectiveCamera makeDefault position={[0, 1.6, 0]} />\n      <OrbitControls makeDefault target={[0, 1, -1.8]} />\n      <ambientLight />\n      <DefaultXRControllers />\n\n      <group position={[0, 1, -1.88]}>{children}</group>\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport Example from \"@/components/example\";\nimport Layer from \"../../lib/components/layer\";\nimport Button from \"@/components/button\";\n\n// Arial (sans-serif)\n// Verdana (sans-serif)\n// Helvetica (sans-serif)\n// Tahoma (sans-serif)\n// Trebuchet MS (sans-serif)\n// Times New Roman (serif)\n// Georgia (serif)\n// Garamond (serif)\n// Courier New (monospace)\n// Brush Script MT (cursive)\n\nexport default function Typography() {\n  const [fontFamily, setFontFamily] = React.useState(\"system-ui\");\n\n  return (\n    <Example>\n      <Layer\n        width={1.3}\n        height={0.1}\n        justifyContent=\"space-around\"\n        position-y={0.6}\n      >\n        <Button\n          textContent=\"system-ui\"\n          fontFamily=\"system-ui\"\n          selected={fontFamily === \"system-ui\"}\n          onClick={() => setFontFamily(\"system-ui\")}\n          fontSize={0.3}\n          width={0.2}\n          height={0.1}\n        />\n        <Button\n          textContent=\"Arial\"\n          fontFamily=\"Arial, sans-serif\"\n          selected={fontFamily === \"Arial\"}\n          onClick={() => setFontFamily(\"Arial, sans-serif\")}\n          fontSize={0.3}\n          width={0.2}\n          height={0.1}\n        />\n        <Button\n          textContent=\"Times New Roman\"\n          fontFamily=\"Times New Roman, serif\"\n          selected={fontFamily === \"Times New Roman, serif\"}\n          onClick={() => setFontFamily(\"Times New Roman, serif\")}\n          fontSize={0.3}\n          width={0.3}\n          height={0.1}\n        />\n        <Button\n          textContent=\"Courier New\"\n          fontFamily=\"Courier New, monospace\"\n          selected={fontFamily === \"Courier New, monospace\"}\n          onClick={() => setFontFamily(\"Courier New, monospace\")}\n          fontSize={0.3}\n          width={0.25}\n          height={0.1}\n        />\n        <Button\n          textContent=\"Brush Script MT\"\n          fontFamily=\"Brush Script MT, cursive\"\n          selected={fontFamily === \"Brush Script MT, cursive\"}\n          onClick={() => setFontFamily(\"Brush Script MT, cursive\")}\n          fontSize={0.3}\n          width={0.25}\n          height={0.1}\n        />\n      </Layer>\n      <Layer\n        width={1}\n        height={1}\n        borderWidth={0.025}\n        borderColor=\"#222222\"\n        borderRadius={0.05}\n        backgroundColor=\"#444444\"\n        fontFamily={fontFamily}\n        textContent={`This is a test with some long text...`}\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        color=\"crimson\"\n      />\n    </Example>\n  );\n}\n"],"names":["lastRenderOrder","LayerContext","React","parentUuid","currentChildren","addChild","removeChild","DEFAULT_BACKGROUND_POSITION","Layer","ref","zIndex","resolution","visible","autoLayout","width","height","opacity","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","borderRadius","borderWidth","borderColor","flexDirection","alignItems","justifyContent","gap","textContent","textAlign","justifyText","verticalAlign","color","fontFamily","fontSize","fontWeight","childIndex","children","props","renderOrder","gl","useThree","state","materialRef","childrenGroupRef","layerContext","uuid","THREE","index","ctx","document","createElement","getContext","canvas","Math","max","floor","canvasTexture","anisotropy","capabilities","getMaxAnisotropy","images","Image","src","useFrame","w","h","d2r","PI","res","mapLinear","globalCompositeOperation","clearRect","isArray","Array","array","number","tl","tr","br","bl","beginPath","moveTo","lineTo","arc","closePath","globalAlpha","fillStyle","lineWidth","fill","ox","oy","undefined","x","y","sx","sy","sw","sh","ir","cr","dw","dh","dx","dy","save","clip","drawImage","restore","canvasTxt","min","textBaseline","stroke","strokeStyle","needsUpdate","setCurrentChildren","childGroupRefs","map","size","refs","includes","reverse","forEach","childrenWidth","reduce","child","childrenHeight","contentSize","axis","axisInverted","length","i","spacing","layout","current","position","layerProviderValue","nextCurrentChildren","findIndex","value","push","sort","a","b","filter","childrenGroup","traverse","object","material","transparent","Provider","args","side","depthWrite","key","ForwardedLayer","displayName","Button","selected","onClick","pointerOver","setPointerOver","onPointerOver","onPointerOut","event","Example","room","BoxLineGeometry","translate","legacy","flat","linear","alpha","attach","geometry","makeDefault","target","Typography","setFontFamily"],"sourceRoot":""}